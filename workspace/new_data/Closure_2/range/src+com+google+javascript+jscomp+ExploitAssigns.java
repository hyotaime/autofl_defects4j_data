{
  "filepath": "/tmp/Closure-2b/src/com/google/javascript/jscomp/ExploitAssigns.java",
  "nodes": [
    {
      "type": "class_interface",
      "name": "ExploitAssigns",
      "is_interface": false,
      "parent_types": [
        "com.google.javascript.jscomp.AbstractPeepholeOptimization"
      ],
      "begin_line": 29,
      "end_line": 244,
      "comment": "\n * Tries to chain assignments together.\n *\n * @author nicksantos@google.com (Nick Santos)\n * @author acleung@google.com (Alan Leung)\n *\n "
    },
    {
      "type": "method",
      "signature": "com.google.javascript.jscomp.ExploitAssigns.optimizeSubtree(com.google.javascript.rhino.Node)",
      "begin_line": 31,
      "end_line": 41,
      "comment": "",
      "child_ranges": [
        "(line 33,col 5)-(line 39,col 5)",
        "(line 40,col 5)-(line 40,col 19)"
      ]
    },
    {
      "type": "method",
      "signature": "com.google.javascript.jscomp.ExploitAssigns.collapseAssign(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)",
      "begin_line": 46,
      "end_line": 60,
      "comment": "\n   * Try to collapse the given assign into subsequent expressions.\n   ",
      "child_ranges": [
        "(line 48,col 5)-(line 48,col 44)",
        "(line 49,col 5)-(line 49,col 42)",
        "(line 50,col 5)-(line 59,col 5)"
      ]
    },
    {
      "type": "method",
      "signature": "com.google.javascript.jscomp.ExploitAssigns.isCollapsibleValue(com.google.javascript.rhino.Node, boolean)",
      "begin_line": 76,
      "end_line": 91,
      "comment": "\n   * Determines whether we know enough about the given value to be able\n   * to collapse it into subsequent expressions.\n   *\n   * For example, we can collapse booleans and variable names:\n   * \u003ccode\u003e\n   * x \u003d 3; y \u003d x; // y \u003d x \u003d 3;\n   * a \u003d true; b \u003d true; // b \u003d a \u003d true;\n   * \u003ccode\u003e\n   * But we won\u0027t try to collapse complex expressions.\n   *\n   * @param value The value node.\n   * @param isLValue Whether it\u0027s on the left-hand side of an expr.\n   ",
      "child_ranges": [
        "(line 77,col 5)-(line 90,col 5)"
      ]
    },
    {
      "type": "method",
      "signature": "com.google.javascript.jscomp.ExploitAssigns.collapseAssignEqualTo(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)",
      "begin_line": 108,
      "end_line": 199,
      "comment": "\n   * Collapse the given assign expression into the expression directly\n   * following it, if possible.\n   *\n   * @param expr The expression that may be moved.\n   * @param exprParent The parent of {@code expr}.\n   * @param value The value of this expression, expressed as a node. Each\n   *     expression may have multiple values, so this function may be called\n   *     multiple times for the same expression. For example,\n   *     \u003ccode\u003e\n   *     a \u003d true;\n   *     \u003c/code\u003e\n   *     is equal to the name \"a\" and the boolean \"true\".\n   * @return Whether the expression was collapsed successfully.\n   ",
      "child_ranges": [
        "(line 110,col 5)-(line 110,col 39)",
        "(line 111,col 5)-(line 111,col 29)",
        "(line 112,col 5)-(line 112,col 31)",
        "(line 113,col 5)-(line 196,col 5)",
        "(line 198,col 5)-(line 198,col 17)"
      ]
    },
    {
      "type": "method",
      "signature": "com.google.javascript.jscomp.ExploitAssigns.isSafeReplacement(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)",
      "begin_line": 206,
      "end_line": 220,
      "comment": "\n   * Checks name referenced in node to determine if it might have\n   * changed.\n   * @return Whether the replacement can be made.\n   ",
      "child_ranges": [
        "(line 208,col 5)-(line 210,col 5)",
        "(line 211,col 5)-(line 211,col 50)",
        "(line 213,col 5)-(line 213,col 37)",
        "(line 214,col 5)-(line 217,col 5)",
        "(line 219,col 5)-(line 219,col 16)"
      ]
    },
    {
      "type": "method",
      "signature": "com.google.javascript.jscomp.ExploitAssigns.isNameAssignedTo(java.lang.String, com.google.javascript.rhino.Node)",
      "begin_line": 226,
      "end_line": 243,
      "comment": "",
      "child_ranges": [
        "(line 227,col 5)-(line 231,col 5)",
        "(line 233,col 5)-(line 240,col 5)",
        "(line 242,col 5)-(line 242,col 17)"
      ]
    }
  ]
}