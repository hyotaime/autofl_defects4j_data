{
  "filepath": "/tmp/Codec-5b/src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
  "nodes": [
    {
      "type": "class_interface",
      "name": "DoubleMetaphoneTest",
      "is_interface": false,
      "parent_types": [
        "StringEncoderAbstractTest"
      ],
      "begin_line": 31,
      "end_line": 1245,
      "comment": "\n * Tests {@link DoubleMetaphone}.\n * \n * @see \"http://www.cuj.com/documents/s\u003d8038/cuj0006philips/\"\n * @author Apache Software Foundation\n * @version $Id$\n "
    },
    {
      "type": "field",
      "varNames": [
        "FIXTURE"
      ],
      "begin_line": 42,
      "end_line": 589,
      "comment": "\n     * Test data from http://aspell.sourceforge.net/test/batch0.tab.\n     * \n     * \"Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org). Verbatim copying\n     * and distribution of this entire article is permitted in any medium,\n     * provided this notice is preserved.\"\n     * \n     * Massaged the test data in the array below.\n     "
    },
    {
      "type": "field",
      "varNames": [
        "MATCHES"
      ],
      "begin_line": 594,
      "end_line": 999,
      "comment": "\n     * A subset of FIXTURE generated by this test.\n     "
    },
    {
      "type": "field",
      "varNames": [
        "doubleMetaphone"
      ],
      "begin_line": 1001,
      "end_line": 1001,
      "comment": ""
    },
    {
      "type": "constructor",
      "signature": "org.apache.commons.codec.language.DoubleMetaphoneTest.DoubleMetaphoneTest(java.lang.String)",
      "begin_line": 1003,
      "end_line": 1005,
      "comment": "",
      "child_ranges": [
        "(line 1004,col 9)-(line 1004,col 20)"
      ]
    },
    {
      "type": "method",
      "signature": "org.apache.commons.codec.language.DoubleMetaphoneTest.assertDoubleMetaphone(java.lang.String, java.lang.String)",
      "begin_line": 1010,
      "end_line": 1019,
      "comment": "\n     * Tests encoding APIs in one place.\n     ",
      "child_ranges": [
        "(line 1011,col 9)-(line 1011,col 73)",
        "(line 1012,col 9)-(line 1016,col 9)",
        "(line 1017,col 9)-(line 1017,col 82)",
        "(line 1018,col 9)-(line 1018,col 89)"
      ]
    },
    {
      "type": "method",
      "signature": "org.apache.commons.codec.language.DoubleMetaphoneTest.assertDoubleMetaphoneAlt(java.lang.String, java.lang.String)",
      "begin_line": 1024,
      "end_line": 1026,
      "comment": "\n     * Tests encoding APIs in one place.\n     ",
      "child_ranges": [
        "(line 1025,col 9)-(line 1025,col 88)"
      ]
    },
    {
      "type": "method",
      "signature": "org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest(java.lang.String[][], boolean)",
      "begin_line": 1028,
      "end_line": 1041,
      "comment": "",
      "child_ranges": [
        "(line 1029,col 9)-(line 1029,col 36)",
        "(line 1030,col 9)-(line 1040,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest(boolean)",
      "begin_line": 1043,
      "end_line": 1051,
      "comment": "",
      "child_ranges": [
        "(line 1044,col 9)-(line 1044,col 98)",
        "(line 1045,col 9)-(line 1045,col 98)",
        "(line 1047,col 9)-(line 1050,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.apache.commons.codec.language.DoubleMetaphoneTest.getDoubleMetaphone()",
      "begin_line": 1053,
      "end_line": 1055,
      "comment": "",
      "child_ranges": [
        "(line 1054,col 9)-(line 1054,col 36)"
      ]
    },
    {
      "type": "method",
      "signature": "org.apache.commons.codec.language.DoubleMetaphoneTest.makeEncoder()",
      "begin_line": 1057,
      "end_line": 1059,
      "comment": "",
      "child_ranges": [
        "(line 1058,col 9)-(line 1058,col 31)"
      ]
    },
    {
      "type": "method",
      "signature": "org.apache.commons.codec.language.DoubleMetaphoneTest.setDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphone)",
      "begin_line": 1061,
      "end_line": 1063,
      "comment": "",
      "child_ranges": [
        "(line 1062,col 9)-(line 1062,col 47)"
      ]
    },
    {
      "type": "method",
      "signature": "org.apache.commons.codec.language.DoubleMetaphoneTest.setUp()",
      "begin_line": 1065,
      "end_line": 1068,
      "comment": "",
      "child_ranges": [
        "(line 1066,col 9)-(line 1066,col 22)",
        "(line 1067,col 9)-(line 1067,col 55)"
      ]
    },
    {
      "type": "method",
      "signature": "org.apache.commons.codec.language.DoubleMetaphoneTest.tearDown()",
      "begin_line": 1070,
      "end_line": 1073,
      "comment": "",
      "child_ranges": [
        "(line 1071,col 9)-(line 1071,col 25)",
        "(line 1072,col 9)-(line 1072,col 38)"
      ]
    },
    {
      "type": "method",
      "signature": "org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone()",
      "begin_line": 1075,
      "end_line": 1113,
      "comment": "",
      "child_ranges": [
        "(line 1076,col 9)-(line 1076,col 49)",
        "(line 1077,col 9)-(line 1077,col 42)",
        "(line 1078,col 9)-(line 1078,col 45)",
        "(line 1079,col 9)-(line 1079,col 46)",
        "(line 1080,col 9)-(line 1080,col 44)",
        "(line 1081,col 9)-(line 1081,col 48)",
        "(line 1082,col 9)-(line 1082,col 45)",
        "(line 1083,col 9)-(line 1083,col 42)",
        "(line 1084,col 9)-(line 1084,col 44)",
        "(line 1085,col 9)-(line 1085,col 45)",
        "(line 1086,col 9)-(line 1086,col 53)",
        "(line 1087,col 9)-(line 1087,col 49)",
        "(line 1088,col 9)-(line 1088,col 51)",
        "(line 1089,col 9)-(line 1089,col 52)",
        "(line 1090,col 9)-(line 1090,col 50)",
        "(line 1091,col 9)-(line 1091,col 52)",
        "(line 1093,col 9)-(line 1093,col 52)",
        "(line 1094,col 9)-(line 1094,col 45)",
        "(line 1095,col 9)-(line 1095,col 48)",
        "(line 1096,col 9)-(line 1096,col 49)",
        "(line 1097,col 9)-(line 1097,col 47)",
        "(line 1098,col 9)-(line 1098,col 51)",
        "(line 1099,col 9)-(line 1099,col 48)",
        "(line 1100,col 9)-(line 1100,col 45)",
        "(line 1101,col 9)-(line 1101,col 47)",
        "(line 1102,col 9)-(line 1102,col 48)",
        "(line 1103,col 9)-(line 1103,col 56)",
        "(line 1104,col 9)-(line 1104,col 52)",
        "(line 1105,col 9)-(line 1105,col 55)",
        "(line 1106,col 9)-(line 1106,col 55)",
        "(line 1107,col 9)-(line 1107,col 53)",
        "(line 1108,col 9)-(line 1108,col 55)",
        "(line 1109,col 9)-(line 1109,col 50)",
        "(line 1110,col 9)-(line 1110,col 48)",
        "(line 1111,col 9)-(line 1111,col 48)",
        "(line 1112,col 9)-(line 1112,col 50)"
      ]
    },
    {
      "type": "method",
      "signature": "org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty()",
      "begin_line": 1115,
      "end_line": 1120,
      "comment": "",
      "child_ranges": [
        "(line 1116,col 9)-(line 1116,col 76)",
        "(line 1117,col 9)-(line 1117,col 74)",
        "(line 1118,col 9)-(line 1118,col 75)",
        "(line 1119,col 9)-(line 1119,col 81)"
      ]
    },
    {
      "type": "method",
      "signature": "org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength()",
      "begin_line": 1125,
      "end_line": 1140,
      "comment": "\n     * Test setting maximum length\n     ",
      "child_ranges": [
        "(line 1126,col 9)-(line 1126,col 32)",
        "(line 1128,col 9)-(line 1128,col 64)",
        "(line 1131,col 9)-(line 1131,col 84)",
        "(line 1132,col 9)-(line 1132,col 97)",
        "(line 1133,col 9)-(line 1133,col 96)",
        "(line 1136,col 9)-(line 1136,col 41)",
        "(line 1137,col 9)-(line 1137,col 80)",
        "(line 1138,col 9)-(line 1138,col 94)",
        "(line 1139,col 9)-(line 1139,col 93)"
      ]
    },
    {
      "type": "method",
      "signature": "org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic()",
      "begin_line": 1142,
      "end_line": 1155,
      "comment": "",
      "child_ranges": [
        "(line 1143,col 9)-(line 1152,col 10)",
        "(line 1153,col 9)-(line 1153,col 53)",
        "(line 1154,col 9)-(line 1154,col 52)"
      ]
    },
    {
      "type": "method",
      "signature": "org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended1()",
      "begin_line": 1160,
      "end_line": 1165,
      "comment": "\n     * Example in the original article but failures in this Java impl:\n     ",
      "child_ranges": []
    },
    {
      "type": "method",
      "signature": "org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2()",
      "begin_line": 1167,
      "end_line": 1172,
      "comment": "",
      "child_ranges": [
        "(line 1168,col 9)-(line 1169,col 10)",
        "(line 1171,col 9)-(line 1171,col 52)"
      ]
    },
    {
      "type": "method",
      "signature": "org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3()",
      "begin_line": 1178,
      "end_line": 1207,
      "comment": "\n     * Used to generate the MATCHES array and test possible matches from the\n     * FIXTURE arrary.\n     ",
      "child_ranges": [
        "(line 1179,col 9)-(line 1179,col 38)",
        "(line 1180,col 9)-(line 1180,col 51)",
        "(line 1181,col 9)-(line 1181,col 50)",
        "(line 1182,col 9)-(line 1182,col 57)",
        "(line 1183,col 9)-(line 1183,col 75)",
        "(line 1184,col 9)-(line 1184,col 26)",
        "(line 1185,col 9)-(line 1197,col 9)",
        "(line 1198,col 9)-(line 1198,col 41)",
        "(line 1199,col 9)-(line 1199,col 29)",
        "(line 1202,col 9)-(line 1206,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES()",
      "begin_line": 1209,
      "end_line": 1220,
      "comment": "",
      "child_ranges": [
        "(line 1210,col 9)-(line 1210,col 38)",
        "(line 1211,col 9)-(line 1219,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual()",
      "begin_line": 1222,
      "end_line": 1225,
      "comment": "",
      "child_ranges": [
        "(line 1223,col 9)-(line 1223,col 43)",
        "(line 1224,col 9)-(line 1224,col 42)"
      ]
    },
    {
      "type": "method",
      "signature": "org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla()",
      "begin_line": 1227,
      "end_line": 1229,
      "comment": "",
      "child_ranges": [
        "(line 1228,col 9)-(line 1228,col 67)"
      ]
    },
    {
      "type": "method",
      "signature": "org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde()",
      "begin_line": 1231,
      "end_line": 1233,
      "comment": "",
      "child_ranges": [
        "(line 1232,col 9)-(line 1232,col 67)"
      ]
    },
    {
      "type": "method",
      "signature": "org.apache.commons.codec.language.DoubleMetaphoneTest.validateFixture(java.lang.String[][])",
      "begin_line": 1235,
      "end_line": 1244,
      "comment": "",
      "child_ranges": [
        "(line 1236,col 9)-(line 1238,col 9)",
        "(line 1239,col 9)-(line 1243,col 9)"
      ]
    }
  ]
}