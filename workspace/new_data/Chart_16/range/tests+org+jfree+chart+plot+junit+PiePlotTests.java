{
  "filepath": "/tmp/Chart-16b/tests/org/jfree/chart/plot/junit/PiePlotTests.java",
  "nodes": [
    {
      "type": "class_interface",
      "name": "PiePlotTests",
      "is_interface": false,
      "parent_types": [
        "TestCase"
      ],
      "begin_line": 85,
      "end_line": 637,
      "comment": "\n * Some tests for the {@link PiePlot} class.\n "
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.PiePlotTests.suite()",
      "begin_line": 92,
      "end_line": 94,
      "comment": "\n     * Returns the tests as a test suite.\n     *\n     * @return The test suite.\n     ",
      "child_ranges": [
        "(line 93,col 9)-(line 93,col 49)"
      ]
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.plot.junit.PiePlotTests.PiePlotTests(java.lang.String)",
      "begin_line": 101,
      "end_line": 103,
      "comment": "\n     * Constructs a new set of tests.\n     *\n     * @param name  the name of the tests.\n     ",
      "child_ranges": [
        "(line 102,col 9)-(line 102,col 20)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.PiePlotTests.testEquals()",
      "begin_line": 108,
      "end_line": 393,
      "comment": "\n     * Test the equals() method.\n     ",
      "child_ranges": [
        "(line 110,col 9)-(line 110,col 38)",
        "(line 111,col 9)-(line 111,col 38)",
        "(line 112,col 9)-(line 112,col 40)",
        "(line 113,col 9)-(line 113,col 40)",
        "(line 116,col 9)-(line 116,col 30)",
        "(line 117,col 9)-(line 117,col 41)",
        "(line 118,col 9)-(line 118,col 30)",
        "(line 119,col 9)-(line 119,col 40)",
        "(line 122,col 9)-(line 122,col 35)",
        "(line 123,col 9)-(line 123,col 41)",
        "(line 124,col 9)-(line 124,col 35)",
        "(line 125,col 9)-(line 125,col 40)",
        "(line 128,col 9)-(line 128,col 47)",
        "(line 129,col 9)-(line 129,col 41)",
        "(line 130,col 9)-(line 130,col 33)",
        "(line 131,col 9)-(line 131,col 40)",
        "(line 134,col 9)-(line 134,col 37)",
        "(line 135,col 9)-(line 135,col 41)",
        "(line 136,col 9)-(line 136,col 37)",
        "(line 137,col 9)-(line 137,col 40)",
        "(line 140,col 9)-(line 140,col 51)",
        "(line 141,col 9)-(line 141,col 41)",
        "(line 142,col 9)-(line 142,col 51)",
        "(line 143,col 9)-(line 143,col 40)",
        "(line 146,col 9)-(line 146,col 40)",
        "(line 147,col 9)-(line 147,col 41)",
        "(line 148,col 9)-(line 148,col 41)",
        "(line 149,col 9)-(line 149,col 40)",
        "(line 150,col 9)-(line 150,col 40)",
        "(line 153,col 9)-(line 153,col 40)",
        "(line 154,col 9)-(line 154,col 41)",
        "(line 155,col 9)-(line 155,col 41)",
        "(line 156,col 9)-(line 156,col 40)",
        "(line 157,col 9)-(line 157,col 40)",
        "(line 160,col 9)-(line 161,col 42)",
        "(line 162,col 9)-(line 162,col 41)",
        "(line 163,col 9)-(line 164,col 42)",
        "(line 165,col 9)-(line 165,col 40)",
        "(line 168,col 9)-(line 169,col 42)",
        "(line 170,col 9)-(line 170,col 41)",
        "(line 171,col 9)-(line 172,col 42)",
        "(line 173,col 9)-(line 173,col 40)",
        "(line 176,col 9)-(line 176,col 47)",
        "(line 177,col 9)-(line 177,col 41)",
        "(line 178,col 9)-(line 178,col 47)",
        "(line 179,col 9)-(line 179,col 40)",
        "(line 182,col 9)-(line 183,col 55)",
        "(line 184,col 9)-(line 184,col 41)",
        "(line 185,col 9)-(line 186,col 55)",
        "(line 187,col 9)-(line 187,col 40)",
        "(line 190,col 9)-(line 191,col 54)",
        "(line 192,col 9)-(line 192,col 41)",
        "(line 193,col 9)-(line 194,col 54)",
        "(line 195,col 9)-(line 195,col 40)",
        "(line 198,col 9)-(line 198,col 66)",
        "(line 199,col 9)-(line 199,col 41)",
        "(line 200,col 9)-(line 200,col 66)",
        "(line 201,col 9)-(line 201,col 40)",
        "(line 204,col 9)-(line 204,col 65)",
        "(line 205,col 9)-(line 205,col 41)",
        "(line 206,col 9)-(line 206,col 65)",
        "(line 207,col 9)-(line 207,col 40)",
        "(line 210,col 9)-(line 211,col 42)",
        "(line 212,col 9)-(line 212,col 41)",
        "(line 213,col 9)-(line 214,col 42)",
        "(line 215,col 9)-(line 215,col 40)",
        "(line 218,col 9)-(line 218,col 36)",
        "(line 219,col 9)-(line 219,col 41)",
        "(line 220,col 9)-(line 220,col 36)",
        "(line 221,col 9)-(line 221,col 40)",
        "(line 224,col 9)-(line 224,col 36)",
        "(line 225,col 9)-(line 225,col 41)",
        "(line 226,col 9)-(line 226,col 36)",
        "(line 227,col 9)-(line 227,col 40)",
        "(line 230,col 9)-(line 230,col 62)",
        "(line 231,col 9)-(line 231,col 41)",
        "(line 232,col 9)-(line 232,col 62)",
        "(line 233,col 9)-(line 233,col 40)",
        "(line 236,col 9)-(line 237,col 42)",
        "(line 238,col 9)-(line 238,col 41)",
        "(line 239,col 9)-(line 240,col 42)",
        "(line 241,col 9)-(line 241,col 40)",
        "(line 244,col 9)-(line 245,col 42)",
        "(line 246,col 9)-(line 246,col 41)",
        "(line 247,col 9)-(line 248,col 42)",
        "(line 249,col 9)-(line 249,col 40)",
        "(line 252,col 9)-(line 253,col 42)",
        "(line 254,col 9)-(line 254,col 41)",
        "(line 255,col 9)-(line 256,col 42)",
        "(line 257,col 9)-(line 257,col 40)",
        "(line 260,col 9)-(line 260,col 41)",
        "(line 261,col 9)-(line 261,col 39)",
        "(line 262,col 9)-(line 262,col 41)",
        "(line 263,col 9)-(line 263,col 39)",
        "(line 264,col 9)-(line 264,col 40)",
        "(line 267,col 9)-(line 268,col 42)",
        "(line 269,col 9)-(line 269,col 41)",
        "(line 270,col 9)-(line 271,col 42)",
        "(line 272,col 9)-(line 272,col 40)",
        "(line 275,col 9)-(line 275,col 43)",
        "(line 276,col 9)-(line 276,col 41)",
        "(line 277,col 9)-(line 277,col 43)",
        "(line 278,col 9)-(line 278,col 40)",
        "(line 281,col 9)-(line 282,col 30)",
        "(line 283,col 9)-(line 283,col 41)",
        "(line 284,col 9)-(line 285,col 30)",
        "(line 286,col 9)-(line 286,col 40)",
        "(line 289,col 9)-(line 289,col 55)",
        "(line 290,col 9)-(line 290,col 30)",
        "(line 291,col 9)-(line 291,col 41)",
        "(line 292,col 9)-(line 292,col 30)",
        "(line 293,col 9)-(line 293,col 40)",
        "(line 296,col 9)-(line 297,col 42)",
        "(line 298,col 9)-(line 298,col 41)",
        "(line 299,col 9)-(line 300,col 42)",
        "(line 301,col 9)-(line 301,col 40)",
        "(line 304,col 9)-(line 304,col 41)",
        "(line 305,col 9)-(line 305,col 41)",
        "(line 306,col 9)-(line 306,col 41)",
        "(line 307,col 9)-(line 307,col 40)",
        "(line 310,col 9)-(line 310,col 32)",
        "(line 311,col 9)-(line 311,col 41)",
        "(line 312,col 9)-(line 312,col 32)",
        "(line 313,col 9)-(line 313,col 40)",
        "(line 316,col 9)-(line 316,col 42)",
        "(line 317,col 9)-(line 317,col 41)",
        "(line 318,col 9)-(line 318,col 42)",
        "(line 319,col 9)-(line 319,col 40)",
        "(line 322,col 9)-(line 322,col 39)",
        "(line 323,col 9)-(line 323,col 41)",
        "(line 324,col 9)-(line 324,col 39)",
        "(line 325,col 9)-(line 325,col 40)",
        "(line 328,col 9)-(line 329,col 42)",
        "(line 330,col 9)-(line 330,col 41)",
        "(line 331,col 9)-(line 332,col 42)",
        "(line 333,col 9)-(line 333,col 40)",
        "(line 336,col 9)-(line 336,col 56)",
        "(line 337,col 9)-(line 337,col 41)",
        "(line 338,col 9)-(line 338,col 56)",
        "(line 339,col 9)-(line 339,col 40)",
        "(line 342,col 9)-(line 344,col 10)",
        "(line 345,col 9)-(line 345,col 41)",
        "(line 346,col 9)-(line 348,col 10)",
        "(line 349,col 9)-(line 349,col 40)",
        "(line 352,col 9)-(line 352,col 65)",
        "(line 353,col 9)-(line 353,col 41)",
        "(line 354,col 9)-(line 354,col 65)",
        "(line 355,col 9)-(line 355,col 40)",
        "(line 358,col 9)-(line 358,col 44)",
        "(line 359,col 9)-(line 359,col 41)",
        "(line 360,col 9)-(line 360,col 44)",
        "(line 361,col 9)-(line 361,col 40)",
        "(line 364,col 9)-(line 364,col 77)",
        "(line 365,col 9)-(line 365,col 41)",
        "(line 366,col 9)-(line 366,col 77)",
        "(line 367,col 9)-(line 367,col 40)",
        "(line 370,col 9)-(line 371,col 32)",
        "(line 372,col 9)-(line 372,col 41)",
        "(line 373,col 9)-(line 374,col 32)",
        "(line 375,col 9)-(line 375,col 40)",
        "(line 378,col 9)-(line 379,col 68)",
        "(line 380,col 9)-(line 380,col 41)",
        "(line 381,col 9)-(line 382,col 68)",
        "(line 383,col 9)-(line 383,col 40)",
        "(line 386,col 9)-(line 387,col 31)",
        "(line 388,col 9)-(line 388,col 41)",
        "(line 389,col 9)-(line 390,col 31)",
        "(line 391,col 9)-(line 391,col 40)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.PiePlotTests.testCloning()",
      "begin_line": 398,
      "end_line": 410,
      "comment": "\n     * Some basic checks for the clone() method.\n     ",
      "child_ranges": [
        "(line 399,col 9)-(line 399,col 35)",
        "(line 400,col 9)-(line 400,col 26)",
        "(line 401,col 9)-(line 406,col 9)",
        "(line 407,col 9)-(line 407,col 29)",
        "(line 408,col 9)-(line 408,col 51)",
        "(line 409,col 9)-(line 409,col 34)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.PiePlotTests.testCloning_URLGenerator()",
      "begin_line": 415,
      "end_line": 432,
      "comment": "\n     * Check cloning of the urlGenerator field.\n     ",
      "child_ranges": [
        "(line 416,col 9)-(line 416,col 70)",
        "(line 417,col 9)-(line 417,col 35)",
        "(line 418,col 9)-(line 418,col 38)",
        "(line 419,col 9)-(line 419,col 26)",
        "(line 420,col 9)-(line 425,col 9)",
        "(line 426,col 9)-(line 426,col 29)",
        "(line 427,col 9)-(line 427,col 51)",
        "(line 428,col 9)-(line 428,col 34)",
        "(line 431,col 9)-(line 431,col 65)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.PiePlotTests.testCloning_LegendItemShape()",
      "begin_line": 437,
      "end_line": 455,
      "comment": "\n     * Check cloning of the legendItemShape field.\n     ",
      "child_ranges": [
        "(line 438,col 9)-(line 438,col 54)",
        "(line 439,col 9)-(line 439,col 35)",
        "(line 440,col 9)-(line 440,col 37)",
        "(line 441,col 9)-(line 441,col 26)",
        "(line 442,col 9)-(line 447,col 9)",
        "(line 448,col 9)-(line 448,col 29)",
        "(line 449,col 9)-(line 449,col 51)",
        "(line 450,col 9)-(line 450,col 34)",
        "(line 453,col 9)-(line 453,col 42)",
        "(line 454,col 9)-(line 454,col 35)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.PiePlotTests.testCloning_LegendLabelGenerator()",
      "begin_line": 460,
      "end_line": 479,
      "comment": "\n     * Check cloning of the legendLabelGenerator field.\n     ",
      "child_ranges": [
        "(line 461,col 9)-(line 462,col 57)",
        "(line 463,col 9)-(line 463,col 35)",
        "(line 464,col 9)-(line 464,col 46)",
        "(line 465,col 9)-(line 465,col 26)",
        "(line 466,col 9)-(line 471,col 9)",
        "(line 472,col 9)-(line 472,col 29)",
        "(line 473,col 9)-(line 473,col 51)",
        "(line 474,col 9)-(line 474,col 34)",
        "(line 477,col 9)-(line 477,col 64)",
        "(line 478,col 9)-(line 478,col 35)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.PiePlotTests.testCloning_LegendLabelToolTipGenerator()",
      "begin_line": 484,
      "end_line": 503,
      "comment": "\n     * Check cloning of the legendLabelToolTipGenerator field.\n     ",
      "child_ranges": [
        "(line 485,col 9)-(line 486,col 57)",
        "(line 487,col 9)-(line 487,col 35)",
        "(line 488,col 9)-(line 488,col 53)",
        "(line 489,col 9)-(line 489,col 26)",
        "(line 490,col 9)-(line 495,col 9)",
        "(line 496,col 9)-(line 496,col 29)",
        "(line 497,col 9)-(line 497,col 51)",
        "(line 498,col 9)-(line 498,col 34)",
        "(line 501,col 9)-(line 501,col 64)",
        "(line 502,col 9)-(line 502,col 35)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.PiePlotTests.testCloning_LegendLabelURLGenerator()",
      "begin_line": 508,
      "end_line": 526,
      "comment": "\n     * Check cloning of the legendLabelURLGenerator field.\n     ",
      "child_ranges": [
        "(line 509,col 9)-(line 509,col 70)",
        "(line 510,col 9)-(line 510,col 35)",
        "(line 511,col 9)-(line 511,col 49)",
        "(line 512,col 9)-(line 512,col 26)",
        "(line 513,col 9)-(line 518,col 9)",
        "(line 519,col 9)-(line 519,col 29)",
        "(line 520,col 9)-(line 520,col 51)",
        "(line 521,col 9)-(line 521,col 34)",
        "(line 524,col 9)-(line 525,col 52)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.PiePlotTests.testSerialization()",
      "begin_line": 531,
      "end_line": 549,
      "comment": "\n     * Serialize an instance, restore it, and check for equality.\n     ",
      "child_ranges": [
        "(line 532,col 9)-(line 532,col 39)",
        "(line 533,col 9)-(line 533,col 26)",
        "(line 534,col 9)-(line 547,col 9)",
        "(line 548,col 9)-(line 548,col 29)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.PiePlotTests.testGetLegendItems()",
      "begin_line": 554,
      "end_line": 581,
      "comment": "\n     * Some checks for the getLegendItems() method.\n     ",
      "child_ranges": [
        "(line 555,col 9)-(line 555,col 60)",
        "(line 556,col 9)-(line 556,col 40)",
        "(line 557,col 9)-(line 557,col 40)",
        "(line 558,col 9)-(line 558,col 40)",
        "(line 559,col 9)-(line 559,col 41)",
        "(line 561,col 9)-(line 561,col 44)",
        "(line 562,col 9)-(line 562,col 40)",
        "(line 563,col 9)-(line 563,col 40)",
        "(line 564,col 9)-(line 564,col 59)",
        "(line 565,col 9)-(line 565,col 46)",
        "(line 568,col 9)-(line 568,col 39)",
        "(line 569,col 9)-(line 569,col 38)",
        "(line 570,col 9)-(line 570,col 46)",
        "(line 573,col 9)-(line 573,col 39)",
        "(line 574,col 9)-(line 574,col 38)",
        "(line 575,col 9)-(line 575,col 46)",
        "(line 578,col 9)-(line 578,col 41)",
        "(line 579,col 9)-(line 579,col 38)",
        "(line 580,col 9)-(line 580,col 46)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.PiePlotTests.testGetBaseSectionPaint()",
      "begin_line": 587,
      "end_line": 599,
      "comment": "\n     * Check that the default base section paint is not null, and that you \n     * can never set it to null.\n     ",
      "child_ranges": [
        "(line 588,col 9)-(line 588,col 37)",
        "(line 589,col 9)-(line 589,col 50)",
        "(line 591,col 9)-(line 591,col 29)",
        "(line 592,col 9)-(line 597,col 9)",
        "(line 598,col 9)-(line 598,col 25)"
      ]
    },
    {
      "type": "class_interface",
      "name": "NullLegendLabelGenerator",
      "is_interface": false,
      "parent_types": [
        "org.jfree.chart.labels.PieSectionLabelGenerator"
      ],
      "begin_line": 601,
      "end_line": 609,
      "comment": ""
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.PiePlotTests.NullLegendLabelGenerator.generateAttributedSectionLabel(org.jfree.data.general.PieDataset, java.lang.Comparable)",
      "begin_line": 602,
      "end_line": 605,
      "comment": "",
      "child_ranges": [
        "(line 604,col 13)-(line 604,col 24)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.PiePlotTests.NullLegendLabelGenerator.generateSectionLabel(org.jfree.data.general.PieDataset, java.lang.Comparable)",
      "begin_line": 606,
      "end_line": 608,
      "comment": "",
      "child_ranges": [
        "(line 607,col 13)-(line 607,col 24)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.PiePlotTests.testDrawWithNullLegendLabels()",
      "begin_line": 614,
      "end_line": 635,
      "comment": "\n     * Draws a pie chart where the label generator returns null.\n     ",
      "child_ranges": [
        "(line 615,col 9)-(line 615,col 60)",
        "(line 616,col 9)-(line 616,col 37)",
        "(line 617,col 9)-(line 617,col 37)",
        "(line 618,col 9)-(line 619,col 30)",
        "(line 620,col 9)-(line 620,col 49)",
        "(line 621,col 9)-(line 621,col 69)",
        "(line 622,col 9)-(line 622,col 32)",
        "(line 623,col 9)-(line 633,col 9)",
        "(line 634,col 9)-(line 634,col 28)"
      ]
    }
  ]
}