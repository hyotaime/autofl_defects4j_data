{
  "filepath": "/tmp/Chart-16b/tests/org/jfree/chart/axis/junit/AxisTests.java",
  "nodes": [
    {
      "type": "class_interface",
      "name": "AxisTests",
      "is_interface": false,
      "parent_types": [
        "TestCase"
      ],
      "begin_line": 62,
      "end_line": 256,
      "comment": "\n * Tests for the {@link Axis} class.\n "
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.axis.junit.AxisTests.suite()",
      "begin_line": 69,
      "end_line": 71,
      "comment": "\n     * Returns the tests as a test suite.\n     *\n     * @return The test suite.\n     ",
      "child_ranges": [
        "(line 70,col 9)-(line 70,col 46)"
      ]
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.axis.junit.AxisTests.AxisTests(java.lang.String)",
      "begin_line": 78,
      "end_line": 80,
      "comment": "\n     * Constructs a new set of tests.\n     *\n     * @param name  the name of the tests.\n     ",
      "child_ranges": [
        "(line 79,col 9)-(line 79,col 20)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.axis.junit.AxisTests.testCloning()",
      "begin_line": 85,
      "end_line": 98,
      "comment": "\n     * Confirm that cloning works.\n     ",
      "child_ranges": [
        "(line 86,col 9)-(line 86,col 51)",
        "(line 87,col 9)-(line 87,col 39)",
        "(line 88,col 9)-(line 88,col 31)",
        "(line 89,col 9)-(line 94,col 9)",
        "(line 95,col 9)-(line 95,col 29)",
        "(line 96,col 9)-(line 96,col 51)",
        "(line 97,col 9)-(line 97,col 34)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.axis.junit.AxisTests.testEquals()",
      "begin_line": 103,
      "end_line": 242,
      "comment": "\n     * Confirm that the equals method can distinguish all the required fields.\n     ",
      "child_ranges": [
        "(line 105,col 9)-(line 105,col 43)",
        "(line 106,col 9)-(line 106,col 43)",
        "(line 107,col 9)-(line 107,col 34)",
        "(line 110,col 9)-(line 110,col 29)",
        "(line 111,col 9)-(line 111,col 35)",
        "(line 112,col 9)-(line 112,col 29)",
        "(line 113,col 9)-(line 113,col 34)",
        "(line 116,col 9)-(line 116,col 33)",
        "(line 117,col 9)-(line 117,col 35)",
        "(line 118,col 9)-(line 118,col 33)",
        "(line 119,col 9)-(line 119,col 34)",
        "(line 122,col 9)-(line 122,col 59)",
        "(line 123,col 9)-(line 123,col 35)",
        "(line 124,col 9)-(line 124,col 59)",
        "(line 125,col 9)-(line 125,col 34)",
        "(line 128,col 9)-(line 129,col 42)",
        "(line 130,col 9)-(line 130,col 35)",
        "(line 131,col 9)-(line 132,col 42)",
        "(line 133,col 9)-(line 133,col 34)",
        "(line 136,col 9)-(line 136,col 71)",
        "(line 137,col 9)-(line 137,col 35)",
        "(line 138,col 9)-(line 138,col 71)",
        "(line 139,col 9)-(line 139,col 34)",
        "(line 142,col 9)-(line 142,col 31)",
        "(line 143,col 9)-(line 143,col 35)",
        "(line 144,col 9)-(line 144,col 31)",
        "(line 145,col 9)-(line 145,col 34)",
        "(line 147,col 9)-(line 147,col 34)",
        "(line 148,col 9)-(line 148,col 35)",
        "(line 149,col 9)-(line 149,col 34)",
        "(line 150,col 9)-(line 150,col 34)",
        "(line 152,col 9)-(line 152,col 30)",
        "(line 153,col 9)-(line 153,col 35)",
        "(line 154,col 9)-(line 154,col 30)",
        "(line 155,col 9)-(line 155,col 34)",
        "(line 158,col 9)-(line 158,col 37)",
        "(line 159,col 9)-(line 159,col 35)",
        "(line 160,col 9)-(line 160,col 37)",
        "(line 161,col 9)-(line 161,col 34)",
        "(line 164,col 9)-(line 164,col 46)",
        "(line 165,col 9)-(line 165,col 32)",
        "(line 166,col 9)-(line 166,col 35)",
        "(line 167,col 9)-(line 167,col 32)",
        "(line 168,col 9)-(line 168,col 34)",
        "(line 171,col 9)-(line 172,col 42)",
        "(line 173,col 9)-(line 173,col 35)",
        "(line 174,col 9)-(line 175,col 42)",
        "(line 176,col 9)-(line 176,col 34)",
        "(line 179,col 9)-(line 179,col 39)",
        "(line 180,col 9)-(line 180,col 35)",
        "(line 181,col 9)-(line 181,col 39)",
        "(line 182,col 9)-(line 182,col 34)",
        "(line 185,col 9)-(line 185,col 64)",
        "(line 186,col 9)-(line 186,col 35)",
        "(line 187,col 9)-(line 187,col 64)",
        "(line 188,col 9)-(line 188,col 34)",
        "(line 191,col 9)-(line 192,col 42)",
        "(line 193,col 9)-(line 193,col 35)",
        "(line 194,col 9)-(line 195,col 42)",
        "(line 196,col 9)-(line 196,col 34)",
        "(line 199,col 9)-(line 199,col 75)",
        "(line 200,col 9)-(line 200,col 35)",
        "(line 201,col 9)-(line 201,col 75)",
        "(line 202,col 9)-(line 202,col 34)",
        "(line 205,col 9)-(line 205,col 37)",
        "(line 206,col 9)-(line 206,col 35)",
        "(line 207,col 9)-(line 207,col 37)",
        "(line 208,col 9)-(line 208,col 34)",
        "(line 211,col 9)-(line 211,col 42)",
        "(line 212,col 9)-(line 212,col 35)",
        "(line 213,col 9)-(line 213,col 42)",
        "(line 214,col 9)-(line 214,col 34)",
        "(line 217,col 9)-(line 217,col 43)",
        "(line 218,col 9)-(line 218,col 35)",
        "(line 219,col 9)-(line 219,col 43)",
        "(line 220,col 9)-(line 220,col 34)",
        "(line 223,col 9)-(line 223,col 52)",
        "(line 224,col 9)-(line 224,col 35)",
        "(line 225,col 9)-(line 225,col 52)",
        "(line 226,col 9)-(line 226,col 34)",
        "(line 229,col 9)-(line 230,col 42)",
        "(line 231,col 9)-(line 231,col 35)",
        "(line 232,col 9)-(line 233,col 42)",
        "(line 234,col 9)-(line 234,col 34)",
        "(line 237,col 9)-(line 237,col 36)",
        "(line 238,col 9)-(line 238,col 35)",
        "(line 239,col 9)-(line 239,col 36)",
        "(line 240,col 9)-(line 240,col 34)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.axis.junit.AxisTests.testHashCode()",
      "begin_line": 247,
      "end_line": 254,
      "comment": "\n     * Two objects that are equal are required to return the same hashCode. \n     ",
      "child_ranges": [
        "(line 248,col 9)-(line 248,col 43)",
        "(line 249,col 9)-(line 249,col 43)",
        "(line 250,col 9)-(line 250,col 34)",
        "(line 251,col 9)-(line 251,col 31)",
        "(line 252,col 9)-(line 252,col 31)",
        "(line 253,col 9)-(line 253,col 29)"
      ]
    }
  ]
}