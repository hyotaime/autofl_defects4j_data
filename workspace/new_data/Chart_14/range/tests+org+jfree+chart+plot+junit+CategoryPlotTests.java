{
  "filepath": "/tmp/Chart-14b/tests/org/jfree/chart/plot/junit/CategoryPlotTests.java",
  "nodes": [
    {
      "type": "class_interface",
      "name": "CategoryPlotTests",
      "is_interface": false,
      "parent_types": [
        "TestCase"
      ],
      "begin_line": 99,
      "end_line": 783,
      "comment": "\n * Tests for the {@link CategoryPlot} class.\n "
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.suite()",
      "begin_line": 106,
      "end_line": 108,
      "comment": "\n     * Returns the tests as a test suite.\n     *\n     * @return The test suite.\n     ",
      "child_ranges": [
        "(line 107,col 9)-(line 107,col 54)"
      ]
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.CategoryPlotTests(java.lang.String)",
      "begin_line": 115,
      "end_line": 117,
      "comment": "\n     * Constructs a new set of tests.\n     *\n     * @param name  the name of the tests.\n     ",
      "child_ranges": [
        "(line 116,col 9)-(line 116,col 20)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testConstructor()",
      "begin_line": 122,
      "end_line": 126,
      "comment": "\n     * Some checks for the constructor.\n     ",
      "child_ranges": [
        "(line 123,col 9)-(line 123,col 47)",
        "(line 124,col 9)-(line 125,col 32)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testAxisRange()",
      "begin_line": 131,
      "end_line": 142,
      "comment": "\n     * A test for a bug reported in the forum.\n     ",
      "child_ranges": [
        "(line 132,col 9)-(line 132,col 71)",
        "(line 133,col 9)-(line 133,col 71)",
        "(line 134,col 9)-(line 134,col 44)",
        "(line 135,col 9)-(line 135,col 44)",
        "(line 136,col 9)-(line 137,col 66)",
        "(line 138,col 9)-(line 138,col 37)",
        "(line 139,col 9)-(line 139,col 56)",
        "(line 140,col 9)-(line 140,col 49)",
        "(line 141,col 9)-(line 141,col 55)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testEquals()",
      "begin_line": 147,
      "end_line": 397,
      "comment": "\n     * Test that the equals() method differentiates all the required fields.\n     ",
      "child_ranges": [
        "(line 149,col 9)-(line 149,col 48)",
        "(line 150,col 9)-(line 150,col 48)",
        "(line 151,col 9)-(line 151,col 40)",
        "(line 152,col 9)-(line 152,col 40)",
        "(line 155,col 9)-(line 155,col 57)",
        "(line 156,col 9)-(line 156,col 41)",
        "(line 157,col 9)-(line 157,col 57)",
        "(line 158,col 9)-(line 158,col 40)",
        "(line 161,col 9)-(line 161,col 73)",
        "(line 162,col 9)-(line 162,col 41)",
        "(line 163,col 9)-(line 163,col 73)",
        "(line 164,col 9)-(line 164,col 40)",
        "(line 167,col 9)-(line 167,col 63)",
        "(line 168,col 9)-(line 168,col 41)",
        "(line 169,col 9)-(line 169,col 63)",
        "(line 170,col 9)-(line 170,col 40)",
        "(line 173,col 9)-(line 173,col 68)",
        "(line 174,col 9)-(line 174,col 41)",
        "(line 175,col 9)-(line 175,col 68)",
        "(line 176,col 9)-(line 176,col 40)",
        "(line 179,col 9)-(line 179,col 63)",
        "(line 180,col 9)-(line 180,col 41)",
        "(line 181,col 9)-(line 181,col 63)",
        "(line 182,col 9)-(line 182,col 40)",
        "(line 185,col 9)-(line 185,col 67)",
        "(line 186,col 9)-(line 186,col 41)",
        "(line 187,col 9)-(line 187,col 67)",
        "(line 188,col 9)-(line 188,col 40)",
        "(line 191,col 9)-(line 191,col 72)",
        "(line 192,col 9)-(line 192,col 41)",
        "(line 193,col 9)-(line 193,col 72)",
        "(line 194,col 9)-(line 194,col 40)",
        "(line 197,col 9)-(line 197,col 57)",
        "(line 198,col 9)-(line 198,col 41)",
        "(line 199,col 9)-(line 199,col 57)",
        "(line 200,col 9)-(line 200,col 40)",
        "(line 203,col 9)-(line 203,col 71)",
        "(line 204,col 9)-(line 204,col 41)",
        "(line 205,col 9)-(line 205,col 71)",
        "(line 206,col 9)-(line 206,col 40)",
        "(line 209,col 9)-(line 209,col 62)",
        "(line 210,col 9)-(line 210,col 41)",
        "(line 211,col 9)-(line 211,col 62)",
        "(line 212,col 9)-(line 212,col 40)",
        "(line 215,col 9)-(line 215,col 66)",
        "(line 216,col 9)-(line 216,col 41)",
        "(line 217,col 9)-(line 217,col 66)",
        "(line 218,col 9)-(line 218,col 40)",
        "(line 221,col 9)-(line 221,col 45)",
        "(line 222,col 9)-(line 222,col 41)",
        "(line 223,col 9)-(line 223,col 45)",
        "(line 224,col 9)-(line 224,col 40)",
        "(line 227,col 9)-(line 227,col 44)",
        "(line 228,col 9)-(line 228,col 41)",
        "(line 229,col 9)-(line 229,col 44)",
        "(line 230,col 9)-(line 230,col 40)",
        "(line 233,col 9)-(line 233,col 46)",
        "(line 234,col 9)-(line 234,col 41)",
        "(line 235,col 9)-(line 235,col 46)",
        "(line 236,col 9)-(line 236,col 40)",
        "(line 239,col 9)-(line 239,col 50)",
        "(line 240,col 9)-(line 240,col 41)",
        "(line 241,col 9)-(line 241,col 50)",
        "(line 242,col 9)-(line 242,col 40)",
        "(line 245,col 9)-(line 245,col 70)",
        "(line 246,col 9)-(line 246,col 41)",
        "(line 247,col 9)-(line 247,col 70)",
        "(line 248,col 9)-(line 248,col 40)",
        "(line 251,col 9)-(line 251,col 60)",
        "(line 252,col 9)-(line 252,col 41)",
        "(line 253,col 9)-(line 253,col 60)",
        "(line 254,col 9)-(line 254,col 40)",
        "(line 257,col 9)-(line 257,col 57)",
        "(line 258,col 9)-(line 258,col 41)",
        "(line 259,col 9)-(line 259,col 57)",
        "(line 260,col 9)-(line 260,col 40)",
        "(line 263,col 9)-(line 263,col 46)",
        "(line 264,col 9)-(line 264,col 41)",
        "(line 265,col 9)-(line 265,col 46)",
        "(line 266,col 9)-(line 266,col 40)",
        "(line 269,col 9)-(line 269,col 60)",
        "(line 270,col 9)-(line 270,col 41)",
        "(line 271,col 9)-(line 271,col 60)",
        "(line 272,col 9)-(line 272,col 40)",
        "(line 275,col 9)-(line 275,col 46)",
        "(line 276,col 9)-(line 276,col 46)",
        "(line 277,col 9)-(line 277,col 41)",
        "(line 278,col 9)-(line 278,col 46)",
        "(line 279,col 9)-(line 279,col 40)",
        "(line 282,col 9)-(line 283,col 43)",
        "(line 284,col 9)-(line 284,col 41)",
        "(line 285,col 9)-(line 286,col 43)",
        "(line 287,col 9)-(line 287,col 40)",
        "(line 290,col 9)-(line 290,col 46)",
        "(line 291,col 9)-(line 291,col 41)",
        "(line 292,col 9)-(line 292,col 46)",
        "(line 293,col 9)-(line 293,col 40)",
        "(line 296,col 9)-(line 296,col 45)",
        "(line 297,col 9)-(line 297,col 41)",
        "(line 298,col 9)-(line 298,col 45)",
        "(line 299,col 9)-(line 299,col 40)",
        "(line 302,col 9)-(line 303,col 43)",
        "(line 304,col 9)-(line 304,col 41)",
        "(line 305,col 9)-(line 306,col 43)",
        "(line 307,col 9)-(line 307,col 40)",
        "(line 310,col 9)-(line 310,col 36)",
        "(line 311,col 9)-(line 311,col 41)",
        "(line 312,col 9)-(line 312,col 36)",
        "(line 313,col 9)-(line 313,col 40)",
        "(line 316,col 9)-(line 316,col 45)",
        "(line 317,col 9)-(line 317,col 41)",
        "(line 318,col 9)-(line 318,col 45)",
        "(line 319,col 9)-(line 319,col 40)",
        "(line 322,col 9)-(line 322,col 44)",
        "(line 323,col 9)-(line 323,col 41)",
        "(line 324,col 9)-(line 324,col 44)",
        "(line 325,col 9)-(line 325,col 40)",
        "(line 328,col 9)-(line 328,col 46)",
        "(line 329,col 9)-(line 329,col 41)",
        "(line 330,col 9)-(line 330,col 46)",
        "(line 331,col 9)-(line 331,col 40)",
        "(line 334,col 9)-(line 335,col 43)",
        "(line 336,col 9)-(line 336,col 41)",
        "(line 337,col 9)-(line 338,col 43)",
        "(line 339,col 9)-(line 339,col 40)",
        "(line 342,col 9)-(line 342,col 51)",
        "(line 343,col 9)-(line 343,col 41)",
        "(line 344,col 9)-(line 344,col 51)",
        "(line 345,col 9)-(line 345,col 40)",
        "(line 348,col 9)-(line 348,col 69)",
        "(line 349,col 9)-(line 349,col 41)",
        "(line 350,col 9)-(line 350,col 69)",
        "(line 351,col 9)-(line 351,col 40)",
        "(line 353,col 9)-(line 353,col 69)",
        "(line 354,col 9)-(line 354,col 41)",
        "(line 355,col 9)-(line 355,col 69)",
        "(line 356,col 9)-(line 356,col 40)",
        "(line 359,col 9)-(line 359,col 72)",
        "(line 360,col 9)-(line 360,col 41)",
        "(line 361,col 9)-(line 361,col 72)",
        "(line 362,col 9)-(line 362,col 40)",
        "(line 365,col 9)-(line 365,col 72)",
        "(line 366,col 9)-(line 366,col 41)",
        "(line 367,col 9)-(line 367,col 72)",
        "(line 368,col 9)-(line 368,col 40)",
        "(line 371,col 9)-(line 373,col 10)",
        "(line 374,col 9)-(line 374,col 41)",
        "(line 375,col 9)-(line 376,col 23)",
        "(line 377,col 9)-(line 377,col 40)",
        "(line 380,col 9)-(line 380,col 27)",
        "(line 381,col 9)-(line 381,col 41)",
        "(line 382,col 9)-(line 382,col 27)",
        "(line 383,col 9)-(line 383,col 40)",
        "(line 386,col 9)-(line 386,col 55)",
        "(line 387,col 9)-(line 387,col 41)",
        "(line 388,col 9)-(line 388,col 55)",
        "(line 389,col 9)-(line 389,col 40)",
        "(line 392,col 9)-(line 392,col 54)",
        "(line 393,col 9)-(line 393,col 41)",
        "(line 394,col 9)-(line 394,col 54)",
        "(line 395,col 9)-(line 395,col 40)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testCloning()",
      "begin_line": 402,
      "end_line": 417,
      "comment": "\n     * Confirm that cloning works.\n     ",
      "child_ranges": [
        "(line 403,col 9)-(line 403,col 45)",
        "(line 404,col 9)-(line 405,col 43)",
        "(line 406,col 9)-(line 406,col 31)",
        "(line 407,col 9)-(line 413,col 9)",
        "(line 414,col 9)-(line 414,col 29)",
        "(line 415,col 9)-(line 415,col 51)",
        "(line 416,col 9)-(line 416,col 34)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testSerialization()",
      "begin_line": 422,
      "end_line": 447,
      "comment": "\n     * Serialize an instance, restore it, and check for equality.\n     ",
      "child_ranges": [
        "(line 424,col 9)-(line 424,col 70)",
        "(line 425,col 9)-(line 425,col 61)",
        "(line 426,col 9)-(line 426,col 55)",
        "(line 427,col 9)-(line 427,col 49)",
        "(line 428,col 9)-(line 429,col 26)",
        "(line 430,col 9)-(line 430,col 54)",
        "(line 431,col 9)-(line 431,col 31)",
        "(line 432,col 9)-(line 445,col 9)",
        "(line 446,col 9)-(line 446,col 34)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testSerialization2()",
      "begin_line": 452,
      "end_line": 479,
      "comment": "\n     * Serialize an instance, restore it, and check for equality.\n     ",
      "child_ranges": [
        "(line 454,col 9)-(line 454,col 67)",
        "(line 455,col 9)-(line 455,col 61)",
        "(line 456,col 9)-(line 456,col 55)",
        "(line 457,col 9)-(line 457,col 49)",
        "(line 458,col 9)-(line 459,col 26)",
        "(line 460,col 9)-(line 460,col 52)",
        "(line 461,col 9)-(line 461,col 31)",
        "(line 463,col 9)-(line 476,col 9)",
        "(line 477,col 9)-(line 477,col 29)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testSerialization3()",
      "begin_line": 484,
      "end_line": 524,
      "comment": "\n     * Serialize an instance, restore it, and check for equality.\n     ",
      "child_ranges": [
        "(line 485,col 9)-(line 485,col 70)",
        "(line 486,col 9)-(line 495,col 10)",
        "(line 496,col 9)-(line 496,col 33)",
        "(line 499,col 9)-(line 512,col 9)",
        "(line 515,col 9)-(line 515,col 30)",
        "(line 516,col 9)-(line 522,col 9)",
        "(line 523,col 9)-(line 523,col 27)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testSerialization4()",
      "begin_line": 529,
      "end_line": 573,
      "comment": "\n     * This test ensures that a plot with markers is serialized correctly.\n     ",
      "child_ranges": [
        "(line 530,col 9)-(line 530,col 70)",
        "(line 531,col 9)-(line 540,col 10)",
        "(line 541,col 9)-(line 541,col 59)",
        "(line 542,col 9)-(line 542,col 68)",
        "(line 543,col 9)-(line 543,col 76)",
        "(line 544,col 9)-(line 544,col 33)",
        "(line 547,col 9)-(line 560,col 9)",
        "(line 561,col 9)-(line 561,col 36)",
        "(line 564,col 9)-(line 564,col 30)",
        "(line 565,col 9)-(line 571,col 9)",
        "(line 572,col 9)-(line 572,col 27)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testSerialization5()",
      "begin_line": 580,
      "end_line": 631,
      "comment": "\n     * Tests a bug where the plot is no longer registered as a listener\n     * with the dataset(s) and axes after deserialization.  See patch 1209475\n     * at SourceForge.\n     ",
      "child_ranges": [
        "(line 581,col 9)-(line 581,col 71)",
        "(line 582,col 9)-(line 582,col 64)",
        "(line 583,col 9)-(line 583,col 58)",
        "(line 584,col 9)-(line 584,col 50)",
        "(line 585,col 9)-(line 586,col 27)",
        "(line 587,col 9)-(line 587,col 64)",
        "(line 588,col 9)-(line 588,col 58)",
        "(line 589,col 9)-(line 589,col 50)",
        "(line 590,col 9)-(line 590,col 71)",
        "(line 591,col 9)-(line 591,col 35)",
        "(line 592,col 9)-(line 592,col 41)",
        "(line 593,col 9)-(line 593,col 39)",
        "(line 594,col 9)-(line 594,col 37)",
        "(line 595,col 9)-(line 595,col 31)",
        "(line 596,col 9)-(line 608,col 9)",
        "(line 609,col 9)-(line 609,col 29)",
        "(line 613,col 9)-(line 613,col 55)",
        "(line 614,col 9)-(line 614,col 64)",
        "(line 615,col 9)-(line 616,col 60)",
        "(line 617,col 9)-(line 617,col 64)",
        "(line 618,col 9)-(line 618,col 55)",
        "(line 619,col 9)-(line 619,col 64)",
        "(line 620,col 9)-(line 621,col 60)",
        "(line 622,col 9)-(line 622,col 65)",
        "(line 623,col 9)-(line 623,col 45)",
        "(line 624,col 9)-(line 624,col 48)",
        "(line 625,col 9)-(line 625,col 47)",
        "(line 626,col 9)-(line 626,col 46)",
        "(line 627,col 9)-(line 627,col 45)",
        "(line 628,col 9)-(line 628,col 48)",
        "(line 629,col 9)-(line 629,col 47)",
        "(line 630,col 9)-(line 630,col 46)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testSetRenderer()",
      "begin_line": 637,
      "end_line": 647,
      "comment": "\n     * A test for a bug where setting the renderer doesn\u0027t register the plot\n     * as a RendererChangeListener.\n     ",
      "child_ranges": [
        "(line 638,col 9)-(line 638,col 47)",
        "(line 639,col 9)-(line 639,col 67)",
        "(line 640,col 9)-(line 640,col 35)",
        "(line 643,col 9)-(line 643,col 67)",
        "(line 644,col 9)-(line 644,col 41)",
        "(line 645,col 9)-(line 645,col 48)",
        "(line 646,col 9)-(line 646,col 48)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.test1169972()",
      "begin_line": 652,
      "end_line": 659,
      "comment": "\n     * A test for bug report 1169972.\n     ",
      "child_ranges": [
        "(line 653,col 9)-(line 653,col 69)",
        "(line 654,col 9)-(line 654,col 50)",
        "(line 655,col 9)-(line 655,col 47)",
        "(line 656,col 9)-(line 656,col 44)",
        "(line 657,col 9)-(line 657,col 54)",
        "(line 658,col 9)-(line 658,col 33)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testAddDomainMarker()",
      "begin_line": 664,
      "end_line": 674,
      "comment": "\n     * Some tests for the addDomainMarker() method(s).\n     ",
      "child_ranges": [
        "(line 665,col 9)-(line 665,col 47)",
        "(line 666,col 9)-(line 666,col 52)",
        "(line 667,col 9)-(line 667,col 32)",
        "(line 668,col 9)-(line 669,col 45)",
        "(line 670,col 9)-(line 670,col 45)",
        "(line 671,col 9)-(line 671,col 34)",
        "(line 672,col 9)-(line 672,col 78)",
        "(line 673,col 9)-(line 673,col 46)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testAddRangeMarker()",
      "begin_line": 679,
      "end_line": 689,
      "comment": "\n     * Some tests for the addRangeMarker() method(s).\n     ",
      "child_ranges": [
        "(line 680,col 9)-(line 680,col 47)",
        "(line 681,col 9)-(line 681,col 40)",
        "(line 682,col 9)-(line 682,col 31)",
        "(line 683,col 9)-(line 684,col 45)",
        "(line 685,col 9)-(line 685,col 45)",
        "(line 686,col 9)-(line 686,col 33)",
        "(line 687,col 9)-(line 687,col 78)",
        "(line 688,col 9)-(line 688,col 46)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.test1654215()",
      "begin_line": 695,
      "end_line": 715,
      "comment": "\n     * A test for bug 1654215 (where a renderer is added to the plot without\n     * a corresponding dataset and it throws an exception at drawing time).\n     ",
      "child_ranges": [
        "(line 696,col 9)-(line 696,col 70)",
        "(line 697,col 9)-(line 698,col 71)",
        "(line 699,col 9)-(line 699,col 59)",
        "(line 700,col 9)-(line 700,col 56)",
        "(line 701,col 9)-(line 701,col 32)",
        "(line 702,col 9)-(line 713,col 9)",
        "(line 714,col 9)-(line 714,col 28)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testGetDomainAxisIndex()",
      "begin_line": 720,
      "end_line": 739,
      "comment": "\n     * Some checks for the getDomainAxisIndex() method.\n     ",
      "child_ranges": [
        "(line 721,col 9)-(line 721,col 58)",
        "(line 722,col 9)-(line 722,col 58)",
        "(line 723,col 9)-(line 723,col 53)",
        "(line 724,col 9)-(line 725,col 22)",
        "(line 726,col 9)-(line 726,col 62)",
        "(line 727,col 9)-(line 727,col 63)",
        "(line 728,col 9)-(line 728,col 43)",
        "(line 729,col 9)-(line 729,col 62)",
        "(line 730,col 9)-(line 730,col 74)",
        "(line 731,col 9)-(line 731,col 29)",
        "(line 732,col 9)-(line 737,col 9)",
        "(line 738,col 9)-(line 738,col 25)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testGetRangeAxisIndex()",
      "begin_line": 744,
      "end_line": 763,
      "comment": "\n     * Some checks for the getRangeAxisIndex() method.\n     ",
      "child_ranges": [
        "(line 745,col 9)-(line 745,col 58)",
        "(line 746,col 9)-(line 746,col 53)",
        "(line 747,col 9)-(line 747,col 53)",
        "(line 748,col 9)-(line 749,col 22)",
        "(line 750,col 9)-(line 750,col 60)",
        "(line 751,col 9)-(line 751,col 61)",
        "(line 752,col 9)-(line 752,col 41)",
        "(line 753,col 9)-(line 753,col 60)",
        "(line 754,col 9)-(line 754,col 71)",
        "(line 755,col 9)-(line 755,col 29)",
        "(line 756,col 9)-(line 761,col 9)",
        "(line 762,col 9)-(line 762,col 25)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testRemoveDomainMarker()",
      "begin_line": 769,
      "end_line": 772,
      "comment": "\n     * Check that removing a marker that isn\u0027t assigned to the plot returns \n     * false.\n     ",
      "child_ranges": [
        "(line 770,col 6)-(line 770,col 44)",
        "(line 771,col 6)-(line 771,col 76)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testRemoveRangeMarker()",
      "begin_line": 778,
      "end_line": 781,
      "comment": "\n     * Check that removing a marker that isn\u0027t assigned to the plot returns \n     * false.\n     ",
      "child_ranges": [
        "(line 779,col 6)-(line 779,col 44)",
        "(line 780,col 6)-(line 780,col 63)"
      ]
    }
  ]
}