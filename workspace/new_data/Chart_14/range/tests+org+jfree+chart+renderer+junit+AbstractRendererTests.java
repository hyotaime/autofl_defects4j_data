{
  "filepath": "/tmp/Chart-14b/tests/org/jfree/chart/renderer/junit/AbstractRendererTests.java",
  "nodes": [
    {
      "type": "class_interface",
      "name": "AbstractRendererTests",
      "is_interface": false,
      "parent_types": [
        "TestCase"
      ],
      "begin_line": 82,
      "end_line": 764,
      "comment": "\n * Tests for the {@link AbstractRenderer} class.\n "
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.junit.AbstractRendererTests.suite()",
      "begin_line": 89,
      "end_line": 91,
      "comment": "\n     * Returns the tests as a test suite.\n     *\n     * @return The test suite.\n     ",
      "child_ranges": [
        "(line 90,col 9)-(line 90,col 58)"
      ]
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.renderer.junit.AbstractRendererTests.AbstractRendererTests(java.lang.String)",
      "begin_line": 98,
      "end_line": 100,
      "comment": "\n     * Constructs a new set of tests.\n     *\n     * @param name  the name of the tests.\n     ",
      "child_ranges": [
        "(line 99,col 9)-(line 99,col 20)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.junit.AbstractRendererTests.testEquals()",
      "begin_line": 105,
      "end_line": 310,
      "comment": "\n     * Test that the equals() method distinguishes all fields.\n     ",
      "child_ranges": [
        "(line 108,col 9)-(line 108,col 43)",
        "(line 109,col 9)-(line 109,col 43)",
        "(line 110,col 9)-(line 110,col 34)",
        "(line 111,col 9)-(line 111,col 34)",
        "(line 114,col 9)-(line 114,col 45)",
        "(line 115,col 9)-(line 115,col 35)",
        "(line 116,col 9)-(line 116,col 45)",
        "(line 117,col 9)-(line 117,col 34)",
        "(line 120,col 9)-(line 120,col 39)",
        "(line 121,col 9)-(line 121,col 35)",
        "(line 122,col 9)-(line 122,col 39)",
        "(line 123,col 9)-(line 123,col 34)",
        "(line 126,col 9)-(line 126,col 53)",
        "(line 127,col 9)-(line 127,col 35)",
        "(line 128,col 9)-(line 128,col 53)",
        "(line 129,col 9)-(line 129,col 34)",
        "(line 132,col 9)-(line 132,col 47)",
        "(line 133,col 9)-(line 133,col 35)",
        "(line 134,col 9)-(line 134,col 47)",
        "(line 135,col 9)-(line 135,col 34)",
        "(line 138,col 9)-(line 139,col 42)",
        "(line 140,col 9)-(line 140,col 35)",
        "(line 141,col 9)-(line 142,col 42)",
        "(line 143,col 9)-(line 143,col 34)",
        "(line 146,col 9)-(line 147,col 40)",
        "(line 148,col 9)-(line 148,col 35)",
        "(line 149,col 9)-(line 150,col 40)",
        "(line 151,col 9)-(line 151,col 34)",
        "(line 154,col 9)-(line 155,col 40)",
        "(line 156,col 9)-(line 156,col 35)",
        "(line 157,col 9)-(line 158,col 40)",
        "(line 159,col 9)-(line 159,col 34)",
        "(line 162,col 9)-(line 163,col 40)",
        "(line 164,col 9)-(line 164,col 35)",
        "(line 165,col 9)-(line 166,col 40)",
        "(line 167,col 9)-(line 167,col 34)",
        "(line 170,col 9)-(line 171,col 40)",
        "(line 172,col 9)-(line 172,col 35)",
        "(line 173,col 9)-(line 174,col 40)",
        "(line 175,col 9)-(line 175,col 34)",
        "(line 178,col 9)-(line 179,col 40)",
        "(line 180,col 9)-(line 180,col 35)",
        "(line 181,col 9)-(line 182,col 40)",
        "(line 183,col 9)-(line 183,col 34)",
        "(line 186,col 9)-(line 186,col 42)",
        "(line 187,col 9)-(line 187,col 33)",
        "(line 188,col 9)-(line 188,col 35)",
        "(line 189,col 9)-(line 189,col 33)",
        "(line 190,col 9)-(line 190,col 34)",
        "(line 193,col 9)-(line 193,col 28)",
        "(line 194,col 9)-(line 194,col 35)",
        "(line 195,col 9)-(line 195,col 28)",
        "(line 196,col 9)-(line 196,col 34)",
        "(line 199,col 9)-(line 199,col 40)",
        "(line 200,col 9)-(line 200,col 35)",
        "(line 201,col 9)-(line 201,col 40)",
        "(line 202,col 9)-(line 202,col 34)",
        "(line 205,col 9)-(line 205,col 35)",
        "(line 206,col 9)-(line 206,col 35)",
        "(line 207,col 9)-(line 207,col 35)",
        "(line 208,col 9)-(line 208,col 34)",
        "(line 211,col 9)-(line 211,col 56)",
        "(line 212,col 9)-(line 212,col 35)",
        "(line 213,col 9)-(line 213,col 56)",
        "(line 214,col 9)-(line 214,col 34)",
        "(line 217,col 9)-(line 217,col 51)",
        "(line 218,col 9)-(line 218,col 35)",
        "(line 219,col 9)-(line 219,col 51)",
        "(line 220,col 9)-(line 220,col 34)",
        "(line 223,col 9)-(line 223,col 55)",
        "(line 224,col 9)-(line 224,col 35)",
        "(line 225,col 9)-(line 225,col 55)",
        "(line 226,col 9)-(line 226,col 34)",
        "(line 229,col 9)-(line 229,col 42)",
        "(line 230,col 9)-(line 230,col 35)",
        "(line 231,col 9)-(line 231,col 42)",
        "(line 232,col 9)-(line 232,col 34)",
        "(line 235,col 9)-(line 235,col 70)",
        "(line 236,col 9)-(line 236,col 35)",
        "(line 237,col 9)-(line 237,col 70)",
        "(line 238,col 9)-(line 238,col 34)",
        "(line 241,col 9)-(line 241,col 67)",
        "(line 242,col 9)-(line 242,col 35)",
        "(line 243,col 9)-(line 243,col 67)",
        "(line 244,col 9)-(line 244,col 34)",
        "(line 247,col 9)-(line 248,col 41)",
        "(line 249,col 9)-(line 249,col 35)",
        "(line 250,col 9)-(line 251,col 41)",
        "(line 252,col 9)-(line 252,col 34)",
        "(line 255,col 9)-(line 256,col 41)",
        "(line 257,col 9)-(line 257,col 35)",
        "(line 258,col 9)-(line 259,col 41)",
        "(line 260,col 9)-(line 260,col 34)",
        "(line 263,col 9)-(line 263,col 74)",
        "(line 264,col 9)-(line 264,col 35)",
        "(line 265,col 9)-(line 265,col 74)",
        "(line 266,col 9)-(line 266,col 34)",
        "(line 269,col 9)-(line 270,col 70)",
        "(line 271,col 9)-(line 271,col 35)",
        "(line 272,col 9)-(line 273,col 70)",
        "(line 274,col 9)-(line 274,col 34)",
        "(line 277,col 9)-(line 278,col 70)",
        "(line 279,col 9)-(line 279,col 35)",
        "(line 280,col 9)-(line 281,col 70)",
        "(line 282,col 9)-(line 282,col 34)",
        "(line 285,col 9)-(line 286,col 70)",
        "(line 287,col 9)-(line 287,col 35)",
        "(line 288,col 9)-(line 289,col 70)",
        "(line 290,col 9)-(line 290,col 34)",
        "(line 293,col 9)-(line 293,col 41)",
        "(line 294,col 9)-(line 294,col 35)",
        "(line 295,col 9)-(line 295,col 41)",
        "(line 296,col 9)-(line 296,col 34)",
        "(line 299,col 9)-(line 299,col 52)",
        "(line 300,col 9)-(line 300,col 35)",
        "(line 301,col 9)-(line 301,col 52)",
        "(line 302,col 9)-(line 302,col 34)",
        "(line 305,col 9)-(line 305,col 40)",
        "(line 306,col 9)-(line 306,col 35)",
        "(line 307,col 9)-(line 307,col 40)",
        "(line 308,col 9)-(line 308,col 34)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.junit.AbstractRendererTests.testCloning()",
      "begin_line": 315,
      "end_line": 400,
      "comment": "\n     * Confirm that cloning works.\n     ",
      "child_ranges": [
        "(line 316,col 9)-(line 316,col 61)",
        "(line 317,col 9)-(line 317,col 79)",
        "(line 318,col 9)-(line 318,col 35)",
        "(line 320,col 9)-(line 320,col 39)",
        "(line 321,col 9)-(line 326,col 9)",
        "(line 327,col 9)-(line 327,col 29)",
        "(line 328,col 9)-(line 328,col 51)",
        "(line 329,col 9)-(line 329,col 34)",
        "(line 331,col 9)-(line 331,col 46)",
        "(line 332,col 9)-(line 332,col 35)",
        "(line 333,col 9)-(line 333,col 46)",
        "(line 334,col 9)-(line 334,col 34)",
        "(line 336,col 9)-(line 336,col 54)",
        "(line 337,col 9)-(line 337,col 35)",
        "(line 338,col 9)-(line 338,col 54)",
        "(line 339,col 9)-(line 339,col 34)",
        "(line 341,col 9)-(line 341,col 42)",
        "(line 342,col 9)-(line 342,col 35)",
        "(line 343,col 9)-(line 343,col 42)",
        "(line 344,col 9)-(line 344,col 34)",
        "(line 346,col 9)-(line 346,col 47)",
        "(line 347,col 9)-(line 347,col 35)",
        "(line 348,col 9)-(line 348,col 47)",
        "(line 349,col 9)-(line 349,col 34)",
        "(line 351,col 9)-(line 351,col 50)",
        "(line 352,col 9)-(line 352,col 35)",
        "(line 353,col 9)-(line 353,col 50)",
        "(line 354,col 9)-(line 354,col 34)",
        "(line 356,col 9)-(line 356,col 53)",
        "(line 357,col 9)-(line 357,col 35)",
        "(line 358,col 9)-(line 358,col 53)",
        "(line 359,col 9)-(line 359,col 34)",
        "(line 361,col 9)-(line 361,col 60)",
        "(line 362,col 9)-(line 362,col 35)",
        "(line 363,col 9)-(line 363,col 60)",
        "(line 364,col 9)-(line 364,col 34)",
        "(line 366,col 9)-(line 366,col 46)",
        "(line 367,col 9)-(line 367,col 35)",
        "(line 368,col 9)-(line 368,col 68)",
        "(line 369,col 9)-(line 369,col 34)",
        "(line 371,col 9)-(line 371,col 73)",
        "(line 372,col 9)-(line 372,col 35)",
        "(line 373,col 9)-(line 373,col 73)",
        "(line 374,col 9)-(line 374,col 34)",
        "(line 376,col 9)-(line 376,col 55)",
        "(line 377,col 9)-(line 377,col 35)",
        "(line 378,col 9)-(line 378,col 55)",
        "(line 379,col 9)-(line 379,col 34)",
        "(line 381,col 9)-(line 381,col 49)",
        "(line 382,col 9)-(line 382,col 35)",
        "(line 383,col 9)-(line 383,col 49)",
        "(line 384,col 9)-(line 384,col 34)",
        "(line 386,col 9)-(line 386,col 74)",
        "(line 387,col 9)-(line 387,col 35)",
        "(line 388,col 9)-(line 388,col 74)",
        "(line 389,col 9)-(line 389,col 34)",
        "(line 391,col 9)-(line 391,col 74)",
        "(line 392,col 9)-(line 392,col 35)",
        "(line 393,col 9)-(line 393,col 74)",
        "(line 394,col 9)-(line 394,col 34)",
        "(line 396,col 9)-(line 396,col 53)",
        "(line 397,col 9)-(line 397,col 35)",
        "(line 398,col 9)-(line 398,col 53)",
        "(line 399,col 9)-(line 399,col 34)"
      ]
    },
    {
      "type": "class_interface",
      "name": "MyRendererChangeListener",
      "is_interface": false,
      "parent_types": [
        "org.jfree.chart.event.RendererChangeListener"
      ],
      "begin_line": 405,
      "end_line": 419,
      "comment": " \n     * A utility class for listening to changes to a renderer.\n     "
    },
    {
      "type": "field",
      "varNames": [
        "lastEvent"
      ],
      "begin_line": 408,
      "end_line": 408,
      "comment": " The last event received. "
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.renderer.junit.AbstractRendererTests.MyRendererChangeListener.MyRendererChangeListener()",
      "begin_line": 413,
      "end_line": 415,
      "comment": "\n         * Creates a new instance.\n         ",
      "child_ranges": [
        "(line 414,col 13)-(line 414,col 34)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.junit.AbstractRendererTests.MyRendererChangeListener.rendererChanged(org.jfree.chart.event.RendererChangeEvent)",
      "begin_line": 416,
      "end_line": 418,
      "comment": "",
      "child_ranges": [
        "(line 417,col 13)-(line 417,col 35)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.junit.AbstractRendererTests.testCloning2()",
      "begin_line": 424,
      "end_line": 443,
      "comment": "\n     * A check for cloning.\n     ",
      "child_ranges": [
        "(line 425,col 9)-(line 425,col 61)",
        "(line 426,col 9)-(line 426,col 36)",
        "(line 427,col 9)-(line 427,col 39)",
        "(line 428,col 9)-(line 433,col 9)",
        "(line 434,col 9)-(line 434,col 29)",
        "(line 435,col 9)-(line 435,col 51)",
        "(line 436,col 9)-(line 436,col 34)",
        "(line 438,col 9)-(line 438,col 75)",
        "(line 439,col 9)-(line 439,col 39)",
        "(line 440,col 9)-(line 440,col 35)",
        "(line 441,col 9)-(line 441,col 59)",
        "(line 442,col 9)-(line 442,col 46)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.junit.AbstractRendererTests.testEventNotification()",
      "begin_line": 448,
      "end_line": 549,
      "comment": "\n     * Tests each setter method to ensure that it sends an event notification.\n     ",
      "child_ranges": [
        "(line 450,col 9)-(line 450,col 71)",
        "(line 451,col 9)-(line 451,col 43)",
        "(line 453,col 9)-(line 453,col 39)",
        "(line 456,col 9)-(line 456,col 36)",
        "(line 457,col 9)-(line 457,col 40)",
        "(line 458,col 9)-(line 458,col 43)",
        "(line 460,col 9)-(line 460,col 36)",
        "(line 461,col 9)-(line 461,col 35)",
        "(line 462,col 9)-(line 462,col 43)",
        "(line 465,col 9)-(line 465,col 36)",
        "(line 466,col 9)-(line 466,col 47)",
        "(line 467,col 9)-(line 467,col 43)",
        "(line 469,col 9)-(line 469,col 36)",
        "(line 470,col 9)-(line 470,col 42)",
        "(line 471,col 9)-(line 471,col 43)",
        "(line 474,col 9)-(line 474,col 36)",
        "(line 475,col 9)-(line 475,col 53)",
        "(line 476,col 9)-(line 476,col 43)",
        "(line 478,col 9)-(line 478,col 36)",
        "(line 479,col 9)-(line 479,col 48)",
        "(line 480,col 9)-(line 480,col 43)",
        "(line 483,col 9)-(line 483,col 36)",
        "(line 484,col 9)-(line 484,col 60)",
        "(line 485,col 9)-(line 485,col 43)",
        "(line 487,col 9)-(line 487,col 36)",
        "(line 488,col 9)-(line 488,col 55)",
        "(line 489,col 9)-(line 489,col 43)",
        "(line 492,col 9)-(line 492,col 36)",
        "(line 493,col 9)-(line 493,col 54)",
        "(line 494,col 9)-(line 494,col 43)",
        "(line 496,col 9)-(line 496,col 36)",
        "(line 497,col 9)-(line 497,col 49)",
        "(line 498,col 9)-(line 498,col 43)",
        "(line 501,col 9)-(line 501,col 36)",
        "(line 502,col 9)-(line 502,col 55)",
        "(line 503,col 9)-(line 503,col 43)",
        "(line 505,col 9)-(line 505,col 36)",
        "(line 506,col 9)-(line 506,col 42)",
        "(line 507,col 9)-(line 507,col 43)",
        "(line 510,col 9)-(line 510,col 36)",
        "(line 511,col 9)-(line 511,col 72)",
        "(line 512,col 9)-(line 512,col 43)",
        "(line 514,col 9)-(line 514,col 36)",
        "(line 515,col 9)-(line 515,col 67)",
        "(line 516,col 9)-(line 516,col 43)",
        "(line 519,col 9)-(line 519,col 36)",
        "(line 520,col 9)-(line 520,col 50)",
        "(line 521,col 9)-(line 521,col 43)",
        "(line 523,col 9)-(line 523,col 36)",
        "(line 524,col 9)-(line 524,col 45)",
        "(line 525,col 9)-(line 525,col 43)",
        "(line 528,col 9)-(line 528,col 36)",
        "(line 529,col 9)-(line 530,col 60)",
        "(line 531,col 9)-(line 531,col 43)",
        "(line 533,col 9)-(line 533,col 36)",
        "(line 534,col 9)-(line 535,col 60)",
        "(line 536,col 9)-(line 536,col 43)",
        "(line 539,col 9)-(line 539,col 36)",
        "(line 540,col 9)-(line 541,col 60)",
        "(line 542,col 9)-(line 542,col 43)",
        "(line 544,col 9)-(line 544,col 36)",
        "(line 545,col 9)-(line 546,col 60)",
        "(line 547,col 9)-(line 547,col 43)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.junit.AbstractRendererTests.testSerialization()",
      "begin_line": 556,
      "end_line": 583,
      "comment": "\n     * Serialize an instance, restore it, and check for equality.  In addition,\n     * test for a bug that was reported where the listener list is \u0027null\u0027 after \n     * deserialization.\n     ",
      "child_ranges": [
        "(line 558,col 9)-(line 558,col 43)",
        "(line 559,col 9)-(line 559,col 30)",
        "(line 561,col 9)-(line 574,col 9)",
        "(line 575,col 9)-(line 575,col 29)",
        "(line 576,col 9)-(line 581,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.junit.AbstractRendererTests.testAutoPopulateFlagDefaults()",
      "begin_line": 588,
      "end_line": 596,
      "comment": "\n     * Some checks for the autoPopulate flag default values.\n     ",
      "child_ranges": [
        "(line 589,col 9)-(line 589,col 42)",
        "(line 590,col 9)-(line 590,col 59)",
        "(line 591,col 9)-(line 591,col 64)",
        "(line 592,col 9)-(line 592,col 67)",
        "(line 593,col 9)-(line 593,col 61)",
        "(line 594,col 9)-(line 594,col 68)",
        "(line 595,col 9)-(line 595,col 59)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.junit.AbstractRendererTests.testPaintLookup()",
      "begin_line": 601,
      "end_line": 617,
      "comment": "\n     * Some checks for the paint lookup mechanism.\n     ",
      "child_ranges": [
        "(line 602,col 9)-(line 602,col 42)",
        "(line 603,col 9)-(line 603,col 51)",
        "(line 606,col 9)-(line 606,col 44)",
        "(line 607,col 9)-(line 607,col 57)",
        "(line 608,col 9)-(line 608,col 40)",
        "(line 611,col 9)-(line 611,col 43)",
        "(line 612,col 33)-(line 613,col 57)",
        "(line 614,col 9)-(line 615,col 40)",
        "(line 616,col 9)-(line 616,col 43)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.junit.AbstractRendererTests.testFillPaintLookup()",
      "begin_line": 622,
      "end_line": 638,
      "comment": "\n     * Some checks for the fill paint lookup mechanism.\n     ",
      "child_ranges": [
        "(line 623,col 9)-(line 623,col 42)",
        "(line 624,col 9)-(line 624,col 56)",
        "(line 627,col 9)-(line 627,col 48)",
        "(line 628,col 9)-(line 628,col 62)",
        "(line 629,col 9)-(line 629,col 44)",
        "(line 632,col 9)-(line 632,col 47)",
        "(line 633,col 33)-(line 634,col 57)",
        "(line 635,col 9)-(line 636,col 44)",
        "(line 637,col 9)-(line 637,col 47)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.junit.AbstractRendererTests.testOutlinePaintLookup()",
      "begin_line": 643,
      "end_line": 659,
      "comment": "\n     * Some checks for the outline paint lookup mechanism.\n     ",
      "child_ranges": [
        "(line 644,col 9)-(line 644,col 42)",
        "(line 645,col 9)-(line 645,col 58)",
        "(line 648,col 9)-(line 648,col 51)",
        "(line 649,col 9)-(line 649,col 64)",
        "(line 650,col 9)-(line 650,col 47)",
        "(line 653,col 9)-(line 653,col 50)",
        "(line 654,col 33)-(line 655,col 57)",
        "(line 656,col 9)-(line 657,col 47)",
        "(line 658,col 9)-(line 658,col 50)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.junit.AbstractRendererTests.testHashCode()",
      "begin_line": 664,
      "end_line": 664,
      "comment": "\n     * Some checks for the hashCode() method.\n     ",
      "child_ranges": []
    }
  ]
}