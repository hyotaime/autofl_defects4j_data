{
  "filepath": "/tmp/Chart-2b/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java",
  "nodes": [
    {
      "type": "class_interface",
      "name": "XYBoxAndWhiskerRenderer",
      "is_interface": false,
      "parent_types": [
        "org.jfree.chart.renderer.xy.AbstractXYItemRenderer",
        "org.jfree.chart.renderer.xy.XYItemRenderer",
        "java.lang.Cloneable",
        "org.jfree.chart.util.PublicCloneable",
        "java.io.Serializable"
      ],
      "begin_line": 128,
      "end_line": 846,
      "comment": "\r\n * A renderer that draws box-and-whisker items on an {@link XYPlot}.  This\r\n * renderer requires a {@link BoxAndWhiskerXYDataset}).  The example shown here\r\n * is generated by the \u003ccode\u003eBoxAndWhiskerChartDemo2.java\u003c/code\u003e program\r\n * included in the JFreeChart demo collection:\r\n * \u003cbr\u003e\u003cbr\u003e\r\n * \u003cimg src\u003d\"../../../../../images/XYBoxAndWhiskerRendererSample.png\"\r\n * alt\u003d\"XYBoxAndWhiskerRendererSample.png\" /\u003e\r\n * \u003cP\u003e\r\n * This renderer does not include any code to calculate the crosshair point.\r\n "
    },
    {
      "type": "field",
      "varNames": [
        "serialVersionUID"
      ],
      "begin_line": 132,
      "end_line": 132,
      "comment": " For serialization. "
    },
    {
      "type": "field",
      "varNames": [
        "boxWidth"
      ],
      "begin_line": 135,
      "end_line": 135,
      "comment": " The box width. "
    },
    {
      "type": "field",
      "varNames": [
        "boxPaint"
      ],
      "begin_line": 138,
      "end_line": 138,
      "comment": " The paint used to fill the box. "
    },
    {
      "type": "field",
      "varNames": [
        "fillBox"
      ],
      "begin_line": 141,
      "end_line": 141,
      "comment": " A flag that controls whether or not the box is filled. "
    },
    {
      "type": "field",
      "varNames": [
        "artifactPaint"
      ],
      "begin_line": 147,
      "end_line": 147,
      "comment": "\r\n     * The paint used to draw various artifacts such as outliers, farout\r\n     * symbol, average ellipse and median line.\r\n     "
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.XYBoxAndWhiskerRenderer()",
      "begin_line": 152,
      "end_line": 154,
      "comment": "\r\n     * Creates a new renderer for box and whisker charts.\r\n     ",
      "child_ranges": [
        "(line 153,col 9)-(line 153,col 19)"
      ]
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.XYBoxAndWhiskerRenderer(double)",
      "begin_line": 164,
      "end_line": 170,
      "comment": "\r\n     * Creates a new renderer for box and whisker charts.\r\n     * \u003cP\u003e\r\n     * Use -1 for the box width if you prefer the width to be calculated\r\n     * automatically.\r\n     *\r\n     * @param boxWidth  the box width.\r\n     ",
      "child_ranges": [
        "(line 165,col 9)-(line 165,col 16)",
        "(line 166,col 9)-(line 166,col 33)",
        "(line 167,col 9)-(line 167,col 36)",
        "(line 168,col 9)-(line 168,col 28)",
        "(line 169,col 9)-(line 169,col 71)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.getBoxWidth()",
      "begin_line": 179,
      "end_line": 181,
      "comment": "\r\n     * Returns the width of each box.\r\n     *\r\n     * @return The box width.\r\n     *\r\n     * @see #setBoxWidth(double)\r\n     ",
      "child_ranges": [
        "(line 180,col 9)-(line 180,col 29)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.setBoxWidth(double)",
      "begin_line": 194,
      "end_line": 199,
      "comment": "\r\n     * Sets the box width and sends a {@link RendererChangeEvent} to all\r\n     * registered listeners.\r\n     * \u003cP\u003e\r\n     * If you set the width to a negative value, the renderer will calculate\r\n     * the box width automatically based on the space available on the chart.\r\n     *\r\n     * @param width  the width.\r\n     *\r\n     * @see #getBoxWidth()\r\n     ",
      "child_ranges": [
        "(line 195,col 9)-(line 198,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.getBoxPaint()",
      "begin_line": 208,
      "end_line": 210,
      "comment": "\r\n     * Returns the paint used to fill boxes.\r\n     *\r\n     * @return The paint (possibly \u003ccode\u003enull\u003c/code\u003e).\r\n     *\r\n     * @see #setBoxPaint(Paint)\r\n     ",
      "child_ranges": [
        "(line 209,col 9)-(line 209,col 29)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.setBoxPaint(java.awt.Paint)",
      "begin_line": 220,
      "end_line": 223,
      "comment": "\r\n     * Sets the paint used to fill boxes and sends a {@link RendererChangeEvent}\r\n     * to all registered listeners.\r\n     *\r\n     * @param paint  the paint (\u003ccode\u003enull\u003c/code\u003e permitted).\r\n     *\r\n     * @see #getBoxPaint()\r\n     ",
      "child_ranges": [
        "(line 221,col 9)-(line 221,col 30)",
        "(line 222,col 9)-(line 222,col 26)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.getFillBox()",
      "begin_line": 232,
      "end_line": 234,
      "comment": "\r\n     * Returns the flag that controls whether or not the box is filled.\r\n     *\r\n     * @return A boolean.\r\n     *\r\n     * @see #setFillBox(boolean)\r\n     ",
      "child_ranges": [
        "(line 233,col 9)-(line 233,col 28)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.setFillBox(boolean)",
      "begin_line": 244,
      "end_line": 247,
      "comment": "\r\n     * Sets the flag that controls whether or not the box is filled and sends a\r\n     * {@link RendererChangeEvent} to all registered listeners.\r\n     *\r\n     * @param flag  the flag.\r\n     *\r\n     * @see #setFillBox(boolean)\r\n     ",
      "child_ranges": [
        "(line 245,col 9)-(line 245,col 28)",
        "(line 246,col 9)-(line 246,col 26)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.getArtifactPaint()",
      "begin_line": 257,
      "end_line": 259,
      "comment": "\r\n     * Returns the paint used to paint the various artifacts such as outliers,\r\n     * farout symbol, median line and the averages ellipse.\r\n     *\r\n     * @return The paint (never \u003ccode\u003enull\u003c/code\u003e).\r\n     *\r\n     * @see #setArtifactPaint(Paint)\r\n     ",
      "child_ranges": [
        "(line 258,col 9)-(line 258,col 34)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.setArtifactPaint(java.awt.Paint)",
      "begin_line": 270,
      "end_line": 276,
      "comment": "\r\n     * Sets the paint used to paint the various artifacts such as outliers,\r\n     * farout symbol, median line and the averages ellipse, and sends a\r\n     * {@link RendererChangeEvent} to all registered listeners.\r\n     *\r\n     * @param paint  the paint (\u003ccode\u003enull\u003c/code\u003e not permitted).\r\n     *\r\n     * @see #getArtifactPaint()\r\n     ",
      "child_ranges": [
        "(line 271,col 9)-(line 273,col 9)",
        "(line 274,col 9)-(line 274,col 35)",
        "(line 275,col 9)-(line 275,col 26)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.findRangeBounds(org.jfree.data.xy.XYDataset)",
      "begin_line": 289,
      "end_line": 291,
      "comment": "\r\n     * Returns the range of values the renderer requires to display all the\r\n     * items from the specified dataset.\r\n     *\r\n     * @param dataset  the dataset (\u003ccode\u003enull\u003c/code\u003e permitted).\r\n     *\r\n     * @return The range (\u003ccode\u003enull\u003c/code\u003e if the dataset is \u003ccode\u003enull\u003c/code\u003e\r\n     *         or empty).\r\n     *\r\n     * @see #findDomainBounds(XYDataset)\r\n     ",
      "child_ranges": [
        "(line 290,col 9)-(line 290,col 46)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.lookupBoxPaint(int, int)",
      "begin_line": 305,
      "end_line": 315,
      "comment": "\r\n     * Returns the box paint or, if this is \u003ccode\u003enull\u003c/code\u003e, the item\r\n     * paint.\r\n     *\r\n     * @param series  the series index.\r\n     * @param item  the item index.\r\n     *\r\n     * @return The paint used to fill the box for the specified item (never\r\n     *         \u003ccode\u003enull\u003c/code\u003e).\r\n     *\r\n     * @since 1.0.10\r\n     ",
      "child_ranges": [
        "(line 306,col 9)-(line 306,col 32)",
        "(line 307,col 9)-(line 314,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.drawItem(java.awt.Graphics2D, org.jfree.chart.renderer.xy.XYItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.XYPlot, org.jfree.chart.axis.ValueAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.xy.XYDataset, int, int, boolean, int)",
      "begin_line": 333,
      "end_line": 349,
      "comment": "\r\n     * Draws the visual representation of a single data item.\r\n     *\r\n     * @param g2  the graphics device.\r\n     * @param state  the renderer state.\r\n     * @param dataArea  the area within which the plot is being drawn.\r\n     * @param plot  the plot (can be used to obtain standard color\r\n     *              information etc).\r\n     * @param domainAxis  the domain axis.\r\n     * @param rangeAxis  the range axis.\r\n     * @param dataset  the dataset (must be an instance of\r\n     *                 {@link BoxAndWhiskerXYDataset}).\r\n     * @param series  the series index (zero-based).\r\n     * @param item  the item index (zero-based).\r\n     * @param pass  the pass index.\r\n     ",
      "child_ranges": [
        "(line 338,col 9)-(line 338,col 60)",
        "(line 340,col 9)-(line 347,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.drawHorizontalItem(java.awt.Graphics2D, org.jfree.chart.renderer.xy.XYItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.XYPlot, org.jfree.chart.axis.ValueAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.xy.XYDataset, int, int, boolean, int)",
      "begin_line": 370,
      "end_line": 491,
      "comment": "\r\n     * Draws the visual representation of a single data item.\r\n     *\r\n     * @param g2  the graphics device.\r\n     * @param state  the rendering state.\r\n     * @param dataArea  the area within which the plot is being drawn.\r\n     * @param plot  the plot (can be used to obtain standard color\r\n     *              information etc).\r\n     * @param domainAxis  the domain axis.\r\n     * @param rangeAxis  the range axis.\r\n     * @param dataset  the dataset (must be an instance of\r\n     *                 {@link BoxAndWhiskerXYDataset}).\r\n     * @param series  the series index (zero-based).\r\n     * @param item  the item index (zero-based).\r\n     * @param selected  is the data item selected?\r\n     * @param pass  the pass index.\r\n     *\r\n     * @since 1.2.0\r\n     ",
      "child_ranges": [
        "(line 376,col 9)-(line 376,col 41)",
        "(line 377,col 9)-(line 379,col 9)",
        "(line 381,col 9)-(line 382,col 51)",
        "(line 384,col 9)-(line 384,col 56)",
        "(line 385,col 9)-(line 385,col 73)",
        "(line 386,col 9)-(line 386,col 73)",
        "(line 387,col 9)-(line 387,col 72)",
        "(line 388,col 9)-(line 388,col 71)",
        "(line 389,col 9)-(line 389,col 70)",
        "(line 390,col 9)-(line 390,col 70)",
        "(line 392,col 9)-(line 393,col 42)",
        "(line 395,col 9)-(line 395,col 57)",
        "(line 396,col 9)-(line 397,col 26)",
        "(line 398,col 9)-(line 399,col 26)",
        "(line 400,col 9)-(line 401,col 36)",
        "(line 402,col 9)-(line 402,col 31)",
        "(line 403,col 9)-(line 406,col 9)",
        "(line 407,col 9)-(line 408,col 36)",
        "(line 409,col 9)-(line 410,col 36)",
        "(line 412,col 9)-(line 412,col 45)",
        "(line 413,col 9)-(line 413,col 37)",
        "(line 414,col 9)-(line 414,col 48)",
        "(line 415,col 9)-(line 415,col 35)",
        "(line 416,col 9)-(line 416,col 55)",
        "(line 417,col 9)-(line 429,col 9)",
        "(line 431,col 9)-(line 431,col 58)",
        "(line 432,col 9)-(line 432,col 57)",
        "(line 433,col 9)-(line 433,col 24)",
        "(line 436,col 9)-(line 436,col 62)",
        "(line 437,col 9)-(line 438,col 33)",
        "(line 441,col 9)-(line 441,col 62)",
        "(line 442,col 9)-(line 443,col 33)",
        "(line 446,col 9)-(line 446,col 25)",
        "(line 447,col 9)-(line 454,col 9)",
        "(line 455,col 9)-(line 458,col 9)",
        "(line 459,col 9)-(line 459,col 67)",
        "(line 460,col 9)-(line 460,col 65)",
        "(line 461,col 9)-(line 461,col 21)",
        "(line 464,col 9)-(line 464,col 40)",
        "(line 465,col 9)-(line 466,col 59)",
        "(line 469,col 9)-(line 481,col 9)",
        "(line 486,col 9)-(line 489,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.drawVerticalItem(java.awt.Graphics2D, org.jfree.chart.renderer.xy.XYItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.XYPlot, org.jfree.chart.axis.ValueAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.xy.XYDataset, int, int, boolean, int)",
      "begin_line": 510,
      "end_line": 705,
      "comment": "\r\n     * Draws the visual representation of a single data item.\r\n     *\r\n     * @param g2  the graphics device.\r\n     * @param state  the rendering state.\r\n     * @param dataArea  the area within which the plot is being drawn.\r\n     * @param plot  the plot (can be used to obtain standard color\r\n     *              information etc).\r\n     * @param domainAxis  the domain axis.\r\n     * @param rangeAxis  the range axis.\r\n     * @param dataset  the dataset (must be an instance of\r\n     *                 {@link BoxAndWhiskerXYDataset}).\r\n     * @param series  the series index (zero-based).\r\n     * @param item  the item index (zero-based).\r\n     * @param selected  is the data item selected?\r\n     * @param pass  the pass index.\r\n     ",
      "child_ranges": [
        "(line 516,col 9)-(line 516,col 41)",
        "(line 517,col 9)-(line 519,col 9)",
        "(line 521,col 9)-(line 522,col 47)",
        "(line 524,col 9)-(line 524,col 56)",
        "(line 525,col 9)-(line 525,col 73)",
        "(line 526,col 9)-(line 526,col 73)",
        "(line 527,col 9)-(line 527,col 72)",
        "(line 528,col 9)-(line 528,col 71)",
        "(line 529,col 9)-(line 529,col 70)",
        "(line 530,col 9)-(line 530,col 70)",
        "(line 531,col 9)-(line 531,col 69)",
        "(line 533,col 9)-(line 534,col 42)",
        "(line 536,col 9)-(line 536,col 57)",
        "(line 537,col 9)-(line 538,col 26)",
        "(line 539,col 9)-(line 540,col 26)",
        "(line 541,col 9)-(line 542,col 36)",
        "(line 543,col 9)-(line 543,col 31)",
        "(line 544,col 9)-(line 547,col 9)",
        "(line 548,col 9)-(line 549,col 36)",
        "(line 550,col 9)-(line 551,col 36)",
        "(line 552,col 9)-(line 552,col 25)",
        "(line 555,col 9)-(line 555,col 45)",
        "(line 556,col 9)-(line 556,col 37)",
        "(line 557,col 9)-(line 557,col 67)",
        "(line 558,col 9)-(line 558,col 35)",
        "(line 559,col 9)-(line 559,col 55)",
        "(line 560,col 9)-(line 572,col 9)",
        "(line 574,col 9)-(line 574,col 58)",
        "(line 575,col 9)-(line 575,col 57)",
        "(line 576,col 9)-(line 576,col 24)",
        "(line 579,col 9)-(line 579,col 62)",
        "(line 580,col 9)-(line 581,col 24)",
        "(line 584,col 9)-(line 584,col 62)",
        "(line 585,col 9)-(line 586,col 24)",
        "(line 589,col 9)-(line 589,col 25)",
        "(line 590,col 9)-(line 597,col 9)",
        "(line 598,col 9)-(line 601,col 9)",
        "(line 602,col 9)-(line 602,col 67)",
        "(line 603,col 9)-(line 603,col 65)",
        "(line 604,col 9)-(line 604,col 21)",
        "(line 607,col 9)-(line 607,col 40)",
        "(line 608,col 9)-(line 609,col 27)",
        "(line 611,col 9)-(line 611,col 27)",
        "(line 612,col 9)-(line 612,col 35)",
        "(line 615,col 9)-(line 626,col 9)",
        "(line 628,col 9)-(line 628,col 40)",
        "(line 629,col 9)-(line 630,col 46)",
        "(line 637,col 9)-(line 660,col 9)",
        "(line 664,col 9)-(line 667,col 9)",
        "(line 670,col 9)-(line 671,col 46)",
        "(line 672,col 9)-(line 673,col 46)",
        "(line 676,col 9)-(line 688,col 9)",
        "(line 691,col 9)-(line 693,col 9)",
        "(line 695,col 9)-(line 697,col 9)",
        "(line 700,col 9)-(line 703,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.drawEllipse(java.awt.geom.Point2D, double, java.awt.Graphics2D)",
      "begin_line": 714,
      "end_line": 718,
      "comment": "\r\n     * Draws an ellipse to represent an outlier.\r\n     *\r\n     * @param point  the location.\r\n     * @param oRadius  the radius.\r\n     * @param g2  the graphics device.\r\n     ",
      "child_ranges": [
        "(line 715,col 9)-(line 716,col 48)",
        "(line 717,col 9)-(line 717,col 21)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.drawMultipleEllipse(java.awt.geom.Point2D, double, double, java.awt.Graphics2D)",
      "begin_line": 728,
      "end_line": 738,
      "comment": "\r\n     * Draws two ellipses to represent overlapping outliers.\r\n     *\r\n     * @param point  the location.\r\n     * @param boxWidth  the box width.\r\n     * @param oRadius  the radius.\r\n     * @param g2  the graphics device.\r\n     ",
      "child_ranges": [
        "(line 731,col 9)-(line 732,col 76)",
        "(line 733,col 9)-(line 734,col 66)",
        "(line 735,col 9)-(line 735,col 22)",
        "(line 736,col 9)-(line 736,col 22)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.drawHighFarOut(double, java.awt.Graphics2D, double, double)",
      "begin_line": 748,
      "end_line": 754,
      "comment": "\r\n     * Draws a triangle to indicate the presence of far out values.\r\n     *\r\n     * @param aRadius  the radius.\r\n     * @param g2  the graphics device.\r\n     * @param xx  the x value.\r\n     * @param m  the max y value.\r\n     ",
      "child_ranges": [
        "(line 750,col 9)-(line 750,col 34)",
        "(line 751,col 9)-(line 751,col 77)",
        "(line 752,col 9)-(line 752,col 63)",
        "(line 753,col 9)-(line 753,col 63)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.drawLowFarOut(double, java.awt.Graphics2D, double, double)",
      "begin_line": 764,
      "end_line": 770,
      "comment": "\r\n     * Draws a triangle to indicate the presence of far out values.\r\n     *\r\n     * @param aRadius  the radius.\r\n     * @param g2  the graphics device.\r\n     * @param xx  the x value.\r\n     * @param m  the min y value.\r\n     ",
      "child_ranges": [
        "(line 766,col 9)-(line 766,col 34)",
        "(line 767,col 9)-(line 767,col 77)",
        "(line 768,col 9)-(line 768,col 63)",
        "(line 769,col 9)-(line 769,col 63)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.equals(java.lang.Object)",
      "begin_line": 779,
      "end_line": 804,
      "comment": "\r\n     * Tests this renderer for equality with another object.\r\n     *\r\n     * @param obj  the object (\u003ccode\u003enull\u003c/code\u003e permitted).\r\n     *\r\n     * @return \u003ccode\u003etrue\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e.\r\n     ",
      "child_ranges": [
        "(line 780,col 9)-(line 782,col 9)",
        "(line 783,col 9)-(line 785,col 9)",
        "(line 786,col 9)-(line 788,col 9)",
        "(line 789,col 9)-(line 789,col 69)",
        "(line 790,col 9)-(line 792,col 9)",
        "(line 793,col 9)-(line 795,col 9)",
        "(line 796,col 9)-(line 798,col 9)",
        "(line 799,col 9)-(line 801,col 9)",
        "(line 802,col 9)-(line 802,col 20)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.writeObject(java.io.ObjectOutputStream)",
      "begin_line": 813,
      "end_line": 817,
      "comment": "\r\n     * Provides serialization support.\r\n     *\r\n     * @param stream  the output stream.\r\n     *\r\n     * @throws IOException  if there is an I/O error.\r\n     ",
      "child_ranges": [
        "(line 814,col 9)-(line 814,col 36)",
        "(line 815,col 9)-(line 815,col 58)",
        "(line 816,col 9)-(line 816,col 63)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.readObject(java.io.ObjectInputStream)",
      "begin_line": 827,
      "end_line": 833,
      "comment": "\r\n     * Provides serialization support.\r\n     *\r\n     * @param stream  the input stream.\r\n     *\r\n     * @throws IOException  if there is an I/O error.\r\n     * @throws ClassNotFoundException  if there is a classpath problem.\r\n     ",
      "child_ranges": [
        "(line 830,col 9)-(line 830,col 35)",
        "(line 831,col 9)-(line 831,col 58)",
        "(line 832,col 9)-(line 832,col 63)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.clone()",
      "begin_line": 842,
      "end_line": 844,
      "comment": "\r\n     * Returns a clone of the renderer.\r\n     *\r\n     * @return A clone.\r\n     *\r\n     * @throws CloneNotSupportedException  if the renderer cannot be cloned.\r\n     ",
      "child_ranges": [
        "(line 843,col 9)-(line 843,col 29)"
      ]
    }
  ]
}