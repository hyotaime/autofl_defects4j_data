{
  "filepath": "/tmp/Chart-2b/source/org/jfree/chart/renderer/category/IntervalBarRenderer.java",
  "nodes": [
    {
      "type": "class_interface",
      "name": "IntervalBarRenderer",
      "is_interface": false,
      "parent_types": [
        "org.jfree.chart.renderer.category.BarRenderer"
      ],
      "begin_line": 97,
      "end_line": 300,
      "comment": "\r\n * A renderer that handles the drawing of bars for a bar plot where\r\n * each bar has a high and low value.  This renderer is for use with the\r\n * {@link CategoryPlot} class.  The example shown here is generated by the\r\n * \u003ccode\u003eIntervalBarChartDemo1.java\u003c/code\u003e program included in the JFreeChart\r\n * Demo Collection:\r\n * \u003cbr\u003e\u003cbr\u003e\r\n * \u003cimg src\u003d\"../../../../../images/IntervalBarRendererSample.png\"\r\n * alt\u003d\"IntervalBarRendererSample.png\" /\u003e\r\n "
    },
    {
      "type": "field",
      "varNames": [
        "serialVersionUID"
      ],
      "begin_line": 100,
      "end_line": 100,
      "comment": " For serialization. "
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.renderer.category.IntervalBarRenderer.IntervalBarRenderer()",
      "begin_line": 105,
      "end_line": 107,
      "comment": "\r\n     * Constructs a new renderer.\r\n     ",
      "child_ranges": [
        "(line 106,col 9)-(line 106,col 16)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.IntervalBarRenderer.findRangeBounds(org.jfree.data.category.CategoryDataset)",
      "begin_line": 119,
      "end_line": 121,
      "comment": "\r\n     * Returns the range of values from the specified dataset.  For this\r\n     * renderer, this is equivalent to calling\r\n     * \u003ccode\u003efindRangeBounds(dataset, true)\u003c/code\u003e.\r\n     *\r\n     * @param dataset  the dataset (\u003ccode\u003enull\u003c/code\u003e permitted).\r\n     *\r\n     * @return The range (or \u003ccode\u003enull\u003c/code\u003e if the dataset is\r\n     *         \u003ccode\u003enull\u003c/code\u003e or empty).\r\n     ",
      "child_ranges": [
        "(line 120,col 9)-(line 120,col 46)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.IntervalBarRenderer.drawItem(java.awt.Graphics2D, org.jfree.chart.renderer.category.CategoryItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.CategoryPlot, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.category.CategoryDataset, int, int, boolean, int)",
      "begin_line": 137,
      "end_line": 152,
      "comment": "\r\n     * Draws the bar for a single (series, category) data item.\r\n     *\r\n     * @param g2  the graphics device.\r\n     * @param state  the renderer state.\r\n     * @param dataArea  the data area.\r\n     * @param plot  the plot.\r\n     * @param domainAxis  the domain axis.\r\n     * @param rangeAxis  the range axis.\r\n     * @param dataset  the dataset.\r\n     * @param row  the row index (zero-based).\r\n     * @param column  the column index (zero-based).\r\n     * @param pass  the pass index.\r\n     ",
      "child_ranges": [
        "(line 142,col 10)-(line 150,col 10)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.IntervalBarRenderer.drawInterval(java.awt.Graphics2D, org.jfree.chart.renderer.category.CategoryItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.CategoryPlot, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.category.IntervalCategoryDataset, int, int, boolean)",
      "begin_line": 170,
      "end_line": 280,
      "comment": "\r\n      * Draws a single interval.\r\n      *\r\n      * @param g2  the graphics device.\r\n      * @param state  the renderer state.\r\n      * @param dataArea  the data plot area.\r\n      * @param plot  the plot.\r\n      * @param domainAxis  the domain axis.\r\n      * @param rangeAxis  the range axis.\r\n      * @param dataset  the data.\r\n      * @param row  the row index (zero-based).\r\n      * @param column  the column index (zero-based).\r\n      * @param selected  is the item selected?\r\n      *\r\n      * @since 1.2.0\r\n      ",
      "child_ranges": [
        "(line 176,col 9)-(line 176,col 58)",
        "(line 177,col 9)-(line 179,col 9)",
        "(line 180,col 9)-(line 181,col 64)",
        "(line 183,col 9)-(line 183,col 45)",
        "(line 185,col 9)-(line 185,col 60)",
        "(line 187,col 9)-(line 187,col 27)",
        "(line 188,col 9)-(line 188,col 27)",
        "(line 190,col 9)-(line 190,col 68)",
        "(line 191,col 9)-(line 191,col 66)",
        "(line 194,col 9)-(line 194,col 57)",
        "(line 195,col 9)-(line 197,col 9)",
        "(line 198,col 9)-(line 199,col 45)",
        "(line 202,col 9)-(line 202,col 59)",
        "(line 203,col 9)-(line 205,col 9)",
        "(line 206,col 9)-(line 207,col 67)",
        "(line 209,col 9)-(line 213,col 9)",
        "(line 216,col 9)-(line 216,col 47)",
        "(line 219,col 9)-(line 219,col 66)",
        "(line 221,col 9)-(line 221,col 51)",
        "(line 222,col 9)-(line 257,col 9)",
        "(line 258,col 9)-(line 259,col 28)",
        "(line 260,col 9)-(line 260,col 45)",
        "(line 261,col 9)-(line 264,col 9)",
        "(line 265,col 9)-(line 265,col 80)",
        "(line 267,col 9)-(line 268,col 34)",
        "(line 269,col 9)-(line 272,col 9)",
        "(line 275,col 9)-(line 275,col 64)",
        "(line 276,col 9)-(line 278,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.IntervalBarRenderer.equals(java.lang.Object)",
      "begin_line": 289,
      "end_line": 298,
      "comment": "\r\n     * Tests this renderer for equality with an arbitrary object.\r\n     *\r\n     * @param obj  the object (\u003ccode\u003enull\u003c/code\u003e permitted).\r\n     *\r\n     * @return A boolean.\r\n     ",
      "child_ranges": [
        "(line 290,col 9)-(line 292,col 9)",
        "(line 293,col 9)-(line 295,col 9)",
        "(line 297,col 9)-(line 297,col 33)"
      ]
    }
  ]
}