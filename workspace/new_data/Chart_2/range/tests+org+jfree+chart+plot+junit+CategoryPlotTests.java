{
  "filepath": "/tmp/Chart-2b/tests/org/jfree/chart/plot/junit/CategoryPlotTests.java",
  "nodes": [
    {
      "type": "class_interface",
      "name": "CategoryPlotTests",
      "is_interface": false,
      "parent_types": [
        "TestCase"
      ],
      "begin_line": 111,
      "end_line": 1078,
      "comment": "\n * Tests for the {@link CategoryPlot} class.\n "
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.suite()",
      "begin_line": 118,
      "end_line": 120,
      "comment": "\n     * Returns the tests as a test suite.\n     *\n     * @return The test suite.\n     ",
      "child_ranges": [
        "(line 119,col 9)-(line 119,col 54)"
      ]
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.CategoryPlotTests(java.lang.String)",
      "begin_line": 127,
      "end_line": 129,
      "comment": "\n     * Constructs a new set of tests.\n     *\n     * @param name  the name of the tests.\n     ",
      "child_ranges": [
        "(line 128,col 9)-(line 128,col 20)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testConstructor()",
      "begin_line": 134,
      "end_line": 138,
      "comment": "\n     * Some checks for the constructor.\n     ",
      "child_ranges": [
        "(line 135,col 9)-(line 135,col 47)",
        "(line 136,col 9)-(line 137,col 38)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testAxisRange()",
      "begin_line": 143,
      "end_line": 154,
      "comment": "\n     * A test for a bug reported in the forum.\n     ",
      "child_ranges": [
        "(line 144,col 9)-(line 144,col 71)",
        "(line 145,col 9)-(line 145,col 71)",
        "(line 146,col 9)-(line 146,col 44)",
        "(line 147,col 9)-(line 147,col 44)",
        "(line 148,col 9)-(line 149,col 66)",
        "(line 150,col 9)-(line 150,col 37)",
        "(line 151,col 9)-(line 151,col 56)",
        "(line 152,col 9)-(line 152,col 49)",
        "(line 153,col 9)-(line 153,col 55)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testEquals()",
      "begin_line": 159,
      "end_line": 510,
      "comment": "\n     * Test that the equals() method differentiates all the required fields.\n     ",
      "child_ranges": [
        "(line 161,col 9)-(line 161,col 48)",
        "(line 162,col 9)-(line 162,col 48)",
        "(line 163,col 9)-(line 163,col 40)",
        "(line 164,col 9)-(line 164,col 40)",
        "(line 167,col 9)-(line 167,col 57)",
        "(line 168,col 9)-(line 168,col 41)",
        "(line 169,col 9)-(line 169,col 57)",
        "(line 170,col 9)-(line 170,col 40)",
        "(line 173,col 9)-(line 173,col 73)",
        "(line 174,col 9)-(line 174,col 41)",
        "(line 175,col 9)-(line 175,col 73)",
        "(line 176,col 9)-(line 176,col 40)",
        "(line 179,col 9)-(line 179,col 63)",
        "(line 180,col 9)-(line 180,col 41)",
        "(line 181,col 9)-(line 181,col 63)",
        "(line 182,col 9)-(line 182,col 40)",
        "(line 185,col 9)-(line 185,col 68)",
        "(line 186,col 9)-(line 186,col 41)",
        "(line 187,col 9)-(line 187,col 68)",
        "(line 188,col 9)-(line 188,col 40)",
        "(line 191,col 9)-(line 191,col 63)",
        "(line 192,col 9)-(line 192,col 41)",
        "(line 193,col 9)-(line 193,col 63)",
        "(line 194,col 9)-(line 194,col 40)",
        "(line 197,col 9)-(line 197,col 67)",
        "(line 198,col 9)-(line 198,col 41)",
        "(line 199,col 9)-(line 199,col 67)",
        "(line 200,col 9)-(line 200,col 40)",
        "(line 203,col 9)-(line 203,col 72)",
        "(line 204,col 9)-(line 204,col 41)",
        "(line 205,col 9)-(line 205,col 72)",
        "(line 206,col 9)-(line 206,col 40)",
        "(line 209,col 9)-(line 209,col 57)",
        "(line 210,col 9)-(line 210,col 41)",
        "(line 211,col 9)-(line 211,col 57)",
        "(line 212,col 9)-(line 212,col 40)",
        "(line 215,col 9)-(line 215,col 71)",
        "(line 216,col 9)-(line 216,col 41)",
        "(line 217,col 9)-(line 217,col 71)",
        "(line 218,col 9)-(line 218,col 40)",
        "(line 221,col 9)-(line 221,col 62)",
        "(line 222,col 9)-(line 222,col 41)",
        "(line 223,col 9)-(line 223,col 62)",
        "(line 224,col 9)-(line 224,col 40)",
        "(line 227,col 9)-(line 227,col 66)",
        "(line 228,col 9)-(line 228,col 41)",
        "(line 229,col 9)-(line 229,col 66)",
        "(line 230,col 9)-(line 230,col 40)",
        "(line 233,col 9)-(line 233,col 45)",
        "(line 234,col 9)-(line 234,col 41)",
        "(line 235,col 9)-(line 235,col 45)",
        "(line 236,col 9)-(line 236,col 40)",
        "(line 239,col 9)-(line 239,col 44)",
        "(line 240,col 9)-(line 240,col 41)",
        "(line 241,col 9)-(line 241,col 44)",
        "(line 242,col 9)-(line 242,col 40)",
        "(line 245,col 9)-(line 245,col 46)",
        "(line 246,col 9)-(line 246,col 41)",
        "(line 247,col 9)-(line 247,col 46)",
        "(line 248,col 9)-(line 248,col 40)",
        "(line 251,col 9)-(line 251,col 50)",
        "(line 252,col 9)-(line 252,col 41)",
        "(line 253,col 9)-(line 253,col 50)",
        "(line 254,col 9)-(line 254,col 40)",
        "(line 257,col 9)-(line 257,col 70)",
        "(line 258,col 9)-(line 258,col 41)",
        "(line 259,col 9)-(line 259,col 70)",
        "(line 260,col 9)-(line 260,col 40)",
        "(line 263,col 9)-(line 263,col 60)",
        "(line 264,col 9)-(line 264,col 41)",
        "(line 265,col 9)-(line 265,col 60)",
        "(line 266,col 9)-(line 266,col 40)",
        "(line 269,col 9)-(line 269,col 57)",
        "(line 270,col 9)-(line 270,col 41)",
        "(line 271,col 9)-(line 271,col 57)",
        "(line 272,col 9)-(line 272,col 40)",
        "(line 275,col 9)-(line 275,col 46)",
        "(line 276,col 9)-(line 276,col 41)",
        "(line 277,col 9)-(line 277,col 46)",
        "(line 278,col 9)-(line 278,col 40)",
        "(line 281,col 9)-(line 281,col 60)",
        "(line 282,col 9)-(line 282,col 41)",
        "(line 283,col 9)-(line 283,col 60)",
        "(line 284,col 9)-(line 284,col 40)",
        "(line 287,col 9)-(line 287,col 46)",
        "(line 288,col 9)-(line 288,col 46)",
        "(line 289,col 9)-(line 289,col 41)",
        "(line 290,col 9)-(line 290,col 46)",
        "(line 291,col 9)-(line 291,col 40)",
        "(line 294,col 9)-(line 295,col 43)",
        "(line 296,col 9)-(line 296,col 41)",
        "(line 297,col 9)-(line 298,col 43)",
        "(line 299,col 9)-(line 299,col 40)",
        "(line 302,col 9)-(line 302,col 46)",
        "(line 303,col 9)-(line 303,col 41)",
        "(line 304,col 9)-(line 304,col 46)",
        "(line 305,col 9)-(line 305,col 40)",
        "(line 308,col 9)-(line 308,col 45)",
        "(line 309,col 9)-(line 309,col 41)",
        "(line 310,col 9)-(line 310,col 45)",
        "(line 311,col 9)-(line 311,col 40)",
        "(line 314,col 9)-(line 315,col 43)",
        "(line 316,col 9)-(line 316,col 41)",
        "(line 317,col 9)-(line 318,col 43)",
        "(line 319,col 9)-(line 319,col 40)",
        "(line 322,col 9)-(line 322,col 36)",
        "(line 323,col 9)-(line 323,col 41)",
        "(line 324,col 9)-(line 324,col 36)",
        "(line 325,col 9)-(line 325,col 40)",
        "(line 328,col 9)-(line 328,col 45)",
        "(line 329,col 9)-(line 329,col 41)",
        "(line 330,col 9)-(line 330,col 45)",
        "(line 331,col 9)-(line 331,col 40)",
        "(line 334,col 9)-(line 334,col 44)",
        "(line 335,col 9)-(line 335,col 41)",
        "(line 336,col 9)-(line 336,col 44)",
        "(line 337,col 9)-(line 337,col 40)",
        "(line 340,col 9)-(line 340,col 46)",
        "(line 341,col 9)-(line 341,col 41)",
        "(line 342,col 9)-(line 342,col 46)",
        "(line 343,col 9)-(line 343,col 40)",
        "(line 346,col 9)-(line 347,col 43)",
        "(line 348,col 9)-(line 348,col 41)",
        "(line 349,col 9)-(line 350,col 43)",
        "(line 351,col 9)-(line 351,col 40)",
        "(line 354,col 9)-(line 354,col 51)",
        "(line 355,col 9)-(line 355,col 41)",
        "(line 356,col 9)-(line 356,col 51)",
        "(line 357,col 9)-(line 357,col 40)",
        "(line 360,col 9)-(line 360,col 74)",
        "(line 361,col 9)-(line 361,col 41)",
        "(line 362,col 9)-(line 362,col 74)",
        "(line 363,col 9)-(line 363,col 40)",
        "(line 366,col 9)-(line 366,col 74)",
        "(line 367,col 9)-(line 367,col 41)",
        "(line 368,col 9)-(line 368,col 74)",
        "(line 369,col 9)-(line 369,col 40)",
        "(line 372,col 9)-(line 372,col 69)",
        "(line 373,col 9)-(line 373,col 41)",
        "(line 374,col 9)-(line 374,col 69)",
        "(line 375,col 9)-(line 375,col 40)",
        "(line 377,col 9)-(line 377,col 69)",
        "(line 378,col 9)-(line 378,col 41)",
        "(line 379,col 9)-(line 379,col 69)",
        "(line 380,col 9)-(line 380,col 40)",
        "(line 383,col 9)-(line 383,col 72)",
        "(line 384,col 9)-(line 384,col 41)",
        "(line 385,col 9)-(line 385,col 72)",
        "(line 386,col 9)-(line 386,col 40)",
        "(line 389,col 9)-(line 389,col 72)",
        "(line 390,col 9)-(line 390,col 41)",
        "(line 391,col 9)-(line 391,col 72)",
        "(line 392,col 9)-(line 392,col 40)",
        "(line 395,col 9)-(line 396,col 23)",
        "(line 397,col 9)-(line 397,col 41)",
        "(line 398,col 9)-(line 399,col 23)",
        "(line 400,col 9)-(line 400,col 40)",
        "(line 403,col 9)-(line 403,col 27)",
        "(line 404,col 9)-(line 404,col 41)",
        "(line 405,col 9)-(line 405,col 27)",
        "(line 406,col 9)-(line 406,col 40)",
        "(line 409,col 9)-(line 409,col 55)",
        "(line 410,col 9)-(line 410,col 41)",
        "(line 411,col 9)-(line 411,col 55)",
        "(line 412,col 9)-(line 412,col 40)",
        "(line 415,col 9)-(line 415,col 54)",
        "(line 416,col 9)-(line 416,col 41)",
        "(line 417,col 9)-(line 417,col 54)",
        "(line 418,col 9)-(line 418,col 40)",
        "(line 421,col 9)-(line 421,col 62)",
        "(line 422,col 9)-(line 422,col 41)",
        "(line 423,col 9)-(line 423,col 62)",
        "(line 424,col 9)-(line 424,col 40)",
        "(line 427,col 9)-(line 427,col 43)",
        "(line 428,col 9)-(line 428,col 41)",
        "(line 429,col 9)-(line 429,col 43)",
        "(line 430,col 9)-(line 430,col 40)",
        "(line 433,col 9)-(line 433,col 47)",
        "(line 434,col 9)-(line 434,col 41)",
        "(line 435,col 9)-(line 435,col 47)",
        "(line 436,col 9)-(line 436,col 40)",
        "(line 439,col 9)-(line 439,col 44)",
        "(line 440,col 9)-(line 440,col 41)",
        "(line 441,col 9)-(line 441,col 44)",
        "(line 442,col 9)-(line 442,col 40)",
        "(line 445,col 9)-(line 445,col 46)",
        "(line 446,col 9)-(line 446,col 41)",
        "(line 447,col 9)-(line 447,col 46)",
        "(line 448,col 9)-(line 448,col 40)",
        "(line 451,col 9)-(line 452,col 41)",
        "(line 453,col 9)-(line 453,col 41)",
        "(line 454,col 9)-(line 455,col 41)",
        "(line 456,col 9)-(line 456,col 40)",
        "(line 459,col 9)-(line 459,col 63)",
        "(line 460,col 9)-(line 460,col 41)",
        "(line 461,col 9)-(line 461,col 63)",
        "(line 462,col 9)-(line 462,col 40)",
        "(line 464,col 9)-(line 464,col 50)",
        "(line 465,col 9)-(line 465,col 41)",
        "(line 466,col 9)-(line 466,col 50)",
        "(line 467,col 9)-(line 467,col 40)",
        "(line 469,col 9)-(line 470,col 52)",
        "(line 471,col 9)-(line 471,col 41)",
        "(line 472,col 9)-(line 473,col 41)",
        "(line 474,col 9)-(line 474,col 40)",
        "(line 476,col 9)-(line 476,col 66)",
        "(line 477,col 9)-(line 477,col 41)",
        "(line 478,col 9)-(line 478,col 66)",
        "(line 479,col 9)-(line 479,col 40)",
        "(line 481,col 9)-(line 481,col 79)",
        "(line 482,col 9)-(line 482,col 41)",
        "(line 483,col 9)-(line 483,col 79)",
        "(line 484,col 9)-(line 484,col 40)",
        "(line 486,col 9)-(line 487,col 52)",
        "(line 488,col 9)-(line 488,col 41)",
        "(line 489,col 9)-(line 490,col 41)",
        "(line 491,col 9)-(line 491,col 40)",
        "(line 493,col 9)-(line 493,col 65)",
        "(line 494,col 9)-(line 494,col 41)",
        "(line 495,col 9)-(line 495,col 65)",
        "(line 496,col 9)-(line 496,col 40)",
        "(line 499,col 9)-(line 500,col 40)",
        "(line 501,col 9)-(line 501,col 41)",
        "(line 502,col 9)-(line 503,col 40)",
        "(line 504,col 9)-(line 504,col 40)",
        "(line 506,col 9)-(line 506,col 39)",
        "(line 507,col 9)-(line 507,col 41)",
        "(line 508,col 9)-(line 508,col 39)",
        "(line 509,col 9)-(line 509,col 40)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testCloning()",
      "begin_line": 515,
      "end_line": 562,
      "comment": "\n     * Confirm that cloning works.\n     ",
      "child_ranges": [
        "(line 516,col 9)-(line 516,col 45)",
        "(line 517,col 9)-(line 518,col 43)",
        "(line 519,col 9)-(line 520,col 40)",
        "(line 521,col 9)-(line 522,col 42)",
        "(line 523,col 9)-(line 523,col 31)",
        "(line 524,col 9)-(line 530,col 9)",
        "(line 531,col 9)-(line 531,col 29)",
        "(line 532,col 9)-(line 532,col 51)",
        "(line 533,col 9)-(line 533,col 34)",
        "(line 536,col 9)-(line 537,col 51)",
        "(line 538,col 9)-(line 538,col 35)",
        "(line 539,col 9)-(line 540,col 51)",
        "(line 541,col 9)-(line 541,col 34)",
        "(line 543,col 9)-(line 543,col 71)",
        "(line 544,col 9)-(line 544,col 35)",
        "(line 545,col 9)-(line 545,col 71)",
        "(line 546,col 9)-(line 546,col 34)",
        "(line 548,col 9)-(line 548,col 71)",
        "(line 549,col 9)-(line 549,col 35)",
        "(line 550,col 9)-(line 550,col 71)",
        "(line 551,col 9)-(line 551,col 34)",
        "(line 553,col 9)-(line 553,col 66)",
        "(line 554,col 9)-(line 554,col 35)",
        "(line 555,col 9)-(line 555,col 66)",
        "(line 556,col 9)-(line 556,col 34)",
        "(line 558,col 9)-(line 558,col 66)",
        "(line 559,col 9)-(line 559,col 35)",
        "(line 560,col 9)-(line 560,col 66)",
        "(line 561,col 9)-(line 561,col 34)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testCloning2()",
      "begin_line": 567,
      "end_line": 593,
      "comment": "\n     * Some more cloning checks.\n     ",
      "child_ranges": [
        "(line 568,col 9)-(line 568,col 40)",
        "(line 569,col 9)-(line 569,col 40)",
        "(line 570,col 9)-(line 570,col 45)",
        "(line 571,col 9)-(line 571,col 40)",
        "(line 572,col 9)-(line 572,col 39)",
        "(line 573,col 9)-(line 573,col 31)",
        "(line 574,col 9)-(line 579,col 9)",
        "(line 580,col 9)-(line 580,col 29)",
        "(line 581,col 9)-(line 581,col 51)",
        "(line 582,col 9)-(line 582,col 34)",
        "(line 584,col 9)-(line 584,col 28)",
        "(line 585,col 9)-(line 585,col 35)",
        "(line 586,col 9)-(line 586,col 53)",
        "(line 587,col 9)-(line 587,col 34)",
        "(line 589,col 9)-(line 589,col 28)",
        "(line 590,col 9)-(line 590,col 35)",
        "(line 591,col 9)-(line 591,col 52)",
        "(line 592,col 9)-(line 592,col 34)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testCloning3()",
      "begin_line": 598,
      "end_line": 625,
      "comment": "\n     * Some more cloning checks.\n     ",
      "child_ranges": [
        "(line 599,col 9)-(line 599,col 61)",
        "(line 600,col 9)-(line 600,col 45)",
        "(line 601,col 9)-(line 601,col 35)",
        "(line 602,col 9)-(line 602,col 31)",
        "(line 603,col 9)-(line 608,col 9)",
        "(line 609,col 9)-(line 609,col 29)",
        "(line 610,col 9)-(line 610,col 51)",
        "(line 611,col 9)-(line 611,col 34)",
        "(line 613,col 9)-(line 617,col 30)",
        "(line 618,col 9)-(line 618,col 35)",
        "(line 619,col 9)-(line 623,col 30)",
        "(line 624,col 9)-(line 624,col 34)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testBug2817504()",
      "begin_line": 631,
      "end_line": 649,
      "comment": "\n     * Renderers that belong to the plot are being cloned but they are\n     * retaining a reference to the original plot.\n     ",
      "child_ranges": [
        "(line 632,col 9)-(line 632,col 45)",
        "(line 633,col 9)-(line 633,col 61)",
        "(line 634,col 9)-(line 634,col 27)",
        "(line 635,col 9)-(line 635,col 31)",
        "(line 636,col 9)-(line 641,col 9)",
        "(line 642,col 9)-(line 642,col 29)",
        "(line 643,col 9)-(line 643,col 51)",
        "(line 644,col 9)-(line 644,col 34)",
        "(line 647,col 9)-(line 647,col 74)",
        "(line 648,col 9)-(line 648,col 39)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testSerialization()",
      "begin_line": 654,
      "end_line": 678,
      "comment": "\n     * Serialize an instance, restore it, and check for equality.\n     ",
      "child_ranges": [
        "(line 655,col 9)-(line 655,col 70)",
        "(line 656,col 9)-(line 656,col 61)",
        "(line 657,col 9)-(line 657,col 55)",
        "(line 658,col 9)-(line 658,col 49)",
        "(line 659,col 9)-(line 660,col 26)",
        "(line 661,col 9)-(line 661,col 54)",
        "(line 662,col 9)-(line 662,col 31)",
        "(line 663,col 9)-(line 676,col 9)",
        "(line 677,col 9)-(line 677,col 34)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testSerialization2()",
      "begin_line": 683,
      "end_line": 708,
      "comment": "\n     * Serialize an instance, restore it, and check for equality.\n     ",
      "child_ranges": [
        "(line 684,col 9)-(line 684,col 67)",
        "(line 685,col 9)-(line 685,col 61)",
        "(line 686,col 9)-(line 686,col 55)",
        "(line 687,col 9)-(line 687,col 49)",
        "(line 688,col 9)-(line 689,col 26)",
        "(line 690,col 9)-(line 690,col 52)",
        "(line 691,col 9)-(line 691,col 31)",
        "(line 693,col 9)-(line 706,col 9)",
        "(line 707,col 9)-(line 707,col 29)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testSerialization3()",
      "begin_line": 713,
      "end_line": 745,
      "comment": "\n     * Serialize an instance, restore it, and check for equality.\n     ",
      "child_ranges": [
        "(line 714,col 9)-(line 714,col 70)",
        "(line 715,col 9)-(line 716,col 62)",
        "(line 717,col 9)-(line 717,col 33)",
        "(line 720,col 9)-(line 733,col 9)",
        "(line 736,col 9)-(line 736,col 30)",
        "(line 737,col 9)-(line 743,col 9)",
        "(line 744,col 9)-(line 744,col 27)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testSerialization4()",
      "begin_line": 750,
      "end_line": 786,
      "comment": "\n     * This test ensures that a plot with markers is serialized correctly.\n     ",
      "child_ranges": [
        "(line 751,col 9)-(line 751,col 70)",
        "(line 752,col 9)-(line 753,col 62)",
        "(line 754,col 9)-(line 754,col 59)",
        "(line 755,col 9)-(line 755,col 68)",
        "(line 756,col 9)-(line 756,col 76)",
        "(line 757,col 9)-(line 757,col 33)",
        "(line 760,col 9)-(line 773,col 9)",
        "(line 774,col 9)-(line 774,col 36)",
        "(line 777,col 9)-(line 777,col 30)",
        "(line 778,col 9)-(line 784,col 9)",
        "(line 785,col 9)-(line 785,col 27)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testSerialization5()",
      "begin_line": 793,
      "end_line": 844,
      "comment": "\n     * Tests a bug where the plot is no longer registered as a listener\n     * with the dataset(s) and axes after deserialization.  See patch 1209475\n     * at SourceForge.\n     ",
      "child_ranges": [
        "(line 794,col 9)-(line 794,col 71)",
        "(line 795,col 9)-(line 795,col 64)",
        "(line 796,col 9)-(line 796,col 58)",
        "(line 797,col 9)-(line 797,col 50)",
        "(line 798,col 9)-(line 799,col 27)",
        "(line 800,col 9)-(line 800,col 64)",
        "(line 801,col 9)-(line 801,col 58)",
        "(line 802,col 9)-(line 802,col 50)",
        "(line 803,col 9)-(line 803,col 71)",
        "(line 804,col 9)-(line 804,col 35)",
        "(line 805,col 9)-(line 805,col 41)",
        "(line 806,col 9)-(line 806,col 39)",
        "(line 807,col 9)-(line 807,col 37)",
        "(line 808,col 9)-(line 808,col 31)",
        "(line 809,col 9)-(line 821,col 9)",
        "(line 822,col 9)-(line 822,col 29)",
        "(line 826,col 9)-(line 826,col 55)",
        "(line 827,col 9)-(line 827,col 64)",
        "(line 828,col 9)-(line 829,col 60)",
        "(line 830,col 9)-(line 830,col 64)",
        "(line 831,col 9)-(line 831,col 55)",
        "(line 832,col 9)-(line 832,col 64)",
        "(line 833,col 9)-(line 834,col 60)",
        "(line 835,col 9)-(line 835,col 65)",
        "(line 836,col 9)-(line 836,col 45)",
        "(line 837,col 9)-(line 837,col 48)",
        "(line 838,col 9)-(line 838,col 47)",
        "(line 839,col 9)-(line 839,col 46)",
        "(line 840,col 9)-(line 840,col 45)",
        "(line 841,col 9)-(line 841,col 48)",
        "(line 842,col 9)-(line 842,col 47)",
        "(line 843,col 9)-(line 843,col 46)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testSetRenderer()",
      "begin_line": 850,
      "end_line": 860,
      "comment": "\n     * A test for a bug where setting the renderer doesn\u0027t register the plot\n     * as a RendererChangeListener.\n     ",
      "child_ranges": [
        "(line 851,col 9)-(line 851,col 47)",
        "(line 852,col 9)-(line 852,col 67)",
        "(line 853,col 9)-(line 853,col 35)",
        "(line 856,col 9)-(line 856,col 67)",
        "(line 857,col 9)-(line 857,col 41)",
        "(line 858,col 9)-(line 858,col 48)",
        "(line 859,col 9)-(line 859,col 48)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.test1169972()",
      "begin_line": 865,
      "end_line": 872,
      "comment": "\n     * A test for bug report 1169972.\n     ",
      "child_ranges": [
        "(line 866,col 9)-(line 866,col 69)",
        "(line 867,col 9)-(line 867,col 50)",
        "(line 868,col 9)-(line 868,col 47)",
        "(line 869,col 9)-(line 869,col 44)",
        "(line 870,col 9)-(line 870,col 54)",
        "(line 871,col 9)-(line 871,col 33)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testAddDomainMarker()",
      "begin_line": 877,
      "end_line": 887,
      "comment": "\n     * Some tests for the addDomainMarker() method(s).\n     ",
      "child_ranges": [
        "(line 878,col 9)-(line 878,col 47)",
        "(line 879,col 9)-(line 879,col 52)",
        "(line 880,col 9)-(line 880,col 32)",
        "(line 881,col 9)-(line 882,col 45)",
        "(line 883,col 9)-(line 883,col 45)",
        "(line 884,col 9)-(line 884,col 34)",
        "(line 885,col 9)-(line 885,col 78)",
        "(line 886,col 9)-(line 886,col 46)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testAddRangeMarker()",
      "begin_line": 892,
      "end_line": 902,
      "comment": "\n     * Some tests for the addRangeMarker() method(s).\n     ",
      "child_ranges": [
        "(line 893,col 9)-(line 893,col 47)",
        "(line 894,col 9)-(line 894,col 40)",
        "(line 895,col 9)-(line 895,col 31)",
        "(line 896,col 9)-(line 897,col 45)",
        "(line 898,col 9)-(line 898,col 45)",
        "(line 899,col 9)-(line 899,col 33)",
        "(line 900,col 9)-(line 900,col 78)",
        "(line 901,col 9)-(line 901,col 46)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.test1654215()",
      "begin_line": 908,
      "end_line": 928,
      "comment": "\n     * A test for bug 1654215 (where a renderer is added to the plot without\n     * a corresponding dataset and it throws an exception at drawing time).\n     ",
      "child_ranges": [
        "(line 909,col 9)-(line 909,col 70)",
        "(line 910,col 9)-(line 911,col 31)",
        "(line 912,col 9)-(line 912,col 59)",
        "(line 913,col 9)-(line 913,col 56)",
        "(line 914,col 9)-(line 914,col 32)",
        "(line 915,col 9)-(line 926,col 9)",
        "(line 927,col 9)-(line 927,col 28)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testGetDomainAxisIndex()",
      "begin_line": 933,
      "end_line": 952,
      "comment": "\n     * Some checks for the getDomainAxisIndex() method.\n     ",
      "child_ranges": [
        "(line 934,col 9)-(line 934,col 58)",
        "(line 935,col 9)-(line 935,col 58)",
        "(line 936,col 9)-(line 936,col 53)",
        "(line 937,col 9)-(line 938,col 22)",
        "(line 939,col 9)-(line 939,col 62)",
        "(line 940,col 9)-(line 940,col 63)",
        "(line 941,col 9)-(line 941,col 43)",
        "(line 942,col 9)-(line 942,col 62)",
        "(line 943,col 9)-(line 943,col 74)",
        "(line 944,col 9)-(line 944,col 29)",
        "(line 945,col 9)-(line 950,col 9)",
        "(line 951,col 9)-(line 951,col 25)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testGetRangeAxisIndex()",
      "begin_line": 957,
      "end_line": 976,
      "comment": "\n     * Some checks for the getRangeAxisIndex() method.\n     ",
      "child_ranges": [
        "(line 958,col 9)-(line 958,col 58)",
        "(line 959,col 9)-(line 959,col 53)",
        "(line 960,col 9)-(line 960,col 53)",
        "(line 961,col 9)-(line 962,col 22)",
        "(line 963,col 9)-(line 963,col 60)",
        "(line 964,col 9)-(line 964,col 61)",
        "(line 965,col 9)-(line 965,col 41)",
        "(line 966,col 9)-(line 966,col 60)",
        "(line 967,col 9)-(line 967,col 71)",
        "(line 968,col 9)-(line 968,col 29)",
        "(line 969,col 9)-(line 974,col 9)",
        "(line 975,col 9)-(line 975,col 25)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testRemoveDomainMarker()",
      "begin_line": 982,
      "end_line": 985,
      "comment": "\n     * Check that removing a marker that isn\u0027t assigned to the plot returns\n     * false.\n     ",
      "child_ranges": [
        "(line 983,col 9)-(line 983,col 47)",
        "(line 984,col 9)-(line 984,col 79)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testRemoveRangeMarker()",
      "begin_line": 991,
      "end_line": 994,
      "comment": "\n     * Check that removing a marker that isn\u0027t assigned to the plot returns\n     * false.\n     ",
      "child_ranges": [
        "(line 992,col 9)-(line 992,col 47)",
        "(line 993,col 9)-(line 993,col 66)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testGetDomainAxisForDataset()",
      "begin_line": 999,
      "end_line": 1035,
      "comment": "\n     * Some tests for the getDomainAxisForDataset() method.\n     ",
      "child_ranges": [
        "(line 1000,col 9)-(line 1000,col 63)",
        "(line 1001,col 9)-(line 1001,col 51)",
        "(line 1002,col 9)-(line 1002,col 47)",
        "(line 1003,col 9)-(line 1003,col 58)",
        "(line 1004,col 9)-(line 1004,col 78)",
        "(line 1005,col 9)-(line 1005,col 61)",
        "(line 1008,col 9)-(line 1008,col 29)",
        "(line 1009,col 9)-(line 1014,col 9)",
        "(line 1015,col 9)-(line 1015,col 25)",
        "(line 1019,col 9)-(line 1019,col 53)",
        "(line 1020,col 9)-(line 1020,col 38)",
        "(line 1021,col 9)-(line 1021,col 61)",
        "(line 1023,col 9)-(line 1023,col 42)",
        "(line 1024,col 9)-(line 1024,col 62)",
        "(line 1026,col 9)-(line 1027,col 33)",
        "(line 1028,col 9)-(line 1028,col 52)",
        "(line 1029,col 9)-(line 1029,col 61)",
        "(line 1031,col 9)-(line 1032,col 33)",
        "(line 1033,col 9)-(line 1033,col 52)",
        "(line 1034,col 9)-(line 1034,col 62)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testGetRangeAxisForDataset()",
      "begin_line": 1040,
      "end_line": 1076,
      "comment": "\n     * Some tests for the getRangeAxisForDataset() method.\n     ",
      "child_ranges": [
        "(line 1041,col 9)-(line 1041,col 63)",
        "(line 1042,col 9)-(line 1042,col 51)",
        "(line 1043,col 9)-(line 1043,col 47)",
        "(line 1044,col 9)-(line 1044,col 74)",
        "(line 1045,col 9)-(line 1045,col 78)",
        "(line 1046,col 9)-(line 1046,col 60)",
        "(line 1049,col 9)-(line 1049,col 29)",
        "(line 1050,col 9)-(line 1055,col 9)",
        "(line 1056,col 9)-(line 1056,col 25)",
        "(line 1060,col 9)-(line 1060,col 49)",
        "(line 1061,col 9)-(line 1061,col 37)",
        "(line 1062,col 9)-(line 1062,col 60)",
        "(line 1064,col 9)-(line 1064,col 41)",
        "(line 1065,col 9)-(line 1065,col 61)",
        "(line 1067,col 9)-(line 1068,col 33)",
        "(line 1069,col 9)-(line 1069,col 51)",
        "(line 1070,col 9)-(line 1070,col 60)",
        "(line 1072,col 9)-(line 1073,col 33)",
        "(line 1074,col 9)-(line 1074,col 51)",
        "(line 1075,col 9)-(line 1075,col 61)"
      ]
    }
  ]
}