{
  "filepath": "/tmp/Chart-2b/source/org/jfree/chart/renderer/xy/YIntervalRenderer.java",
  "nodes": [
    {
      "type": "class_interface",
      "name": "YIntervalRenderer",
      "is_interface": false,
      "parent_types": [
        "org.jfree.chart.renderer.xy.AbstractXYItemRenderer",
        "org.jfree.chart.renderer.xy.XYItemRenderer",
        "java.lang.Cloneable",
        "org.jfree.chart.util.PublicCloneable",
        "java.io.Serializable"
      ],
      "begin_line": 93,
      "end_line": 318,
      "comment": "\r\n * A renderer that draws a line connecting the start and end Y values for an\r\n * {@link XYPlot}.  The example shown here is generated by the\r\n * \u003ccode\u003eYIntervalRendererDemo1.java\u003c/code\u003e program included in the JFreeChart\r\n * demo collection:\r\n * \u003cbr\u003e\u003cbr\u003e\r\n * \u003cimg src\u003d\"../../../../../images/YIntervalRendererSample.png\"\r\n * alt\u003d\"YIntervalRendererSample.png\" /\u003e\r\n "
    },
    {
      "type": "field",
      "varNames": [
        "serialVersionUID"
      ],
      "begin_line": 97,
      "end_line": 97,
      "comment": " For serialization. "
    },
    {
      "type": "field",
      "varNames": [
        "additionalItemLabelGenerator"
      ],
      "begin_line": 106,
      "end_line": 106,
      "comment": "\r\n     * An additional item label generator.  If this is non-null, the item\r\n     * label generated will be displayed near the lower y-value at the\r\n     * position given by getNegativeItemLabelPosition().\r\n     *\r\n     * @since 1.0.10\r\n     "
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.renderer.xy.YIntervalRenderer.YIntervalRenderer()",
      "begin_line": 111,
      "end_line": 114,
      "comment": "\r\n     * The default constructor.\r\n     ",
      "child_ranges": [
        "(line 112,col 9)-(line 112,col 16)",
        "(line 113,col 9)-(line 113,col 49)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.YIntervalRenderer.getAdditionalItemLabelGenerator()",
      "begin_line": 126,
      "end_line": 128,
      "comment": "\r\n     * Returns the generator for the item labels that appear near the lower\r\n     * y-value.\r\n     *\r\n     * @return The generator (possibly \u003ccode\u003enull\u003c/code\u003e).\r\n     *\r\n     * @see #setAdditionalItemLabelGenerator(XYItemLabelGenerator)\r\n     *\r\n     * @since 1.0.10\r\n     ",
      "child_ranges": [
        "(line 127,col 9)-(line 127,col 49)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.YIntervalRenderer.setAdditionalItemLabelGenerator(org.jfree.chart.labels.XYItemLabelGenerator)",
      "begin_line": 142,
      "end_line": 146,
      "comment": "\r\n     * Sets the generator for the item labels that appear near the lower\r\n     * y-value and sends a {@link RendererChangeEvent} to all registered\r\n     * listeners.  If this is set to \u003ccode\u003enull\u003c/code\u003e, no item labels will be\r\n     * drawn.\r\n     *\r\n     * @param generator  the generator (\u003ccode\u003enull\u003c/code\u003e permitted).\r\n     *\r\n     * @see #getAdditionalItemLabelGenerator()\r\n     *\r\n     * @since 1.0.10\r\n     ",
      "child_ranges": [
        "(line 144,col 9)-(line 144,col 54)",
        "(line 145,col 9)-(line 145,col 26)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.YIntervalRenderer.findRangeBounds(org.jfree.data.xy.XYDataset)",
      "begin_line": 157,
      "end_line": 159,
      "comment": "\r\n     * Returns the range of values the renderer requires to display all the\r\n     * items from the specified dataset.\r\n     *\r\n     * @param dataset  the dataset (\u003ccode\u003enull\u003c/code\u003e permitted).\r\n     *\r\n     * @return The range (\u003ccode\u003enull\u003c/code\u003e if the dataset is \u003ccode\u003enull\u003c/code\u003e\r\n     *         or empty).\r\n     ",
      "child_ranges": [
        "(line 158,col 9)-(line 158,col 46)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.YIntervalRenderer.drawItem(java.awt.Graphics2D, org.jfree.chart.renderer.xy.XYItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.XYPlot, org.jfree.chart.axis.ValueAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.xy.XYDataset, int, int, boolean, int)",
      "begin_line": 179,
      "end_line": 245,
      "comment": "\r\n     * Draws the visual representation of a single data item.\r\n     *\r\n     * @param g2  the graphics device.\r\n     * @param state  the renderer state.\r\n     * @param dataArea  the area within which the plot is being drawn.\r\n     * @param plot  the plot (can be used to obtain standard color\r\n     *              information etc).\r\n     * @param domainAxis  the domain axis.\r\n     * @param rangeAxis  the range axis.\r\n     * @param dataset  the dataset.\r\n     * @param series  the series index (zero-based).\r\n     * @param item  the item index (zero-based).\r\n     * @param selected  is the item selected?\r\n     * @param pass  the pass index (ignored here).\r\n     *\r\n     * @since 1.2.0\r\n     ",
      "child_ranges": [
        "(line 185,col 9)-(line 185,col 41)",
        "(line 186,col 9)-(line 188,col 9)",
        "(line 190,col 9)-(line 190,col 72)",
        "(line 192,col 9)-(line 192,col 59)",
        "(line 193,col 9)-(line 193,col 69)",
        "(line 194,col 9)-(line 194,col 67)",
        "(line 196,col 9)-(line 196,col 63)",
        "(line 197,col 9)-(line 197,col 62)",
        "(line 199,col 9)-(line 199,col 73)",
        "(line 200,col 9)-(line 200,col 78)",
        "(line 201,col 9)-(line 201,col 80)",
        "(line 203,col 9)-(line 203,col 55)",
        "(line 204,col 9)-(line 204,col 57)",
        "(line 206,col 9)-(line 206,col 27)",
        "(line 207,col 9)-(line 207,col 59)",
        "(line 208,col 9)-(line 208,col 25)",
        "(line 209,col 9)-(line 209,col 28)",
        "(line 210,col 9)-(line 210,col 60)",
        "(line 211,col 9)-(line 220,col 9)",
        "(line 221,col 9)-(line 221,col 23)",
        "(line 222,col 9)-(line 222,col 24)",
        "(line 223,col 9)-(line 223,col 22)",
        "(line 225,col 9)-(line 225,col 21)",
        "(line 226,col 9)-(line 226,col 24)",
        "(line 232,col 9)-(line 237,col 9)",
        "(line 240,col 9)-(line 243,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.YIntervalRenderer.drawAdditionalItemLabel(java.awt.Graphics2D, org.jfree.chart.plot.PlotOrientation, org.jfree.data.xy.XYDataset, int, int, double, double)",
      "begin_line": 260,
      "end_line": 283,
      "comment": "\r\n     * Draws an item label.\r\n     *\r\n     * @param g2  the graphics device.\r\n     * @param orientation  the orientation.\r\n     * @param dataset  the dataset.\r\n     * @param series  the series index (zero-based).\r\n     * @param item  the item index (zero-based).\r\n     * @param x  the x coordinate (in Java2D space).\r\n     * @param y  the y coordinate (in Java2D space).\r\n     * @param negative  indicates a negative value (which affects the item\r\n     *                  label position).\r\n     ",
      "child_ranges": [
        "(line 264,col 9)-(line 266,col 9)",
        "(line 268,col 9)-(line 268,col 63)",
        "(line 269,col 9)-(line 269,col 61)",
        "(line 270,col 9)-(line 270,col 30)",
        "(line 271,col 9)-(line 271,col 27)",
        "(line 272,col 9)-(line 273,col 30)",
        "(line 275,col 9)-(line 276,col 23)",
        "(line 277,col 9)-(line 278,col 66)",
        "(line 279,col 9)-(line 282,col 46)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.YIntervalRenderer.equals(java.lang.Object)",
      "begin_line": 292,
      "end_line": 305,
      "comment": "\r\n     * Tests this renderer for equality with an arbitrary object.\r\n     *\r\n     * @param obj  the object (\u003ccode\u003enull\u003c/code\u003e permitted).\r\n     *\r\n     * @return A boolean.\r\n     ",
      "child_ranges": [
        "(line 293,col 9)-(line 295,col 9)",
        "(line 296,col 9)-(line 298,col 9)",
        "(line 299,col 9)-(line 299,col 57)",
        "(line 300,col 9)-(line 303,col 9)",
        "(line 304,col 9)-(line 304,col 33)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.YIntervalRenderer.clone()",
      "begin_line": 314,
      "end_line": 316,
      "comment": "\r\n     * Returns a clone of the renderer.\r\n     *\r\n     * @return A clone.\r\n     *\r\n     * @throws CloneNotSupportedException  if the renderer cannot be cloned.\r\n     ",
      "child_ranges": [
        "(line 315,col 9)-(line 315,col 29)"
      ]
    }
  ]
}