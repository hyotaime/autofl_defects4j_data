{
  "filepath": "/tmp/Chart-2b/tests/org/jfree/chart/util/junit/ShapeUtilitiesTests.java",
  "nodes": [
    {
      "type": "class_interface",
      "name": "ShapeUtilitiesTests",
      "is_interface": false,
      "parent_types": [
        "TestCase"
      ],
      "begin_line": 61,
      "end_line": 323,
      "comment": "\r\n * Tests for the {@link ShapeUtilities} class.\r\n "
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.util.junit.ShapeUtilitiesTests.suite()",
      "begin_line": 68,
      "end_line": 70,
      "comment": "\r\n     * Returns the tests as a test suite.\r\n     *\r\n     * @return The test suite.\r\n     ",
      "child_ranges": [
        "(line 69,col 9)-(line 69,col 56)"
      ]
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.util.junit.ShapeUtilitiesTests.ShapeUtilitiesTests(java.lang.String)",
      "begin_line": 77,
      "end_line": 79,
      "comment": "\r\n     * Constructs a new set of tests.\r\n     *\r\n     * @param name  the name of the tests.\r\n     ",
      "child_ranges": [
        "(line 78,col 9)-(line 78,col 20)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.util.junit.ShapeUtilitiesTests.testEqualLine2Ds()",
      "begin_line": 84,
      "end_line": 99,
      "comment": "\r\n     * Tests the equal() method.\r\n     ",
      "child_ranges": [
        "(line 86,col 9)-(line 86,col 71)",
        "(line 87,col 9)-(line 87,col 61)",
        "(line 88,col 9)-(line 88,col 61)",
        "(line 89,col 9)-(line 89,col 49)",
        "(line 91,col 9)-(line 91,col 54)",
        "(line 92,col 9)-(line 92,col 50)",
        "(line 93,col 9)-(line 93,col 54)",
        "(line 94,col 9)-(line 94,col 49)",
        "(line 96,col 9)-(line 96,col 55)",
        "(line 97,col 9)-(line 97,col 49)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.util.junit.ShapeUtilitiesTests.testEqualShapes()",
      "begin_line": 104,
      "end_line": 166,
      "comment": "\r\n     * Some checks for the equal(Shape, Shape) method.\r\n     ",
      "child_ranges": [
        "(line 107,col 9)-(line 107,col 24)",
        "(line 108,col 9)-(line 108,col 24)",
        "(line 109,col 9)-(line 109,col 49)",
        "(line 112,col 9)-(line 112,col 51)",
        "(line 113,col 9)-(line 113,col 50)",
        "(line 114,col 9)-(line 114,col 51)",
        "(line 115,col 9)-(line 115,col 49)",
        "(line 116,col 9)-(line 116,col 35)",
        "(line 119,col 9)-(line 119,col 56)",
        "(line 120,col 9)-(line 120,col 50)",
        "(line 121,col 9)-(line 121,col 56)",
        "(line 122,col 9)-(line 122,col 49)",
        "(line 123,col 9)-(line 123,col 34)",
        "(line 126,col 9)-(line 126,col 54)",
        "(line 127,col 9)-(line 127,col 50)",
        "(line 128,col 9)-(line 128,col 54)",
        "(line 129,col 9)-(line 129,col 49)",
        "(line 132,col 9)-(line 132,col 71)",
        "(line 133,col 9)-(line 133,col 50)",
        "(line 134,col 9)-(line 134,col 71)",
        "(line 135,col 9)-(line 135,col 49)",
        "(line 138,col 9)-(line 138,col 78)",
        "(line 139,col 9)-(line 139,col 78)",
        "(line 140,col 9)-(line 140,col 16)",
        "(line 141,col 9)-(line 141,col 16)",
        "(line 142,col 9)-(line 142,col 50)",
        "(line 143,col 9)-(line 143,col 70)",
        "(line 144,col 9)-(line 144,col 16)",
        "(line 145,col 9)-(line 145,col 49)",
        "(line 148,col 9)-(line 148,col 43)",
        "(line 149,col 9)-(line 149,col 30)",
        "(line 150,col 9)-(line 150,col 30)",
        "(line 151,col 9)-(line 151,col 56)",
        "(line 152,col 9)-(line 152,col 42)",
        "(line 153,col 9)-(line 153,col 23)",
        "(line 154,col 9)-(line 154,col 16)",
        "(line 155,col 9)-(line 155,col 50)",
        "(line 156,col 9)-(line 156,col 43)",
        "(line 157,col 9)-(line 157,col 30)",
        "(line 158,col 9)-(line 158,col 30)",
        "(line 159,col 9)-(line 159,col 56)",
        "(line 160,col 9)-(line 160,col 42)",
        "(line 161,col 9)-(line 161,col 23)",
        "(line 162,col 9)-(line 162,col 16)",
        "(line 163,col 9)-(line 163,col 49)",
        "(line 164,col 9)-(line 164,col 35)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.util.junit.ShapeUtilitiesTests.testIntersects()",
      "begin_line": 171,
      "end_line": 187,
      "comment": "\r\n     * Some checks for the intersects() method,\r\n     ",
      "child_ranges": [
        "(line 172,col 9)-(line 172,col 69)",
        "(line 173,col 9)-(line 173,col 69)",
        "(line 174,col 9)-(line 174,col 54)",
        "(line 176,col 9)-(line 176,col 35)",
        "(line 177,col 9)-(line 177,col 54)",
        "(line 178,col 9)-(line 178,col 54)",
        "(line 180,col 9)-(line 180,col 31)",
        "(line 181,col 9)-(line 181,col 54)",
        "(line 182,col 9)-(line 182,col 54)",
        "(line 184,col 9)-(line 184,col 34)",
        "(line 185,col 9)-(line 185,col 54)",
        "(line 186,col 9)-(line 186,col 54)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.util.junit.ShapeUtilitiesTests.testEqualGeneralPaths()",
      "begin_line": 192,
      "end_line": 247,
      "comment": "\r\n     * Some checks for the equal(GeneralPath, GeneralPath) method.\r\n     ",
      "child_ranges": [
        "(line 193,col 9)-(line 193,col 43)",
        "(line 194,col 9)-(line 194,col 30)",
        "(line 195,col 9)-(line 195,col 30)",
        "(line 196,col 9)-(line 196,col 56)",
        "(line 197,col 9)-(line 197,col 42)",
        "(line 198,col 9)-(line 198,col 23)",
        "(line 199,col 9)-(line 199,col 43)",
        "(line 200,col 9)-(line 200,col 30)",
        "(line 201,col 9)-(line 201,col 30)",
        "(line 202,col 9)-(line 202,col 56)",
        "(line 203,col 9)-(line 203,col 42)",
        "(line 204,col 9)-(line 204,col 23)",
        "(line 205,col 9)-(line 205,col 49)",
        "(line 207,col 9)-(line 207,col 31)",
        "(line 208,col 9)-(line 208,col 32)",
        "(line 209,col 9)-(line 209,col 30)",
        "(line 210,col 9)-(line 210,col 56)",
        "(line 211,col 9)-(line 211,col 42)",
        "(line 212,col 9)-(line 212,col 23)",
        "(line 213,col 9)-(line 213,col 50)",
        "(line 215,col 9)-(line 215,col 31)",
        "(line 216,col 9)-(line 216,col 30)",
        "(line 217,col 9)-(line 217,col 32)",
        "(line 218,col 9)-(line 218,col 56)",
        "(line 219,col 9)-(line 219,col 42)",
        "(line 220,col 9)-(line 220,col 23)",
        "(line 221,col 9)-(line 221,col 50)",
        "(line 223,col 9)-(line 223,col 31)",
        "(line 224,col 9)-(line 224,col 30)",
        "(line 225,col 9)-(line 225,col 30)",
        "(line 226,col 9)-(line 226,col 62)",
        "(line 227,col 9)-(line 227,col 42)",
        "(line 228,col 9)-(line 228,col 23)",
        "(line 229,col 9)-(line 229,col 50)",
        "(line 231,col 9)-(line 231,col 31)",
        "(line 232,col 9)-(line 232,col 30)",
        "(line 233,col 9)-(line 233,col 30)",
        "(line 234,col 9)-(line 234,col 56)",
        "(line 235,col 9)-(line 235,col 46)",
        "(line 236,col 9)-(line 236,col 23)",
        "(line 237,col 9)-(line 237,col 50)",
        "(line 239,col 9)-(line 239,col 31)",
        "(line 240,col 9)-(line 240,col 30)",
        "(line 241,col 9)-(line 241,col 30)",
        "(line 242,col 9)-(line 242,col 56)",
        "(line 243,col 9)-(line 243,col 42)",
        "(line 244,col 9)-(line 244,col 30)",
        "(line 245,col 9)-(line 245,col 23)",
        "(line 246,col 9)-(line 246,col 50)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.util.junit.ShapeUtilitiesTests.lineEquals(java.awt.geom.Line2D, double, double, double, double)",
      "begin_line": 248,
      "end_line": 261,
      "comment": "",
      "child_ranges": [
        "(line 250,col 9)-(line 250,col 30)",
        "(line 251,col 9)-(line 251,col 38)",
        "(line 252,col 9)-(line 252,col 66)",
        "(line 253,col 9)-(line 253,col 66)",
        "(line 254,col 9)-(line 254,col 66)",
        "(line 255,col 9)-(line 255,col 66)",
        "(line 256,col 9)-(line 259,col 9)",
        "(line 260,col 9)-(line 260,col 22)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.util.junit.ShapeUtilitiesTests.testClipLine()",
      "begin_line": 266,
      "end_line": 321,
      "comment": "\r\n     * Some tests for the clipLine() method.\r\n     ",
      "child_ranges": [
        "(line 267,col 9)-(line 267,col 70)",
        "(line 268,col 9)-(line 268,col 42)",
        "(line 270,col 9)-(line 270,col 57)",
        "(line 271,col 9)-(line 271,col 57)",
        "(line 273,col 9)-(line 273,col 41)",
        "(line 274,col 9)-(line 274,col 57)",
        "(line 275,col 9)-(line 275,col 57)",
        "(line 277,col 9)-(line 277,col 41)",
        "(line 278,col 9)-(line 278,col 57)",
        "(line 279,col 9)-(line 279,col 57)",
        "(line 281,col 9)-(line 281,col 41)",
        "(line 282,col 9)-(line 282,col 57)",
        "(line 283,col 9)-(line 283,col 57)",
        "(line 285,col 9)-(line 285,col 41)",
        "(line 286,col 9)-(line 286,col 57)",
        "(line 287,col 9)-(line 287,col 57)",
        "(line 289,col 9)-(line 289,col 41)",
        "(line 290,col 9)-(line 290,col 56)",
        "(line 291,col 9)-(line 291,col 57)",
        "(line 293,col 9)-(line 293,col 41)",
        "(line 294,col 9)-(line 294,col 56)",
        "(line 295,col 9)-(line 296,col 37)",
        "(line 298,col 9)-(line 298,col 41)",
        "(line 299,col 9)-(line 299,col 57)",
        "(line 300,col 9)-(line 300,col 57)",
        "(line 302,col 9)-(line 302,col 41)",
        "(line 303,col 9)-(line 303,col 56)",
        "(line 304,col 9)-(line 304,col 73)",
        "(line 306,col 9)-(line 306,col 41)",
        "(line 307,col 9)-(line 307,col 56)",
        "(line 308,col 9)-(line 308,col 74)",
        "(line 310,col 9)-(line 310,col 41)",
        "(line 311,col 9)-(line 311,col 56)",
        "(line 312,col 9)-(line 312,col 57)",
        "(line 314,col 9)-(line 314,col 41)",
        "(line 315,col 9)-(line 315,col 56)",
        "(line 316,col 9)-(line 316,col 58)",
        "(line 318,col 9)-(line 318,col 41)",
        "(line 319,col 9)-(line 319,col 56)",
        "(line 320,col 9)-(line 320,col 58)"
      ]
    }
  ]
}