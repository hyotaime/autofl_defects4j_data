{
  "filepath": "/tmp/Chart-2b/source/org/jfree/chart/PolarChartPanel.java",
  "nodes": [
    {
      "type": "class_interface",
      "name": "PolarChartPanel",
      "is_interface": false,
      "parent_types": [
        "org.jfree.chart.ChartPanel"
      ],
      "begin_line": 69,
      "end_line": 254,
      "comment": "\r\n * \u003ccode\u003ePolarChartPanel\u003c/code\u003e is the top level object for using the\r\n * {@link PolarPlot}. Since this class has a \u003ccode\u003eJPanel\u003c/code\u003e in the\r\n * inheritance hierarchy, one uses this class to integrate the Polar plot into\r\n * their application.\r\n * \u003cp\u003e\r\n * The main modification to \u003ccode\u003eChartPanel\u003c/code\u003e is the popup menu.  It\r\n * removes \u003ccode\u003eChartPanel\u003c/code\u003e\u0027s versions of:\r\n * \u003cul\u003e\r\n *    \u003cli\u003e\u003ccode\u003eZoom In\u003c/code\u003e\u003c/li\u003e\r\n *    \u003cli\u003e\u003ccode\u003eZoom Out\u003c/code\u003e\u003c/li\u003e\r\n *    \u003cli\u003e\u003ccode\u003eAuto Range\u003c/code\u003e\u003c/li\u003e\r\n * \u003c/ul\u003e\r\n * and replaces them with versions more appropriate for {@link PolarPlot}.\r\n "
    },
    {
      "type": "field",
      "varNames": [
        "POLAR_ZOOM_IN_ACTION_COMMAND"
      ],
      "begin_line": 76,
      "end_line": 76,
      "comment": " Zoom in command string. "
    },
    {
      "type": "field",
      "varNames": [
        "POLAR_ZOOM_OUT_ACTION_COMMAND"
      ],
      "begin_line": 79,
      "end_line": 80,
      "comment": " Zoom out command string. "
    },
    {
      "type": "field",
      "varNames": [
        "POLAR_AUTO_RANGE_ACTION_COMMAND"
      ],
      "begin_line": 83,
      "end_line": 84,
      "comment": " Auto range command string. "
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.PolarChartPanel.PolarChartPanel(org.jfree.chart.JFreeChart)",
      "begin_line": 98,
      "end_line": 100,
      "comment": "\r\n     * Constructs a JFreeChart panel.\r\n     *\r\n     * @param chart  the chart.\r\n     ",
      "child_ranges": [
        "(line 99,col 9)-(line 99,col 26)"
      ]
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.PolarChartPanel.PolarChartPanel(org.jfree.chart.JFreeChart, boolean)",
      "begin_line": 108,
      "end_line": 115,
      "comment": "\r\n     * Creates a new panel.\r\n     *\r\n     * @param chart  the chart.\r\n     * @param useBuffer  buffered?\r\n     ",
      "child_ranges": [
        "(line 109,col 9)-(line 109,col 32)",
        "(line 110,col 9)-(line 110,col 26)",
        "(line 111,col 9)-(line 111,col 33)",
        "(line 112,col 9)-(line 112,col 34)",
        "(line 113,col 9)-(line 113,col 34)",
        "(line 114,col 9)-(line 114,col 35)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.PolarChartPanel.setChart(org.jfree.chart.JFreeChart)",
      "begin_line": 125,
      "end_line": 128,
      "comment": "\r\n     * Sets the chart that is displayed in the panel.\r\n     *\r\n     * @param chart  The chart.\r\n     ",
      "child_ranges": [
        "(line 126,col 9)-(line 126,col 26)",
        "(line 127,col 9)-(line 127,col 30)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.PolarChartPanel.createPopupMenu(boolean, boolean, boolean, boolean)",
      "begin_line": 140,
      "end_line": 185,
      "comment": "\r\n     * Creates a popup menu for the panel.\r\n     *\r\n     * @param properties  include a menu item for the chart property editor.\r\n     * @param save  include a menu item for saving the chart.\r\n     * @param print  include a menu item for printing the chart.\r\n     * @param zoom  include menu items for zooming.\r\n     *\r\n     * @return The popup menu.\r\n     ",
      "child_ranges": [
        "(line 145,col 8)-(line 145,col 80)",
        "(line 146,col 8)-(line 146,col 62)",
        "(line 147,col 8)-(line 147,col 63)",
        "(line 148,col 8)-(line 148,col 66)",
        "(line 149,col 8)-(line 183,col 8)",
        "(line 184,col 8)-(line 184,col 21)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.PolarChartPanel.actionPerformed(java.awt.event.ActionEvent)",
      "begin_line": 192,
      "end_line": 210,
      "comment": "\r\n     * Handles action events generated by the popup menu.\r\n     *\r\n     * @param event  the event.\r\n     ",
      "child_ranges": [
        "(line 193,col 8)-(line 193,col 49)",
        "(line 195,col 8)-(line 209,col 8)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.PolarChartPanel.checkChart(org.jfree.chart.JFreeChart)",
      "begin_line": 225,
      "end_line": 230,
      "comment": "\r\n     * Test that the chart is using an xy plot with time as the domain axis.\r\n     *\r\n     * @param chart  the chart.\r\n     ",
      "child_ranges": [
        "(line 226,col 9)-(line 226,col 36)",
        "(line 227,col 9)-(line 229,col 8)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.PolarChartPanel.getPopupMenuItem(javax.swing.JPopupMenu, java.lang.String)",
      "begin_line": 240,
      "end_line": 252,
      "comment": "\r\n     * Returns the index of an item in a popup menu.\r\n     *\r\n     * @param menu  the menu.\r\n     * @param text  the label.\r\n     *\r\n     * @return The item index.\r\n     ",
      "child_ranges": [
        "(line 241,col 9)-(line 241,col 23)",
        "(line 242,col 9)-(line 250,col 8)",
        "(line 251,col 8)-(line 251,col 20)"
      ]
    }
  ]
}