{
  "filepath": "/tmp/Chart-2b/tests/org/jfree/chart/axis/junit/SegmentedTimelineTests2.java",
  "nodes": [
    {
      "type": "class_interface",
      "name": "SegmentedTimelineTests2",
      "is_interface": false,
      "parent_types": [
        "TestCase"
      ],
      "begin_line": 56,
      "end_line": 452,
      "comment": "\n * Some tests for the {@link SegmentedTimeline} class.\n "
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.axis.junit.SegmentedTimelineTests2.SegmentedTimelineTests2()",
      "begin_line": 61,
      "end_line": 63,
      "comment": "\n     * Constructor\n     ",
      "child_ranges": [
        "(line 62,col 9)-(line 62,col 16)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.axis.junit.SegmentedTimelineTests2.test1()",
      "begin_line": 69,
      "end_line": 94,
      "comment": "\n     * Test 1 checks 9am Friday 26 March 2004 converts to a timeline value and\n     * back again correctly.  This is prior to Daylight Saving.\n     ",
      "child_ranges": [
        "(line 70,col 9)-(line 70,col 51)",
        "(line 71,col 9)-(line 71,col 67)",
        "(line 72,col 9)-(line 72,col 49)",
        "(line 73,col 9)-(line 73,col 37)",
        "(line 74,col 9)-(line 74,col 55)",
        "(line 75,col 9)-(line 75,col 37)",
        "(line 76,col 9)-(line 76,col 48)",
        "(line 77,col 9)-(line 77,col 43)",
        "(line 78,col 9)-(line 78,col 41)",
        "(line 79,col 9)-(line 79,col 36)",
        "(line 80,col 9)-(line 80,col 36)",
        "(line 81,col 9)-(line 81,col 41)",
        "(line 82,col 9)-(line 82,col 34)",
        "(line 84,col 9)-(line 84,col 51)",
        "(line 85,col 9)-(line 85,col 52)",
        "(line 86,col 9)-(line 86,col 48)",
        "(line 87,col 9)-(line 87,col 56)",
        "(line 88,col 9)-(line 88,col 35)",
        "(line 89,col 9)-(line 89,col 39)",
        "(line 90,col 9)-(line 91,col 57)",
        "(line 92,col 9)-(line 92,col 39)",
        "(line 93,col 9)-(line 93,col 39)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.axis.junit.SegmentedTimelineTests2.test2()",
      "begin_line": 100,
      "end_line": 125,
      "comment": "\n     * Test 2 checks 9.15am Friday 26 March 2004 converts to a timeline value\n     * and back again correctly.  This is prior to Daylight Saving.\n     ",
      "child_ranges": [
        "(line 101,col 9)-(line 101,col 51)",
        "(line 102,col 9)-(line 102,col 67)",
        "(line 103,col 9)-(line 103,col 55)",
        "(line 104,col 9)-(line 104,col 37)",
        "(line 105,col 9)-(line 105,col 48)",
        "(line 106,col 9)-(line 106,col 43)",
        "(line 107,col 9)-(line 107,col 41)",
        "(line 108,col 9)-(line 108,col 37)",
        "(line 109,col 9)-(line 109,col 36)",
        "(line 110,col 9)-(line 110,col 41)",
        "(line 111,col 9)-(line 111,col 34)",
        "(line 113,col 9)-(line 113,col 51)",
        "(line 115,col 9)-(line 115,col 52)",
        "(line 116,col 9)-(line 116,col 48)",
        "(line 117,col 9)-(line 117,col 56)",
        "(line 118,col 9)-(line 118,col 35)",
        "(line 119,col 9)-(line 119,col 39)",
        "(line 120,col 9)-(line 123,col 10)",
        "(line 124,col 9)-(line 124,col 39)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.axis.junit.SegmentedTimelineTests2.test3()",
      "begin_line": 131,
      "end_line": 156,
      "comment": "\n     * Test 3 checks 9.30am Friday 26 March 2004 converts to a timeline value\n     * and back again correctly.  This is prior to Daylight Saving.\n     ",
      "child_ranges": [
        "(line 132,col 9)-(line 132,col 51)",
        "(line 133,col 9)-(line 133,col 67)",
        "(line 134,col 9)-(line 134,col 55)",
        "(line 135,col 9)-(line 135,col 37)",
        "(line 136,col 9)-(line 136,col 48)",
        "(line 137,col 9)-(line 137,col 43)",
        "(line 138,col 9)-(line 138,col 41)",
        "(line 139,col 9)-(line 139,col 37)",
        "(line 140,col 9)-(line 140,col 36)",
        "(line 141,col 9)-(line 141,col 41)",
        "(line 142,col 9)-(line 142,col 34)",
        "(line 143,col 9)-(line 143,col 51)",
        "(line 145,col 9)-(line 145,col 52)",
        "(line 146,col 9)-(line 146,col 48)",
        "(line 148,col 9)-(line 148,col 56)",
        "(line 149,col 9)-(line 149,col 35)",
        "(line 150,col 9)-(line 150,col 39)",
        "(line 151,col 9)-(line 154,col 10)",
        "(line 155,col 9)-(line 155,col 39)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.axis.junit.SegmentedTimelineTests2.test4()",
      "begin_line": 163,
      "end_line": 187,
      "comment": "\n     * Test 4 checks 9.30am Friday 26 March 2004 (+ 1 millisecond) converts to\n     * a timeline value and back again correctly.  This is prior to Daylight\n     * Saving.\n     ",
      "child_ranges": [
        "(line 164,col 9)-(line 164,col 51)",
        "(line 165,col 9)-(line 165,col 67)",
        "(line 166,col 9)-(line 166,col 55)",
        "(line 167,col 9)-(line 167,col 37)",
        "(line 168,col 9)-(line 168,col 48)",
        "(line 169,col 9)-(line 169,col 43)",
        "(line 170,col 9)-(line 170,col 41)",
        "(line 171,col 9)-(line 171,col 37)",
        "(line 172,col 9)-(line 172,col 36)",
        "(line 173,col 9)-(line 173,col 41)",
        "(line 174,col 9)-(line 174,col 34)",
        "(line 175,col 9)-(line 175,col 51)",
        "(line 177,col 9)-(line 177,col 52)",
        "(line 178,col 9)-(line 178,col 48)",
        "(line 179,col 9)-(line 179,col 56)",
        "(line 180,col 9)-(line 180,col 35)",
        "(line 181,col 9)-(line 181,col 39)",
        "(line 182,col 9)-(line 185,col 10)",
        "(line 186,col 9)-(line 186,col 39)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.axis.junit.SegmentedTimelineTests2.test5()",
      "begin_line": 195,
      "end_line": 228,
      "comment": "\n     * Test 5 checks 5.30pm Thursday 25 March 2004 converts to a timeline\n     * value and back again correctly.  As it is in the excluded segment, we\n     * expect it to map to 9am, Friday 26 March 2004.  This is prior to\n     * Daylight Saving.\n     ",
      "child_ranges": [
        "(line 196,col 9)-(line 196,col 51)",
        "(line 197,col 9)-(line 197,col 67)",
        "(line 198,col 9)-(line 198,col 55)",
        "(line 199,col 9)-(line 199,col 37)",
        "(line 200,col 9)-(line 200,col 48)",
        "(line 201,col 9)-(line 201,col 43)",
        "(line 202,col 9)-(line 202,col 42)",
        "(line 203,col 9)-(line 203,col 37)",
        "(line 204,col 9)-(line 204,col 36)",
        "(line 205,col 9)-(line 205,col 41)",
        "(line 206,col 9)-(line 206,col 34)",
        "(line 207,col 9)-(line 207,col 51)",
        "(line 209,col 9)-(line 209,col 52)",
        "(line 210,col 9)-(line 210,col 48)",
        "(line 211,col 9)-(line 211,col 56)",
        "(line 212,col 9)-(line 212,col 35)",
        "(line 213,col 9)-(line 213,col 39)",
        "(line 214,col 9)-(line 214,col 68)",
        "(line 215,col 9)-(line 215,col 50)",
        "(line 216,col 9)-(line 216,col 61)",
        "(line 217,col 9)-(line 217,col 56)",
        "(line 218,col 9)-(line 218,col 54)",
        "(line 219,col 9)-(line 219,col 49)",
        "(line 220,col 9)-(line 220,col 49)",
        "(line 221,col 9)-(line 221,col 54)",
        "(line 223,col 9)-(line 226,col 10)",
        "(line 227,col 9)-(line 227,col 39)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.axis.junit.SegmentedTimelineTests2.test6()",
      "begin_line": 236,
      "end_line": 270,
      "comment": "\n     * Test 6 checks that 9am on Sunday 28 March 2004 converts to the timeline\n     * value and back again correctly.  Note that Saturday and Sunday are\n     * excluded from the timeline, so we expect the value to map to 9am on\n     * Monday 29 March 2004. This is during daylight saving.\n     ",
      "child_ranges": [
        "(line 237,col 9)-(line 237,col 51)",
        "(line 238,col 9)-(line 238,col 67)",
        "(line 239,col 9)-(line 239,col 55)",
        "(line 240,col 9)-(line 240,col 37)",
        "(line 241,col 9)-(line 241,col 48)",
        "(line 242,col 9)-(line 242,col 43)",
        "(line 243,col 9)-(line 243,col 41)",
        "(line 244,col 9)-(line 244,col 36)",
        "(line 245,col 9)-(line 245,col 36)",
        "(line 246,col 9)-(line 246,col 41)",
        "(line 247,col 9)-(line 247,col 34)",
        "(line 248,col 9)-(line 248,col 51)",
        "(line 250,col 9)-(line 250,col 52)",
        "(line 251,col 9)-(line 251,col 48)",
        "(line 252,col 9)-(line 252,col 56)",
        "(line 253,col 9)-(line 253,col 35)",
        "(line 254,col 9)-(line 254,col 39)",
        "(line 256,col 9)-(line 256,col 68)",
        "(line 257,col 9)-(line 257,col 50)",
        "(line 258,col 9)-(line 258,col 61)",
        "(line 259,col 9)-(line 259,col 56)",
        "(line 260,col 9)-(line 260,col 54)",
        "(line 261,col 9)-(line 261,col 49)",
        "(line 262,col 9)-(line 262,col 49)",
        "(line 263,col 9)-(line 263,col 54)",
        "(line 265,col 9)-(line 268,col 10)",
        "(line 269,col 9)-(line 269,col 39)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.axis.junit.SegmentedTimelineTests2.test7()",
      "begin_line": 276,
      "end_line": 311,
      "comment": "\n     * Test 7 checks 9am Monday 29 March 2004 converts to a timeline value and\n     * back again correctly.  This is during Daylight Saving.\n     ",
      "child_ranges": [
        "(line 277,col 9)-(line 277,col 51)",
        "(line 278,col 9)-(line 278,col 67)",
        "(line 279,col 9)-(line 279,col 55)",
        "(line 280,col 9)-(line 280,col 37)",
        "(line 281,col 9)-(line 281,col 48)",
        "(line 282,col 9)-(line 282,col 43)",
        "(line 283,col 9)-(line 283,col 41)",
        "(line 284,col 9)-(line 284,col 36)",
        "(line 285,col 9)-(line 285,col 36)",
        "(line 286,col 9)-(line 286,col 41)",
        "(line 287,col 9)-(line 287,col 34)",
        "(line 289,col 9)-(line 289,col 51)",
        "(line 290,col 9)-(line 290,col 52)",
        "(line 291,col 9)-(line 291,col 48)",
        "(line 293,col 9)-(line 293,col 56)",
        "(line 294,col 9)-(line 294,col 35)",
        "(line 295,col 9)-(line 295,col 39)",
        "(line 297,col 9)-(line 297,col 59)",
        "(line 298,col 9)-(line 298,col 50)",
        "(line 299,col 9)-(line 299,col 61)",
        "(line 300,col 9)-(line 300,col 56)",
        "(line 301,col 9)-(line 301,col 54)",
        "(line 302,col 9)-(line 302,col 49)",
        "(line 303,col 9)-(line 303,col 49)",
        "(line 304,col 9)-(line 304,col 54)",
        "(line 306,col 9)-(line 309,col 10)",
        "(line 310,col 9)-(line 310,col 39)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.axis.junit.SegmentedTimelineTests2.test8()",
      "begin_line": 316,
      "end_line": 362,
      "comment": "\n     * Test 8.\n     ",
      "child_ranges": [
        "(line 317,col 9)-(line 317,col 51)",
        "(line 318,col 9)-(line 318,col 67)",
        "(line 319,col 9)-(line 319,col 55)",
        "(line 320,col 9)-(line 320,col 37)",
        "(line 321,col 9)-(line 321,col 48)",
        "(line 322,col 9)-(line 322,col 43)",
        "(line 323,col 9)-(line 323,col 42)",
        "(line 324,col 9)-(line 324,col 36)",
        "(line 325,col 9)-(line 325,col 36)",
        "(line 326,col 9)-(line 326,col 41)",
        "(line 327,col 9)-(line 327,col 34)",
        "(line 329,col 9)-(line 329,col 51)",
        "(line 332,col 9)-(line 332,col 37)",
        "(line 333,col 9)-(line 333,col 48)",
        "(line 334,col 9)-(line 334,col 43)",
        "(line 335,col 9)-(line 335,col 41)",
        "(line 336,col 9)-(line 336,col 37)",
        "(line 337,col 9)-(line 337,col 36)",
        "(line 338,col 9)-(line 338,col 41)",
        "(line 339,col 9)-(line 339,col 45)",
        "(line 341,col 9)-(line 341,col 52)",
        "(line 342,col 9)-(line 342,col 48)",
        "(line 344,col 9)-(line 344,col 56)",
        "(line 345,col 9)-(line 345,col 35)",
        "(line 346,col 9)-(line 346,col 39)",
        "(line 348,col 9)-(line 348,col 59)",
        "(line 349,col 9)-(line 349,col 50)",
        "(line 350,col 9)-(line 350,col 61)",
        "(line 351,col 9)-(line 351,col 56)",
        "(line 352,col 9)-(line 352,col 55)",
        "(line 353,col 9)-(line 353,col 49)",
        "(line 354,col 9)-(line 354,col 49)",
        "(line 355,col 9)-(line 355,col 54)",
        "(line 357,col 9)-(line 360,col 10)",
        "(line 361,col 9)-(line 361,col 39)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.axis.junit.SegmentedTimelineTests2.getTimeline()",
      "begin_line": 370,
      "end_line": 392,
      "comment": "\n     * Creates a timeline from 9am on Thursday 25 March 2004 to 5pm on\n     * Tuesday 30 March 2004, for the UK locale.\n     *\n     * @return A timeline.\n     ",
      "child_ranges": [
        "(line 371,col 9)-(line 371,col 55)",
        "(line 372,col 9)-(line 372,col 37)",
        "(line 373,col 9)-(line 373,col 48)",
        "(line 374,col 9)-(line 374,col 43)",
        "(line 375,col 9)-(line 375,col 41)",
        "(line 376,col 9)-(line 376,col 36)",
        "(line 377,col 9)-(line 377,col 36)",
        "(line 378,col 9)-(line 378,col 41)",
        "(line 379,col 9)-(line 379,col 34)",
        "(line 381,col 9)-(line 381,col 46)",
        "(line 382,col 9)-(line 382,col 37)",
        "(line 383,col 9)-(line 383,col 48)",
        "(line 384,col 9)-(line 384,col 43)",
        "(line 385,col 9)-(line 385,col 42)",
        "(line 386,col 9)-(line 386,col 37)",
        "(line 387,col 9)-(line 387,col 36)",
        "(line 388,col 9)-(line 388,col 41)",
        "(line 389,col 9)-(line 389,col 32)",
        "(line 391,col 9)-(line 391,col 37)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.axis.junit.SegmentedTimelineTests2.getTimeline(java.util.Date, java.util.Date)",
      "begin_line": 403,
      "end_line": 449,
      "comment": "\n     * Returns a segmented timeline for 15 minute segments, Monday to Friday\n     * only, between 9am and 5pm.  The UK locale is used.\n     *\n     * @param start  the start date.\n     * @param end  the end date.\n     *\n     * @return The timeline.\n     ",
      "child_ranges": [
        "(line 405,col 9)-(line 405,col 55)",
        "(line 406,col 9)-(line 406,col 37)",
        "(line 407,col 9)-(line 407,col 50)",
        "(line 408,col 9)-(line 408,col 42)",
        "(line 409,col 9)-(line 409,col 41)",
        "(line 410,col 9)-(line 410,col 36)",
        "(line 411,col 9)-(line 411,col 36)",
        "(line 412,col 9)-(line 412,col 41)",
        "(line 413,col 9)-(line 413,col 34)",
        "(line 415,col 9)-(line 415,col 46)",
        "(line 416,col 9)-(line 416,col 37)",
        "(line 417,col 9)-(line 417,col 50)",
        "(line 418,col 9)-(line 418,col 42)",
        "(line 419,col 9)-(line 419,col 42)",
        "(line 420,col 9)-(line 420,col 37)",
        "(line 421,col 9)-(line 421,col 36)",
        "(line 422,col 9)-(line 422,col 41)",
        "(line 423,col 9)-(line 423,col 35)",
        "(line 425,col 9)-(line 425,col 40)",
        "(line 427,col 9)-(line 428,col 60)",
        "(line 429,col 9)-(line 430,col 60)",
        "(line 431,col 9)-(line 435,col 10)",
        "(line 436,col 9)-(line 436,col 48)",
        "(line 438,col 9)-(line 438,col 45)",
        "(line 440,col 9)-(line 442,col 10)",
        "(line 444,col 9)-(line 446,col 9)",
        "(line 448,col 9)-(line 448,col 22)"
      ]
    }
  ]
}