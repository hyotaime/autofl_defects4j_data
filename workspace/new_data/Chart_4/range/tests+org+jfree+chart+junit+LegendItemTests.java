{
  "filepath": "/tmp/Chart-4b/tests/org/jfree/chart/junit/LegendItemTests.java",
  "nodes": [
    {
      "type": "class_interface",
      "name": "LegendItemTests",
      "is_interface": false,
      "parent_types": [
        "TestCase"
      ],
      "begin_line": 75,
      "end_line": 410,
      "comment": "\n * Tests for the {@link LegendItem} class.\n "
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.junit.LegendItemTests.suite()",
      "begin_line": 82,
      "end_line": 84,
      "comment": "\n     * Returns the tests as a test suite.\n     *\n     * @return The test suite.\n     ",
      "child_ranges": [
        "(line 83,col 9)-(line 83,col 52)"
      ]
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.junit.LegendItemTests.LegendItemTests(java.lang.String)",
      "begin_line": 91,
      "end_line": 93,
      "comment": "\n     * Constructs a new set of tests.\n     *\n     * @param name  the name of the tests.\n     ",
      "child_ranges": [
        "(line 92,col 9)-(line 92,col 20)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.junit.LegendItemTests.testEquals()",
      "begin_line": 98,
      "end_line": 330,
      "comment": "\n     * Confirm that the equals method can distinguish all the required fields.\n     ",
      "child_ranges": [
        "(line 100,col 9)-(line 105,col 52)",
        "(line 106,col 9)-(line 111,col 29)",
        "(line 112,col 9)-(line 112,col 40)",
        "(line 113,col 9)-(line 113,col 40)",
        "(line 115,col 9)-(line 119,col 29)",
        "(line 120,col 9)-(line 120,col 41)",
        "(line 121,col 9)-(line 125,col 29)",
        "(line 126,col 9)-(line 126,col 40)",
        "(line 128,col 9)-(line 132,col 29)",
        "(line 133,col 9)-(line 133,col 41)",
        "(line 134,col 9)-(line 138,col 29)",
        "(line 139,col 9)-(line 139,col 40)",
        "(line 141,col 9)-(line 145,col 29)",
        "(line 146,col 9)-(line 146,col 41)",
        "(line 147,col 9)-(line 151,col 29)",
        "(line 152,col 9)-(line 152,col 40)",
        "(line 154,col 9)-(line 158,col 29)",
        "(line 159,col 9)-(line 159,col 41)",
        "(line 160,col 9)-(line 164,col 29)",
        "(line 165,col 9)-(line 165,col 40)",
        "(line 167,col 9)-(line 171,col 29)",
        "(line 172,col 9)-(line 172,col 41)",
        "(line 173,col 9)-(line 177,col 29)",
        "(line 178,col 9)-(line 178,col 40)",
        "(line 180,col 9)-(line 184,col 29)",
        "(line 185,col 9)-(line 185,col 41)",
        "(line 186,col 9)-(line 190,col 29)",
        "(line 191,col 9)-(line 191,col 40)",
        "(line 193,col 9)-(line 197,col 52)",
        "(line 198,col 9)-(line 198,col 41)",
        "(line 199,col 9)-(line 203,col 29)",
        "(line 204,col 9)-(line 204,col 40)",
        "(line 206,col 9)-(line 210,col 29)",
        "(line 211,col 9)-(line 211,col 41)",
        "(line 212,col 9)-(line 216,col 29)",
        "(line 217,col 9)-(line 217,col 40)",
        "(line 219,col 9)-(line 223,col 29)",
        "(line 224,col 9)-(line 224,col 41)",
        "(line 225,col 9)-(line 229,col 29)",
        "(line 230,col 9)-(line 230,col 40)",
        "(line 232,col 9)-(line 236,col 52)",
        "(line 237,col 9)-(line 237,col 41)",
        "(line 238,col 9)-(line 242,col 53)",
        "(line 243,col 9)-(line 243,col 40)",
        "(line 245,col 9)-(line 249,col 52)",
        "(line 250,col 9)-(line 250,col 41)",
        "(line 251,col 9)-(line 255,col 52)",
        "(line 256,col 9)-(line 256,col 40)",
        "(line 258,col 9)-(line 262,col 52)",
        "(line 263,col 9)-(line 263,col 41)",
        "(line 264,col 9)-(line 268,col 52)",
        "(line 269,col 9)-(line 269,col 40)",
        "(line 271,col 9)-(line 276,col 10)",
        "(line 277,col 9)-(line 277,col 41)",
        "(line 278,col 9)-(line 283,col 29)",
        "(line 284,col 9)-(line 284,col 40)",
        "(line 287,col 9)-(line 288,col 61)",
        "(line 289,col 9)-(line 289,col 41)",
        "(line 290,col 9)-(line 291,col 61)",
        "(line 292,col 9)-(line 292,col 40)",
        "(line 295,col 9)-(line 295,col 63)",
        "(line 296,col 9)-(line 296,col 41)",
        "(line 297,col 9)-(line 297,col 63)",
        "(line 298,col 9)-(line 298,col 40)",
        "(line 301,col 9)-(line 301,col 39)",
        "(line 302,col 9)-(line 302,col 41)",
        "(line 303,col 9)-(line 303,col 39)",
        "(line 304,col 9)-(line 304,col 40)",
        "(line 307,col 9)-(line 308,col 35)",
        "(line 309,col 9)-(line 309,col 41)",
        "(line 310,col 9)-(line 311,col 35)",
        "(line 312,col 9)-(line 312,col 40)",
        "(line 315,col 9)-(line 316,col 35)",
        "(line 317,col 9)-(line 317,col 41)",
        "(line 318,col 9)-(line 319,col 35)",
        "(line 320,col 9)-(line 320,col 40)",
        "(line 323,col 9)-(line 324,col 35)",
        "(line 325,col 9)-(line 325,col 41)",
        "(line 326,col 9)-(line 327,col 35)",
        "(line 328,col 9)-(line 328,col 40)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.junit.LegendItemTests.testSerialization()",
      "begin_line": 335,
      "end_line": 362,
      "comment": "\n     * Serialize an instance, restore it, and check for equality.\n     ",
      "child_ranges": [
        "(line 336,col 9)-(line 339,col 73)",
        "(line 340,col 9)-(line 341,col 37)",
        "(line 342,col 9)-(line 343,col 34)",
        "(line 344,col 9)-(line 345,col 34)",
        "(line 346,col 9)-(line 346,col 32)",
        "(line 347,col 9)-(line 360,col 9)",
        "(line 361,col 9)-(line 361,col 40)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.junit.LegendItemTests.testSerialization2()",
      "begin_line": 367,
      "end_line": 388,
      "comment": "\n     * Serialize an instance, restore it, and check for equality.\n     ",
      "child_ranges": [
        "(line 368,col 9)-(line 368,col 66)",
        "(line 369,col 9)-(line 369,col 80)",
        "(line 370,col 9)-(line 371,col 71)",
        "(line 372,col 9)-(line 372,col 32)",
        "(line 373,col 9)-(line 386,col 9)",
        "(line 387,col 9)-(line 387,col 35)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.junit.LegendItemTests.testCloning()",
      "begin_line": 393,
      "end_line": 408,
      "comment": "\n     * Basic checks for cloning.\n     ",
      "child_ranges": [
        "(line 394,col 9)-(line 394,col 50)",
        "(line 395,col 9)-(line 395,col 32)",
        "(line 396,col 9)-(line 401,col 9)",
        "(line 402,col 9)-(line 402,col 35)",
        "(line 403,col 9)-(line 403,col 57)",
        "(line 404,col 9)-(line 404,col 40)",
        "(line 407,col 9)-(line 407,col 61)"
      ]
    }
  ]
}