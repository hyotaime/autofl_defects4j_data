{
  "filepath": "/tmp/Chart-4b/source/org/jfree/chart/renderer/category/LineRenderer3D.java",
  "nodes": [
    {
      "type": "class_interface",
      "name": "LineRenderer3D",
      "is_interface": false,
      "parent_types": [
        "org.jfree.chart.renderer.category.LineAndShapeRenderer",
        "org.jfree.chart.Effect3D",
        "java.io.Serializable"
      ],
      "begin_line": 95,
      "end_line": 664,
      "comment": "\r\n * A line renderer with a 3D effect.  The example shown here is generated by\r\n * the \u003ccode\u003eLineChart3DDemo1.java\u003c/code\u003e program included in the JFreeChart\r\n * Demo Collection:\r\n * \u003cbr\u003e\u003cbr\u003e\r\n * \u003cimg src\u003d\"../../../../../images/LineRenderer3DSample.png\"\r\n * alt\u003d\"LineRenderer3DSample.png\" /\u003e\r\n "
    },
    {
      "type": "field",
      "varNames": [
        "serialVersionUID"
      ],
      "begin_line": 99,
      "end_line": 99,
      "comment": " For serialization. "
    },
    {
      "type": "field",
      "varNames": [
        "DEFAULT_X_OFFSET"
      ],
      "begin_line": 102,
      "end_line": 102,
      "comment": " The default x-offset for the 3D effect. "
    },
    {
      "type": "field",
      "varNames": [
        "DEFAULT_Y_OFFSET"
      ],
      "begin_line": 105,
      "end_line": 105,
      "comment": " The default y-offset for the 3D effect. "
    },
    {
      "type": "field",
      "varNames": [
        "DEFAULT_WALL_PAINT"
      ],
      "begin_line": 108,
      "end_line": 108,
      "comment": " The default wall paint. "
    },
    {
      "type": "field",
      "varNames": [
        "xOffset"
      ],
      "begin_line": 111,
      "end_line": 111,
      "comment": " The size of x-offset for the 3D effect. "
    },
    {
      "type": "field",
      "varNames": [
        "yOffset"
      ],
      "begin_line": 114,
      "end_line": 114,
      "comment": " The size of y-offset for the 3D effect. "
    },
    {
      "type": "field",
      "varNames": [
        "wallPaint"
      ],
      "begin_line": 117,
      "end_line": 117,
      "comment": " The paint used to shade the left and lower 3D wall. "
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.renderer.category.LineRenderer3D.LineRenderer3D()",
      "begin_line": 122,
      "end_line": 127,
      "comment": "\r\n     * Creates a new renderer.\r\n     ",
      "child_ranges": [
        "(line 123,col 9)-(line 123,col 27)",
        "(line 124,col 9)-(line 124,col 40)",
        "(line 125,col 9)-(line 125,col 40)",
        "(line 126,col 9)-(line 126,col 44)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.LineRenderer3D.getXOffset()",
      "begin_line": 137,
      "end_line": 139,
      "comment": "\r\n     * Returns the x-offset for the 3D effect.\r\n     *\r\n     * @return The x-offset.\r\n     *\r\n     * @see #setXOffset(double)\r\n     * @see #getYOffset()\r\n     ",
      "child_ranges": [
        "(line 138,col 9)-(line 138,col 28)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.LineRenderer3D.getYOffset()",
      "begin_line": 149,
      "end_line": 151,
      "comment": "\r\n     * Returns the y-offset for the 3D effect.\r\n     *\r\n     * @return The y-offset.\r\n     *\r\n     * @see #setYOffset(double)\r\n     * @see #getXOffset()\r\n     ",
      "child_ranges": [
        "(line 150,col 9)-(line 150,col 28)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.LineRenderer3D.setXOffset(double)",
      "begin_line": 161,
      "end_line": 164,
      "comment": "\r\n     * Sets the x-offset and sends a {@link RendererChangeEvent} to all\r\n     * registered listeners.\r\n     *\r\n     * @param xOffset  the x-offset.\r\n     *\r\n     * @see #getXOffset()\r\n     ",
      "child_ranges": [
        "(line 162,col 9)-(line 162,col 31)",
        "(line 163,col 9)-(line 163,col 26)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.LineRenderer3D.setYOffset(double)",
      "begin_line": 174,
      "end_line": 177,
      "comment": "\r\n     * Sets the y-offset and sends a {@link RendererChangeEvent} to all\r\n     * registered listeners.\r\n     *\r\n     * @param yOffset  the y-offset.\r\n     *\r\n     * @see #getYOffset()\r\n     ",
      "child_ranges": [
        "(line 175,col 9)-(line 175,col 31)",
        "(line 176,col 9)-(line 176,col 26)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.LineRenderer3D.getWallPaint()",
      "begin_line": 187,
      "end_line": 189,
      "comment": "\r\n     * Returns the paint used to highlight the left and bottom wall in the plot\r\n     * background.\r\n     *\r\n     * @return The paint.\r\n     *\r\n     * @see #setWallPaint(Paint)\r\n     ",
      "child_ranges": [
        "(line 188,col 9)-(line 188,col 30)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.LineRenderer3D.setWallPaint(java.awt.Paint)",
      "begin_line": 200,
      "end_line": 206,
      "comment": "\r\n     * Sets the paint used to hightlight the left and bottom walls in the plot\r\n     * background, and sends a {@link RendererChangeEvent} to all\r\n     * registered listeners.\r\n     *\r\n     * @param paint  the paint (\u003ccode\u003enull\u003c/code\u003e not permitted).\r\n     *\r\n     * @see #getWallPaint()\r\n     ",
      "child_ranges": [
        "(line 201,col 9)-(line 203,col 9)",
        "(line 204,col 9)-(line 204,col 31)",
        "(line 205,col 9)-(line 205,col 26)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.LineRenderer3D.drawBackground(java.awt.Graphics2D, org.jfree.chart.plot.CategoryPlot, java.awt.geom.Rectangle2D)",
      "begin_line": 215,
      "end_line": 287,
      "comment": "\r\n     * Draws the background for the plot.\r\n     *\r\n     * @param g2  the graphics device.\r\n     * @param plot  the plot.\r\n     * @param dataArea  the area inside the axes.\r\n     ",
      "child_ranges": [
        "(line 218,col 9)-(line 218,col 43)",
        "(line 219,col 9)-(line 219,col 55)",
        "(line 220,col 9)-(line 220,col 46)",
        "(line 221,col 9)-(line 221,col 55)",
        "(line 223,col 9)-(line 223,col 46)",
        "(line 224,col 9)-(line 224,col 55)",
        "(line 225,col 9)-(line 225,col 46)",
        "(line 226,col 9)-(line 226,col 55)",
        "(line 228,col 9)-(line 228,col 45)",
        "(line 229,col 9)-(line 229,col 28)",
        "(line 230,col 9)-(line 230,col 28)",
        "(line 231,col 9)-(line 231,col 28)",
        "(line 232,col 9)-(line 232,col 28)",
        "(line 233,col 9)-(line 233,col 28)",
        "(line 234,col 9)-(line 234,col 28)",
        "(line 235,col 9)-(line 235,col 25)",
        "(line 237,col 9)-(line 237,col 56)",
        "(line 238,col 9)-(line 239,col 44)",
        "(line 242,col 9)-(line 242,col 58)",
        "(line 243,col 9)-(line 246,col 9)",
        "(line 248,col 9)-(line 248,col 49)",
        "(line 249,col 9)-(line 249,col 32)",
        "(line 250,col 9)-(line 250,col 32)",
        "(line 251,col 9)-(line 251,col 32)",
        "(line 252,col 9)-(line 252,col 32)",
        "(line 253,col 9)-(line 253,col 29)",
        "(line 254,col 9)-(line 254,col 36)",
        "(line 255,col 9)-(line 255,col 26)",
        "(line 257,col 9)-(line 257,col 51)",
        "(line 258,col 9)-(line 258,col 34)",
        "(line 259,col 9)-(line 259,col 34)",
        "(line 260,col 9)-(line 260,col 34)",
        "(line 261,col 9)-(line 261,col 34)",
        "(line 262,col 9)-(line 262,col 31)",
        "(line 263,col 9)-(line 263,col 36)",
        "(line 264,col 9)-(line 264,col 28)",
        "(line 267,col 9)-(line 267,col 37)",
        "(line 268,col 9)-(line 268,col 58)",
        "(line 269,col 9)-(line 269,col 24)",
        "(line 270,col 9)-(line 270,col 39)",
        "(line 271,col 9)-(line 271,col 24)",
        "(line 272,col 9)-(line 272,col 39)",
        "(line 273,col 9)-(line 273,col 24)",
        "(line 276,col 9)-(line 276,col 58)",
        "(line 277,col 9)-(line 283,col 9)",
        "(line 285,col 9)-(line 285,col 43)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.LineRenderer3D.drawOutline(java.awt.Graphics2D, org.jfree.chart.plot.CategoryPlot, java.awt.geom.Rectangle2D)",
      "begin_line": 296,
      "end_line": 327,
      "comment": "\r\n     * Draws the outline for the plot.\r\n     *\r\n     * @param g2  the graphics device.\r\n     * @param plot  the plot.\r\n     * @param dataArea  the area inside the axes.\r\n     ",
      "child_ranges": [
        "(line 299,col 9)-(line 299,col 43)",
        "(line 300,col 9)-(line 300,col 55)",
        "(line 301,col 9)-(line 301,col 46)",
        "(line 302,col 9)-(line 302,col 55)",
        "(line 304,col 9)-(line 304,col 46)",
        "(line 305,col 9)-(line 305,col 55)",
        "(line 306,col 9)-(line 306,col 46)",
        "(line 307,col 9)-(line 307,col 55)",
        "(line 309,col 9)-(line 309,col 45)",
        "(line 310,col 9)-(line 310,col 28)",
        "(line 311,col 9)-(line 311,col 28)",
        "(line 312,col 9)-(line 312,col 28)",
        "(line 313,col 9)-(line 313,col 28)",
        "(line 314,col 9)-(line 314,col 28)",
        "(line 315,col 9)-(line 315,col 28)",
        "(line 316,col 9)-(line 316,col 25)",
        "(line 319,col 9)-(line 319,col 55)",
        "(line 320,col 9)-(line 320,col 52)",
        "(line 321,col 9)-(line 325,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.LineRenderer3D.drawDomainGridline(java.awt.Graphics2D, org.jfree.chart.plot.CategoryPlot, java.awt.geom.Rectangle2D, double)",
      "begin_line": 339,
      "end_line": 370,
      "comment": "\r\n     * Draws a grid line against the domain axis.\r\n     *\r\n     * @param g2  the graphics device.\r\n     * @param plot  the plot.\r\n     * @param dataArea  the area for plotting data (not yet adjusted for any\r\n     *                  3D effect).\r\n     * @param value  the Java2D value at which the grid line should be drawn.\r\n     *\r\n     ",
      "child_ranges": [
        "(line 344,col 9)-(line 344,col 28)",
        "(line 345,col 9)-(line 345,col 28)",
        "(line 346,col 9)-(line 346,col 60)",
        "(line 347,col 9)-(line 364,col 9)",
        "(line 365,col 9)-(line 365,col 51)",
        "(line 366,col 9)-(line 366,col 53)",
        "(line 367,col 9)-(line 367,col 23)",
        "(line 368,col 9)-(line 368,col 23)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.LineRenderer3D.drawRangeGridline(java.awt.Graphics2D, org.jfree.chart.plot.CategoryPlot, org.jfree.chart.axis.ValueAxis, java.awt.geom.Rectangle2D, double)",
      "begin_line": 383,
      "end_line": 428,
      "comment": "\r\n     * Draws a grid line against the range axis.\r\n     *\r\n     * @param g2  the graphics device.\r\n     * @param plot  the plot.\r\n     * @param axis  the value axis.\r\n     * @param dataArea  the area for plotting data (not yet adjusted for any\r\n     *                  3D effect).\r\n     * @param value  the value at which the grid line should be drawn.\r\n     *\r\n     ",
      "child_ranges": [
        "(line 389,col 9)-(line 389,col 38)",
        "(line 391,col 9)-(line 393,col 9)",
        "(line 395,col 9)-(line 398,col 53)",
        "(line 400,col 9)-(line 400,col 28)",
        "(line 401,col 9)-(line 401,col 28)",
        "(line 402,col 9)-(line 402,col 60)",
        "(line 403,col 9)-(line 422,col 9)",
        "(line 423,col 9)-(line 423,col 50)",
        "(line 424,col 9)-(line 424,col 52)",
        "(line 425,col 9)-(line 425,col 23)",
        "(line 426,col 9)-(line 426,col 23)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.LineRenderer3D.drawRangeMarker(java.awt.Graphics2D, org.jfree.chart.plot.CategoryPlot, org.jfree.chart.axis.ValueAxis, org.jfree.chart.plot.Marker, java.awt.geom.Rectangle2D)",
      "begin_line": 439,
      "end_line": 494,
      "comment": "\r\n     * Draws a range marker.\r\n     *\r\n     * @param g2  the graphics device.\r\n     * @param plot  the plot.\r\n     * @param axis  the value axis.\r\n     * @param marker  the marker.\r\n     * @param dataArea  the area for plotting data (not including 3D effect).\r\n     ",
      "child_ranges": [
        "(line 445,col 9)-(line 448,col 53)",
        "(line 450,col 9)-(line 493,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.LineRenderer3D.drawItem(java.awt.Graphics2D, org.jfree.chart.renderer.category.CategoryItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.CategoryPlot, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.category.CategoryDataset, int, int, boolean, int)",
      "begin_line": 513,
      "end_line": 609,
      "comment": "\r\n     * Draw a single data item.\r\n     *\r\n     * @param g2  the graphics device.\r\n     * @param state  the renderer state.\r\n     * @param dataArea  the area in which the data is drawn.\r\n     * @param plot  the plot.\r\n     * @param domainAxis  the domain axis.\r\n     * @param rangeAxis  the range axis.\r\n     * @param dataset  the dataset.\r\n     * @param row  the row index (zero-based).\r\n     * @param column  the column index (zero-based).\r\n     * @param selected  is the item selected?\r\n     * @param pass  the pass index.\r\n     *\r\n     *  @since 1.2.0\r\n     ",
      "child_ranges": [
        "(line 518,col 9)-(line 520,col 9)",
        "(line 523,col 9)-(line 523,col 49)",
        "(line 524,col 9)-(line 526,col 9)",
        "(line 528,col 9)-(line 531,col 53)",
        "(line 533,col 9)-(line 533,col 60)",
        "(line 536,col 9)-(line 537,col 52)",
        "(line 538,col 9)-(line 538,col 39)",
        "(line 539,col 9)-(line 540,col 41)",
        "(line 542,col 9)-(line 542,col 58)",
        "(line 543,col 9)-(line 548,col 9)",
        "(line 550,col 9)-(line 595,col 9)",
        "(line 598,col 9)-(line 601,col 9)",
        "(line 604,col 9)-(line 604,col 64)",
        "(line 605,col 9)-(line 607,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.LineRenderer3D.equals(java.lang.Object)",
      "begin_line": 618,
      "end_line": 636,
      "comment": "\r\n     * Checks this renderer for equality with an arbitrary object.\r\n     *\r\n     * @param obj  the object (\u003ccode\u003enull\u003c/code\u003e permitted).\r\n     *\r\n     * @return A boolean.\r\n     ",
      "child_ranges": [
        "(line 619,col 9)-(line 621,col 9)",
        "(line 622,col 9)-(line 624,col 9)",
        "(line 625,col 9)-(line 625,col 51)",
        "(line 626,col 9)-(line 628,col 9)",
        "(line 629,col 9)-(line 631,col 9)",
        "(line 632,col 9)-(line 634,col 9)",
        "(line 635,col 9)-(line 635,col 33)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.LineRenderer3D.writeObject(java.io.ObjectOutputStream)",
      "begin_line": 645,
      "end_line": 648,
      "comment": "\r\n     * Provides serialization support.\r\n     *\r\n     * @param stream  the output stream.\r\n     *\r\n     * @throws IOException  if there is an I/O error.\r\n     ",
      "child_ranges": [
        "(line 646,col 9)-(line 646,col 36)",
        "(line 647,col 9)-(line 647,col 59)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.LineRenderer3D.readObject(java.io.ObjectInputStream)",
      "begin_line": 658,
      "end_line": 662,
      "comment": "\r\n     * Provides serialization support.\r\n     *\r\n     * @param stream  the input stream.\r\n     *\r\n     * @throws IOException  if there is an I/O error.\r\n     * @throws ClassNotFoundException  if there is a classpath problem.\r\n     ",
      "child_ranges": [
        "(line 660,col 9)-(line 660,col 35)",
        "(line 661,col 9)-(line 661,col 59)"
      ]
    }
  ]
}