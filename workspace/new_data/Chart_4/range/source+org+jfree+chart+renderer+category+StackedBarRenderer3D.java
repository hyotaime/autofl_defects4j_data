{
  "filepath": "/tmp/Chart-4b/source/org/jfree/chart/renderer/category/StackedBarRenderer3D.java",
  "nodes": [
    {
      "type": "class_interface",
      "name": "StackedBarRenderer3D",
      "is_interface": false,
      "parent_types": [
        "org.jfree.chart.renderer.category.BarRenderer3D",
        "java.lang.Cloneable",
        "org.jfree.chart.util.PublicCloneable",
        "java.io.Serializable"
      ],
      "begin_line": 127,
      "end_line": 848,
      "comment": "\r\n * Renders stacked bars with 3D-effect, for use with the {@link CategoryPlot}\r\n * class.  The example shown here is generated by the\r\n * \u003ccode\u003eStackedBarChart3DDemo1.java\u003c/code\u003e program included in the\r\n * JFreeChart Demo Collection:\r\n * \u003cbr\u003e\u003cbr\u003e\r\n * \u003cimg src\u003d\"../../../../../images/StackedBarRenderer3DSample.png\"\r\n * alt\u003d\"StackedBarRenderer3DSample.png\" /\u003e\r\n "
    },
    {
      "type": "field",
      "varNames": [
        "serialVersionUID"
      ],
      "begin_line": 131,
      "end_line": 131,
      "comment": " For serialization. "
    },
    {
      "type": "field",
      "varNames": [
        "renderAsPercentages"
      ],
      "begin_line": 134,
      "end_line": 134,
      "comment": " A flag that controls whether the bars display values or percentages. "
    },
    {
      "type": "field",
      "varNames": [
        "ignoreZeroValues"
      ],
      "begin_line": 142,
      "end_line": 142,
      "comment": "\r\n     * A flag that controls whether or not zero values are drawn by the\r\n     * renderer.\r\n     *\r\n     * @since 1.2.0\r\n     "
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.renderer.category.StackedBarRenderer3D.StackedBarRenderer3D()",
      "begin_line": 152,
      "end_line": 154,
      "comment": "\r\n     * Creates a new renderer with no tool tip generator and no URL generator.\r\n     * \u003cP\u003e\r\n     * The defaults (no tool tip or URL generators) have been chosen to\r\n     * minimise the processing required to generate a default chart.  If you\r\n     * require tool tips or URLs, then you can easily add the required\r\n     * generators.\r\n     ",
      "child_ranges": [
        "(line 153,col 9)-(line 153,col 20)"
      ]
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.renderer.category.StackedBarRenderer3D.StackedBarRenderer3D(double, double)",
      "begin_line": 162,
      "end_line": 164,
      "comment": "\r\n     * Constructs a new renderer with the specified \u00273D effect\u0027.\r\n     *\r\n     * @param xOffset  the x-offset for the 3D effect.\r\n     * @param yOffset  the y-offset for the 3D effect.\r\n     ",
      "child_ranges": [
        "(line 163,col 9)-(line 163,col 32)"
      ]
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.renderer.category.StackedBarRenderer3D.StackedBarRenderer3D(boolean)",
      "begin_line": 174,
      "end_line": 177,
      "comment": "\r\n     * Creates a new renderer.\r\n     *\r\n     * @param renderAsPercentages  a flag that controls whether the data values\r\n     *                             are rendered as percentages.\r\n     *\r\n     * @since 1.0.2\r\n     ",
      "child_ranges": [
        "(line 175,col 9)-(line 175,col 16)",
        "(line 176,col 9)-(line 176,col 55)"
      ]
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.renderer.category.StackedBarRenderer3D.StackedBarRenderer3D(double, double, boolean)",
      "begin_line": 189,
      "end_line": 193,
      "comment": "\r\n     * Constructs a new renderer with the specified \u00273D effect\u0027.\r\n     *\r\n     * @param xOffset  the x-offset for the 3D effect.\r\n     * @param yOffset  the y-offset for the 3D effect.\r\n     * @param renderAsPercentages  a flag that controls whether the data values\r\n     *                             are rendered as percentages.\r\n     *\r\n     * @since 1.0.2\r\n     ",
      "child_ranges": [
        "(line 191,col 9)-(line 191,col 32)",
        "(line 192,col 9)-(line 192,col 55)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.StackedBarRenderer3D.getRenderAsPercentages()",
      "begin_line": 204,
      "end_line": 206,
      "comment": "\r\n     * Returns \u003ccode\u003etrue\u003c/code\u003e if the renderer displays each item value as\r\n     * a percentage (so that the stacked bars add to 100%), and\r\n     * \u003ccode\u003efalse\u003c/code\u003e otherwise.\r\n     *\r\n     * @return A boolean.\r\n     *\r\n     * @since 1.0.2\r\n     ",
      "child_ranges": [
        "(line 205,col 9)-(line 205,col 40)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.StackedBarRenderer3D.setRenderAsPercentages(boolean)",
      "begin_line": 217,
      "end_line": 220,
      "comment": "\r\n     * Sets the flag that controls whether the renderer displays each item\r\n     * value as a percentage (so that the stacked bars add to 100%), and sends\r\n     * a {@link RendererChangeEvent} to all registered listeners.\r\n     *\r\n     * @param asPercentages  the flag.\r\n     *\r\n     * @since 1.0.2\r\n     ",
      "child_ranges": [
        "(line 218,col 9)-(line 218,col 49)",
        "(line 219,col 9)-(line 219,col 26)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.StackedBarRenderer3D.getIgnoreZeroValues()",
      "begin_line": 230,
      "end_line": 232,
      "comment": "\r\n     * Returns the flag that controls whether or not zero values are drawn\r\n     * by the renderer.\r\n     *\r\n     * @return A boolean.\r\n     *\r\n     * @since 1.2.0\r\n     ",
      "child_ranges": [
        "(line 231,col 9)-(line 231,col 37)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.StackedBarRenderer3D.setIgnoreZeroValues(boolean)",
      "begin_line": 243,
      "end_line": 246,
      "comment": "\r\n     * Sets a flag that controls whether or not zero values are drawn by the\r\n     * renderer, and sends a {@link RendererChangeEvent} to all registered\r\n     * listeners.\r\n     *\r\n     * @param ignore  the new flag value.\r\n     *\r\n     * @since 1.2.0\r\n     ",
      "child_ranges": [
        "(line 244,col 9)-(line 244,col 39)",
        "(line 245,col 9)-(line 245,col 55)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.StackedBarRenderer3D.findRangeBounds(org.jfree.data.category.CategoryDataset)",
      "begin_line": 256,
      "end_line": 266,
      "comment": "\r\n     * Returns the range of values the renderer requires to display all the\r\n     * items from the specified dataset.\r\n     *\r\n     * @param dataset  the dataset (\u003ccode\u003enull\u003c/code\u003e not permitted).\r\n     *\r\n     * @return The range (or \u003ccode\u003enull\u003c/code\u003e if the dataset is empty).\r\n     ",
      "child_ranges": [
        "(line 257,col 9)-(line 259,col 9)",
        "(line 260,col 9)-(line 265,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.StackedBarRenderer3D.calculateBarWidth(org.jfree.chart.plot.CategoryPlot, java.awt.geom.Rectangle2D, int, org.jfree.chart.renderer.category.CategoryItemRendererState)",
      "begin_line": 276,
      "end_line": 311,
      "comment": "\r\n     * Calculates the bar width and stores it in the renderer state.\r\n     *\r\n     * @param plot  the plot.\r\n     * @param dataArea  the data area.\r\n     * @param rendererIndex  the renderer index.\r\n     * @param state  the renderer state.\r\n     ",
      "child_ranges": [
        "(line 282,col 9)-(line 282,col 69)",
        "(line 283,col 9)-(line 283,col 62)",
        "(line 284,col 9)-(line 309,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList(org.jfree.data.category.CategoryDataset, java.lang.Comparable, int[], double, boolean)",
      "begin_line": 328,
      "end_line": 374,
      "comment": "\r\n     * Returns a list containing the stacked values for the specified series\r\n     * in the given dataset, plus the supplied base value.\r\n     *\r\n     * @param dataset  the dataset (\u003ccode\u003enull\u003c/code\u003e not permitted).\r\n     * @param category  the category key (\u003ccode\u003enull\u003c/code\u003e not permitted).\r\n     * @param includedRows  the included rows.\r\n     * @param base  the base value.\r\n     * @param asPercentages  a flag that controls whether the values in the\r\n     *     list are converted to percentages of the total.\r\n     *\r\n     * @return The value list.\r\n     *\r\n     * @since 1.0.13\r\n     ",
      "child_ranges": [
        "(line 332,col 9)-(line 332,col 38)",
        "(line 333,col 9)-(line 333,col 30)",
        "(line 334,col 9)-(line 334,col 30)",
        "(line 335,col 9)-(line 335,col 27)",
        "(line 336,col 9)-(line 339,col 9)",
        "(line 341,col 9)-(line 341,col 27)",
        "(line 342,col 9)-(line 342,col 43)",
        "(line 343,col 9)-(line 371,col 9)",
        "(line 372,col 9)-(line 372,col 22)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.StackedBarRenderer3D.drawItem(java.awt.Graphics2D, org.jfree.chart.renderer.category.CategoryItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.CategoryPlot, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.category.CategoryDataset, int, int, boolean, int)",
      "begin_line": 392,
      "end_line": 426,
      "comment": "\r\n     * Draws the visual representation of one data item from the chart (in\r\n     * fact, this method does nothing until it reaches the last item for each\r\n     * category, at which point it draws all the items for that category).\r\n     *\r\n     * @param g2  the graphics device.\r\n     * @param state  the renderer state.\r\n     * @param dataArea  the plot area.\r\n     * @param plot  the plot.\r\n     * @param domainAxis  the domain (category) axis.\r\n     * @param rangeAxis  the range (value) axis.\r\n     * @param dataset  the data.\r\n     * @param row  the row index (zero-based).\r\n     * @param column  the column index (zero-based).\r\n     * @param pass  the pass index.\r\n     ",
      "child_ranges": [
        "(line 399,col 9)-(line 401,col 9)",
        "(line 402,col 9)-(line 402,col 59)",
        "(line 404,col 9)-(line 406,col 53)",
        "(line 408,col 9)-(line 411,col 53)",
        "(line 414,col 9)-(line 414,col 60)",
        "(line 417,col 9)-(line 424,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.StackedBarRenderer3D.drawStackHorizontal(java.util.List, java.lang.Comparable, java.awt.Graphics2D, org.jfree.chart.renderer.category.CategoryItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.CategoryPlot, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.category.CategoryDataset)",
      "begin_line": 443,
      "end_line": 537,
      "comment": "\r\n     * Draws a stack of bars for one category, with a horizontal orientation.\r\n     *\r\n     * @param values  the value list.\r\n     * @param category  the category.\r\n     * @param g2  the graphics device.\r\n     * @param state  the state.\r\n     * @param dataArea  the data area (adjusted for the 3D effect).\r\n     * @param plot  the plot.\r\n     * @param domainAxis  the domain axis.\r\n     * @param rangeAxis  the range axis.\r\n     * @param dataset  the dataset.\r\n     *\r\n     * @since 1.0.4\r\n     ",
      "child_ranges": [
        "(line 449,col 9)-(line 449,col 54)",
        "(line 450,col 9)-(line 452,col 44)",
        "(line 453,col 9)-(line 453,col 42)",
        "(line 457,col 9)-(line 457,col 45)",
        "(line 460,col 9)-(line 460,col 50)",
        "(line 461,col 9)-(line 461,col 43)",
        "(line 462,col 9)-(line 521,col 9)",
        "(line 523,col 9)-(line 536,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.StackedBarRenderer3D.createHorizontalBlock(double, double, double, double, boolean)",
      "begin_line": 552,
      "end_line": 623,
      "comment": "\r\n     * Creates an array of shapes representing the six sides of a block in a\r\n     * horizontal stack.\r\n     *\r\n     * @param x0  left edge of bar (in Java2D space).\r\n     * @param width  the width of the bar (in Java2D units).\r\n     * @param y0  the base of the block (in Java2D space).\r\n     * @param y1  the top of the block (in Java2D space).\r\n     * @param inverted  a flag indicating whether or not the block is inverted\r\n     *     (this changes the order of the faces of the block).\r\n     *\r\n     * @return The sides of the block.\r\n     ",
      "child_ranges": [
        "(line 554,col 9)-(line 554,col 38)",
        "(line 555,col 9)-(line 555,col 49)",
        "(line 556,col 9)-(line 556,col 57)",
        "(line 557,col 9)-(line 558,col 43)",
        "(line 559,col 9)-(line 560,col 43)",
        "(line 562,col 9)-(line 562,col 48)",
        "(line 563,col 9)-(line 563,col 56)",
        "(line 564,col 9)-(line 565,col 42)",
        "(line 566,col 9)-(line 567,col 42)",
        "(line 569,col 9)-(line 569,col 47)",
        "(line 570,col 9)-(line 570,col 60)",
        "(line 571,col 9)-(line 571,col 62)",
        "(line 572,col 9)-(line 572,col 62)",
        "(line 573,col 9)-(line 573,col 60)",
        "(line 574,col 9)-(line 574,col 27)",
        "(line 576,col 9)-(line 576,col 44)",
        "(line 577,col 9)-(line 577,col 57)",
        "(line 578,col 9)-(line 578,col 59)",
        "(line 579,col 9)-(line 579,col 59)",
        "(line 580,col 9)-(line 580,col 57)",
        "(line 581,col 9)-(line 581,col 24)",
        "(line 583,col 9)-(line 583,col 45)",
        "(line 584,col 9)-(line 584,col 58)",
        "(line 585,col 9)-(line 585,col 60)",
        "(line 586,col 9)-(line 586,col 60)",
        "(line 587,col 9)-(line 587,col 58)",
        "(line 588,col 9)-(line 588,col 25)",
        "(line 590,col 9)-(line 590,col 46)",
        "(line 591,col 9)-(line 591,col 59)",
        "(line 592,col 9)-(line 592,col 59)",
        "(line 593,col 9)-(line 593,col 61)",
        "(line 594,col 9)-(line 594,col 61)",
        "(line 595,col 9)-(line 595,col 26)",
        "(line 597,col 9)-(line 597,col 45)",
        "(line 598,col 9)-(line 598,col 58)",
        "(line 599,col 9)-(line 599,col 58)",
        "(line 600,col 9)-(line 600,col 58)",
        "(line 601,col 9)-(line 601,col 58)",
        "(line 602,col 9)-(line 602,col 25)",
        "(line 604,col 9)-(line 604,col 46)",
        "(line 605,col 9)-(line 605,col 61)",
        "(line 606,col 9)-(line 606,col 61)",
        "(line 607,col 9)-(line 607,col 61)",
        "(line 608,col 9)-(line 608,col 61)",
        "(line 609,col 9)-(line 609,col 26)",
        "(line 610,col 9)-(line 610,col 27)",
        "(line 611,col 9)-(line 611,col 25)",
        "(line 612,col 9)-(line 619,col 9)",
        "(line 620,col 9)-(line 620,col 24)",
        "(line 621,col 9)-(line 621,col 26)",
        "(line 622,col 9)-(line 622,col 22)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.StackedBarRenderer3D.drawStackVertical(java.util.List, java.lang.Comparable, java.awt.Graphics2D, org.jfree.chart.renderer.category.CategoryItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.CategoryPlot, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.category.CategoryDataset)",
      "begin_line": 640,
      "end_line": 736,
      "comment": "\r\n     * Draws a stack of bars for one category, with a vertical orientation.\r\n     *\r\n     * @param values  the value list.\r\n     * @param category  the category.\r\n     * @param g2  the graphics device.\r\n     * @param state  the state.\r\n     * @param dataArea  the data area (adjusted for the 3D effect).\r\n     * @param plot  the plot.\r\n     * @param domainAxis  the domain axis.\r\n     * @param rangeAxis  the range axis.\r\n     * @param dataset  the dataset.\r\n     *\r\n     * @since 1.0.4\r\n     ",
      "child_ranges": [
        "(line 647,col 9)-(line 647,col 54)",
        "(line 648,col 9)-(line 650,col 44)",
        "(line 651,col 9)-(line 651,col 42)",
        "(line 655,col 9)-(line 655,col 45)",
        "(line 658,col 9)-(line 658,col 50)",
        "(line 659,col 9)-(line 659,col 43)",
        "(line 660,col 9)-(line 720,col 9)",
        "(line 722,col 9)-(line 735,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.StackedBarRenderer3D.createVerticalBlock(double, double, double, double, boolean)",
      "begin_line": 751,
      "end_line": 822,
      "comment": "\r\n     * Creates an array of shapes representing the six sides of a block in a\r\n     * vertical stack.\r\n     *\r\n     * @param x0  left edge of bar (in Java2D space).\r\n     * @param width  the width of the bar (in Java2D units).\r\n     * @param y0  the base of the block (in Java2D space).\r\n     * @param y1  the top of the block (in Java2D space).\r\n     * @param inverted  a flag indicating whether or not the block is inverted\r\n     *     (this changes the order of the faces of the block).\r\n     *\r\n     * @return The sides of the block.\r\n     ",
      "child_ranges": [
        "(line 753,col 9)-(line 753,col 38)",
        "(line 754,col 9)-(line 754,col 49)",
        "(line 755,col 9)-(line 755,col 57)",
        "(line 756,col 9)-(line 757,col 43)",
        "(line 758,col 9)-(line 759,col 43)",
        "(line 762,col 9)-(line 762,col 48)",
        "(line 763,col 9)-(line 763,col 56)",
        "(line 764,col 9)-(line 765,col 42)",
        "(line 766,col 9)-(line 767,col 42)",
        "(line 769,col 9)-(line 769,col 46)",
        "(line 770,col 9)-(line 770,col 59)",
        "(line 771,col 9)-(line 771,col 61)",
        "(line 772,col 9)-(line 772,col 61)",
        "(line 773,col 9)-(line 773,col 59)",
        "(line 774,col 9)-(line 774,col 26)",
        "(line 776,col 9)-(line 776,col 45)",
        "(line 777,col 9)-(line 777,col 58)",
        "(line 778,col 9)-(line 778,col 60)",
        "(line 779,col 9)-(line 779,col 60)",
        "(line 780,col 9)-(line 780,col 58)",
        "(line 781,col 9)-(line 781,col 25)",
        "(line 783,col 9)-(line 783,col 45)",
        "(line 784,col 9)-(line 784,col 58)",
        "(line 785,col 9)-(line 785,col 60)",
        "(line 786,col 9)-(line 786,col 60)",
        "(line 787,col 9)-(line 787,col 58)",
        "(line 788,col 9)-(line 788,col 25)",
        "(line 790,col 9)-(line 790,col 46)",
        "(line 791,col 9)-(line 791,col 59)",
        "(line 792,col 9)-(line 792,col 59)",
        "(line 793,col 9)-(line 793,col 61)",
        "(line 794,col 9)-(line 794,col 61)",
        "(line 795,col 9)-(line 795,col 26)",
        "(line 797,col 9)-(line 797,col 44)",
        "(line 798,col 9)-(line 798,col 57)",
        "(line 799,col 9)-(line 799,col 57)",
        "(line 800,col 9)-(line 800,col 57)",
        "(line 801,col 9)-(line 801,col 57)",
        "(line 802,col 9)-(line 802,col 24)",
        "(line 804,col 9)-(line 804,col 47)",
        "(line 805,col 9)-(line 805,col 62)",
        "(line 806,col 9)-(line 806,col 62)",
        "(line 807,col 9)-(line 807,col 62)",
        "(line 808,col 9)-(line 808,col 62)",
        "(line 809,col 9)-(line 809,col 27)",
        "(line 811,col 9)-(line 811,col 27)",
        "(line 812,col 9)-(line 812,col 25)",
        "(line 813,col 9)-(line 813,col 25)",
        "(line 814,col 9)-(line 814,col 26)",
        "(line 815,col 9)-(line 815,col 24)",
        "(line 816,col 9)-(line 816,col 26)",
        "(line 817,col 9)-(line 820,col 9)",
        "(line 821,col 9)-(line 821,col 22)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.StackedBarRenderer3D.equals(java.lang.Object)",
      "begin_line": 831,
      "end_line": 846,
      "comment": "\r\n     * Tests this renderer for equality with an arbitrary object.\r\n     *\r\n     * @param obj  the object (\u003ccode\u003enull\u003c/code\u003e permitted).\r\n     *\r\n     * @return A boolean.\r\n     ",
      "child_ranges": [
        "(line 832,col 9)-(line 834,col 9)",
        "(line 835,col 9)-(line 837,col 9)",
        "(line 838,col 9)-(line 838,col 63)",
        "(line 839,col 9)-(line 841,col 9)",
        "(line 842,col 9)-(line 844,col 9)",
        "(line 845,col 9)-(line 845,col 33)"
      ]
    }
  ]
}