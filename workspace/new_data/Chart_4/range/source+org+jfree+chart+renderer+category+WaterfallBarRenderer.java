{
  "filepath": "/tmp/Chart-4b/source/org/jfree/chart/renderer/category/WaterfallBarRenderer.java",
  "nodes": [
    {
      "type": "class_interface",
      "name": "WaterfallBarRenderer",
      "is_interface": false,
      "parent_types": [
        "org.jfree.chart.renderer.category.BarRenderer"
      ],
      "begin_line": 106,
      "end_line": 518,
      "comment": "\r\n * A renderer that handles the drawing of waterfall bar charts, for use with\r\n * the {@link CategoryPlot} class.  Some quirks to note:\r\n * \u003cul\u003e\r\n * \u003cli\u003ethe value in the last category of the dataset should be (redundantly)\r\n *   specified as the sum of the items in the preceding categories - otherwise\r\n *   the final bar in the plot will be incorrectly plotted;\u003c/li\u003e\r\n * \u003cli\u003ethe bar colors are defined using special methods in this class - the\r\n *   inherited methods (for example,\r\n *   {@link AbstractRenderer#setSeriesPaint(int, Paint)}) are ignored;\u003c/li\u003e\r\n * \u003c/ul\u003e\r\n * The example shown here is generated by the\r\n * \u003ccode\u003eWaterfallChartDemo1.java\u003c/code\u003e program included in the JFreeChart\r\n * Demo Collection:\r\n * \u003cbr\u003e\u003cbr\u003e\r\n * \u003cimg src\u003d\"../../../../../images/WaterfallBarRendererSample.png\"\r\n * alt\u003d\"WaterfallBarRendererSample.png\" /\u003e\r\n "
    },
    {
      "type": "field",
      "varNames": [
        "serialVersionUID"
      ],
      "begin_line": 109,
      "end_line": 109,
      "comment": " For serialization. "
    },
    {
      "type": "field",
      "varNames": [
        "firstBarPaint"
      ],
      "begin_line": 112,
      "end_line": 112,
      "comment": " The paint used to draw the first bar. "
    },
    {
      "type": "field",
      "varNames": [
        "lastBarPaint"
      ],
      "begin_line": 115,
      "end_line": 115,
      "comment": " The paint used to draw the last bar. "
    },
    {
      "type": "field",
      "varNames": [
        "positiveBarPaint"
      ],
      "begin_line": 118,
      "end_line": 118,
      "comment": " The paint used to draw bars having positive values. "
    },
    {
      "type": "field",
      "varNames": [
        "negativeBarPaint"
      ],
      "begin_line": 121,
      "end_line": 121,
      "comment": " The paint used to draw bars having negative values. "
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.renderer.category.WaterfallBarRenderer.WaterfallBarRenderer()",
      "begin_line": 126,
      "end_line": 135,
      "comment": "\r\n     * Constructs a new renderer with default values for the bar colors.\r\n     ",
      "child_ranges": [
        "(line 127,col 9)-(line 134,col 58)"
      ]
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.renderer.category.WaterfallBarRenderer.WaterfallBarRenderer(java.awt.Paint, java.awt.Paint, java.awt.Paint, java.awt.Paint)",
      "begin_line": 149,
      "end_line": 175,
      "comment": "\r\n     * Constructs a new waterfall renderer.\r\n     *\r\n     * @param firstBarPaint  the color of the first bar (\u003ccode\u003enull\u003c/code\u003e not\r\n     *                       permitted).\r\n     * @param positiveBarPaint  the color for bars with positive values\r\n     *                          (\u003ccode\u003enull\u003c/code\u003e not permitted).\r\n     * @param negativeBarPaint  the color for bars with negative values\r\n     *                          (\u003ccode\u003enull\u003c/code\u003e not permitted).\r\n     * @param lastBarPaint  the color of the last bar (\u003ccode\u003enull\u003c/code\u003e not\r\n     *                      permitted).\r\n     ",
      "child_ranges": [
        "(line 153,col 9)-(line 153,col 16)",
        "(line 154,col 9)-(line 156,col 9)",
        "(line 157,col 9)-(line 160,col 9)",
        "(line 161,col 9)-(line 164,col 9)",
        "(line 165,col 9)-(line 167,col 9)",
        "(line 168,col 9)-(line 168,col 43)",
        "(line 169,col 9)-(line 169,col 41)",
        "(line 170,col 9)-(line 170,col 49)",
        "(line 171,col 9)-(line 171,col 49)",
        "(line 172,col 9)-(line 173,col 61)",
        "(line 174,col 9)-(line 174,col 33)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.WaterfallBarRenderer.getFirstBarPaint()",
      "begin_line": 182,
      "end_line": 184,
      "comment": "\r\n     * Returns the paint used to draw the first bar.\r\n     *\r\n     * @return The paint (never \u003ccode\u003enull\u003c/code\u003e).\r\n     ",
      "child_ranges": [
        "(line 183,col 9)-(line 183,col 34)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.WaterfallBarRenderer.setFirstBarPaint(java.awt.Paint)",
      "begin_line": 192,
      "end_line": 198,
      "comment": "\r\n     * Sets the paint that will be used to draw the first bar and sends a\r\n     * {@link RendererChangeEvent} to all registered listeners.\r\n     *\r\n     * @param paint  the paint (\u003ccode\u003enull\u003c/code\u003e not permitted).\r\n     ",
      "child_ranges": [
        "(line 193,col 9)-(line 195,col 9)",
        "(line 196,col 9)-(line 196,col 35)",
        "(line 197,col 9)-(line 197,col 26)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.WaterfallBarRenderer.getLastBarPaint()",
      "begin_line": 205,
      "end_line": 207,
      "comment": "\r\n     * Returns the paint used to draw the last bar.\r\n     *\r\n     * @return The paint (never \u003ccode\u003enull\u003c/code\u003e).\r\n     ",
      "child_ranges": [
        "(line 206,col 9)-(line 206,col 33)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.WaterfallBarRenderer.setLastBarPaint(java.awt.Paint)",
      "begin_line": 215,
      "end_line": 221,
      "comment": "\r\n     * Sets the paint that will be used to draw the last bar and sends a\r\n     * {@link RendererChangeEvent} to all registered listeners.\r\n     *\r\n     * @param paint  the paint (\u003ccode\u003enull\u003c/code\u003e not permitted).\r\n     ",
      "child_ranges": [
        "(line 216,col 9)-(line 218,col 9)",
        "(line 219,col 9)-(line 219,col 34)",
        "(line 220,col 9)-(line 220,col 26)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.WaterfallBarRenderer.getPositiveBarPaint()",
      "begin_line": 228,
      "end_line": 230,
      "comment": "\r\n     * Returns the paint used to draw bars with positive values.\r\n     *\r\n     * @return The paint (never \u003ccode\u003enull\u003c/code\u003e).\r\n     ",
      "child_ranges": [
        "(line 229,col 9)-(line 229,col 37)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.WaterfallBarRenderer.setPositiveBarPaint(java.awt.Paint)",
      "begin_line": 237,
      "end_line": 243,
      "comment": "\r\n     * Sets the paint that will be used to draw bars having positive values.\r\n     *\r\n     * @param paint  the paint (\u003ccode\u003enull\u003c/code\u003e not permitted).\r\n     ",
      "child_ranges": [
        "(line 238,col 9)-(line 240,col 9)",
        "(line 241,col 9)-(line 241,col 38)",
        "(line 242,col 9)-(line 242,col 26)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.WaterfallBarRenderer.getNegativeBarPaint()",
      "begin_line": 250,
      "end_line": 252,
      "comment": "\r\n     * Returns the paint used to draw bars with negative values.\r\n     *\r\n     * @return The paint (never \u003ccode\u003enull\u003c/code\u003e).\r\n     ",
      "child_ranges": [
        "(line 251,col 9)-(line 251,col 37)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.WaterfallBarRenderer.setNegativeBarPaint(java.awt.Paint)",
      "begin_line": 260,
      "end_line": 266,
      "comment": "\r\n     * Sets the paint that will be used to draw bars having negative values,\r\n     * and sends a {@link RendererChangeEvent} to all registered listeners.\r\n     *\r\n     * @param paint  the paint (\u003ccode\u003enull\u003c/code\u003e not permitted).\r\n     ",
      "child_ranges": [
        "(line 261,col 9)-(line 263,col 9)",
        "(line 264,col 9)-(line 264,col 38)",
        "(line 265,col 9)-(line 265,col 26)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.WaterfallBarRenderer.findRangeBounds(org.jfree.data.category.CategoryDataset)",
      "begin_line": 276,
      "end_line": 312,
      "comment": "\r\n     * Returns the range of values the renderer requires to display all the\r\n     * items from the specified dataset.\r\n     *\r\n     * @param dataset  the dataset (\u003ccode\u003enull\u003c/code\u003e not permitted).\r\n     *\r\n     * @return The range (or \u003ccode\u003enull\u003c/code\u003e if the dataset is empty).\r\n     ",
      "child_ranges": [
        "(line 277,col 9)-(line 279,col 9)",
        "(line 280,col 9)-(line 280,col 36)",
        "(line 282,col 9)-(line 282,col 29)",
        "(line 283,col 9)-(line 283,col 29)",
        "(line 284,col 9)-(line 284,col 51)",
        "(line 285,col 9)-(line 304,col 9)",
        "(line 305,col 9)-(line 310,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.WaterfallBarRenderer.drawItem(java.awt.Graphics2D, org.jfree.chart.renderer.category.CategoryItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.CategoryPlot, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.category.CategoryDataset, int, int, boolean, int)",
      "begin_line": 329,
      "end_line": 447,
      "comment": "\r\n     * Draws the bar for a single (series, category) data item.\r\n     *\r\n     * @param g2  the graphics device.\r\n     * @param state  the renderer state.\r\n     * @param dataArea  the data area.\r\n     * @param plot  the plot.\r\n     * @param domainAxis  the domain axis.\r\n     * @param rangeAxis  the range axis.\r\n     * @param dataset  the dataset.\r\n     * @param row  the row index (zero-based).\r\n     * @param column  the column index (zero-based).\r\n     * @param selected  is the item selected?\r\n     * @param pass  the pass index.\r\n     ",
      "child_ranges": [
        "(line 334,col 9)-(line 334,col 56)",
        "(line 335,col 9)-(line 337,col 9)",
        "(line 338,col 9)-(line 338,col 29)",
        "(line 339,col 9)-(line 339,col 49)",
        "(line 340,col 9)-(line 342,col 9)",
        "(line 343,col 9)-(line 343,col 45)",
        "(line 345,col 9)-(line 345,col 45)",
        "(line 346,col 9)-(line 346,col 60)",
        "(line 348,col 9)-(line 348,col 27)",
        "(line 349,col 9)-(line 349,col 27)",
        "(line 351,col 9)-(line 351,col 66)",
        "(line 354,col 9)-(line 355,col 35)",
        "(line 358,col 9)-(line 359,col 35)",
        "(line 361,col 9)-(line 361,col 44)",
        "(line 362,col 9)-(line 366,col 9)",
        "(line 369,col 9)-(line 369,col 47)",
        "(line 372,col 9)-(line 373,col 41)",
        "(line 375,col 9)-(line 375,col 54)",
        "(line 376,col 9)-(line 376,col 62)",
        "(line 377,col 9)-(line 393,col 9)",
        "(line 394,col 9)-(line 395,col 28)",
        "(line 396,col 9)-(line 396,col 47)",
        "(line 397,col 9)-(line 413,col 9)",
        "(line 414,col 9)-(line 418,col 9)",
        "(line 419,col 9)-(line 419,col 33)",
        "(line 420,col 9)-(line 420,col 21)",
        "(line 423,col 9)-(line 432,col 9)",
        "(line 434,col 9)-(line 435,col 34)",
        "(line 436,col 9)-(line 439,col 9)",
        "(line 442,col 9)-(line 442,col 64)",
        "(line 443,col 9)-(line 445,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.WaterfallBarRenderer.equals(java.lang.Object)",
      "begin_line": 456,
      "end_line": 484,
      "comment": "\r\n     * Tests an object for equality with this instance.\r\n     *\r\n     * @param obj  the object (\u003ccode\u003enull\u003c/code\u003e permitted).\r\n     *\r\n     * @return A boolean.\r\n     ",
      "child_ranges": [
        "(line 458,col 9)-(line 460,col 9)",
        "(line 461,col 9)-(line 463,col 9)",
        "(line 464,col 9)-(line 466,col 9)",
        "(line 467,col 9)-(line 467,col 63)",
        "(line 468,col 9)-(line 470,col 9)",
        "(line 471,col 9)-(line 473,col 9)",
        "(line 474,col 9)-(line 477,col 9)",
        "(line 478,col 9)-(line 481,col 9)",
        "(line 482,col 9)-(line 482,col 20)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.WaterfallBarRenderer.writeObject(java.io.ObjectOutputStream)",
      "begin_line": 493,
      "end_line": 499,
      "comment": "\r\n     * Provides serialization support.\r\n     *\r\n     * @param stream  the output stream.\r\n     *\r\n     * @throws IOException  if there is an I/O error.\r\n     ",
      "child_ranges": [
        "(line 494,col 9)-(line 494,col 36)",
        "(line 495,col 9)-(line 495,col 63)",
        "(line 496,col 9)-(line 496,col 62)",
        "(line 497,col 9)-(line 497,col 66)",
        "(line 498,col 9)-(line 498,col 66)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.WaterfallBarRenderer.readObject(java.io.ObjectInputStream)",
      "begin_line": 509,
      "end_line": 516,
      "comment": "\r\n     * Provides serialization support.\r\n     *\r\n     * @param stream  the input stream.\r\n     *\r\n     * @throws IOException  if there is an I/O error.\r\n     * @throws ClassNotFoundException  if there is a classpath problem.\r\n     ",
      "child_ranges": [
        "(line 511,col 9)-(line 511,col 35)",
        "(line 512,col 9)-(line 512,col 63)",
        "(line 513,col 9)-(line 513,col 62)",
        "(line 514,col 9)-(line 514,col 66)",
        "(line 515,col 9)-(line 515,col 66)"
      ]
    }
  ]
}