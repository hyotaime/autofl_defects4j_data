{
  "filepath": "/tmp/Chart-4b/tests/org/jfree/chart/plot/junit/CategoryPlotTests.java",
  "nodes": [
    {
      "type": "class_interface",
      "name": "CategoryPlotTests",
      "is_interface": false,
      "parent_types": [
        "TestCase"
      ],
      "begin_line": 109,
      "end_line": 1053,
      "comment": "\n * Tests for the {@link CategoryPlot} class.\n "
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.suite()",
      "begin_line": 116,
      "end_line": 118,
      "comment": "\n     * Returns the tests as a test suite.\n     *\n     * @return The test suite.\n     ",
      "child_ranges": [
        "(line 117,col 9)-(line 117,col 54)"
      ]
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.CategoryPlotTests(java.lang.String)",
      "begin_line": 125,
      "end_line": 127,
      "comment": "\n     * Constructs a new set of tests.\n     *\n     * @param name  the name of the tests.\n     ",
      "child_ranges": [
        "(line 126,col 9)-(line 126,col 20)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testConstructor()",
      "begin_line": 132,
      "end_line": 136,
      "comment": "\n     * Some checks for the constructor.\n     ",
      "child_ranges": [
        "(line 133,col 9)-(line 133,col 47)",
        "(line 134,col 9)-(line 135,col 38)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testAxisRange()",
      "begin_line": 141,
      "end_line": 152,
      "comment": "\n     * A test for a bug reported in the forum.\n     ",
      "child_ranges": [
        "(line 142,col 9)-(line 142,col 71)",
        "(line 143,col 9)-(line 143,col 71)",
        "(line 144,col 9)-(line 144,col 44)",
        "(line 145,col 9)-(line 145,col 44)",
        "(line 146,col 9)-(line 147,col 66)",
        "(line 148,col 9)-(line 148,col 37)",
        "(line 149,col 9)-(line 149,col 56)",
        "(line 150,col 9)-(line 150,col 49)",
        "(line 151,col 9)-(line 151,col 55)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testEquals()",
      "begin_line": 157,
      "end_line": 496,
      "comment": "\n     * Test that the equals() method differentiates all the required fields.\n     ",
      "child_ranges": [
        "(line 159,col 9)-(line 159,col 48)",
        "(line 160,col 9)-(line 160,col 48)",
        "(line 161,col 9)-(line 161,col 40)",
        "(line 162,col 9)-(line 162,col 40)",
        "(line 165,col 9)-(line 165,col 57)",
        "(line 166,col 9)-(line 166,col 41)",
        "(line 167,col 9)-(line 167,col 57)",
        "(line 168,col 9)-(line 168,col 40)",
        "(line 171,col 9)-(line 171,col 73)",
        "(line 172,col 9)-(line 172,col 41)",
        "(line 173,col 9)-(line 173,col 73)",
        "(line 174,col 9)-(line 174,col 40)",
        "(line 177,col 9)-(line 177,col 63)",
        "(line 178,col 9)-(line 178,col 41)",
        "(line 179,col 9)-(line 179,col 63)",
        "(line 180,col 9)-(line 180,col 40)",
        "(line 183,col 9)-(line 183,col 68)",
        "(line 184,col 9)-(line 184,col 41)",
        "(line 185,col 9)-(line 185,col 68)",
        "(line 186,col 9)-(line 186,col 40)",
        "(line 189,col 9)-(line 189,col 63)",
        "(line 190,col 9)-(line 190,col 41)",
        "(line 191,col 9)-(line 191,col 63)",
        "(line 192,col 9)-(line 192,col 40)",
        "(line 195,col 9)-(line 195,col 67)",
        "(line 196,col 9)-(line 196,col 41)",
        "(line 197,col 9)-(line 197,col 67)",
        "(line 198,col 9)-(line 198,col 40)",
        "(line 201,col 9)-(line 201,col 72)",
        "(line 202,col 9)-(line 202,col 41)",
        "(line 203,col 9)-(line 203,col 72)",
        "(line 204,col 9)-(line 204,col 40)",
        "(line 207,col 9)-(line 207,col 57)",
        "(line 208,col 9)-(line 208,col 41)",
        "(line 209,col 9)-(line 209,col 57)",
        "(line 210,col 9)-(line 210,col 40)",
        "(line 213,col 9)-(line 213,col 71)",
        "(line 214,col 9)-(line 214,col 41)",
        "(line 215,col 9)-(line 215,col 71)",
        "(line 216,col 9)-(line 216,col 40)",
        "(line 219,col 9)-(line 219,col 62)",
        "(line 220,col 9)-(line 220,col 41)",
        "(line 221,col 9)-(line 221,col 62)",
        "(line 222,col 9)-(line 222,col 40)",
        "(line 225,col 9)-(line 225,col 66)",
        "(line 226,col 9)-(line 226,col 41)",
        "(line 227,col 9)-(line 227,col 66)",
        "(line 228,col 9)-(line 228,col 40)",
        "(line 231,col 9)-(line 231,col 45)",
        "(line 232,col 9)-(line 232,col 41)",
        "(line 233,col 9)-(line 233,col 45)",
        "(line 234,col 9)-(line 234,col 40)",
        "(line 237,col 9)-(line 237,col 44)",
        "(line 238,col 9)-(line 238,col 41)",
        "(line 239,col 9)-(line 239,col 44)",
        "(line 240,col 9)-(line 240,col 40)",
        "(line 243,col 9)-(line 243,col 46)",
        "(line 244,col 9)-(line 244,col 41)",
        "(line 245,col 9)-(line 245,col 46)",
        "(line 246,col 9)-(line 246,col 40)",
        "(line 249,col 9)-(line 249,col 50)",
        "(line 250,col 9)-(line 250,col 41)",
        "(line 251,col 9)-(line 251,col 50)",
        "(line 252,col 9)-(line 252,col 40)",
        "(line 255,col 9)-(line 255,col 70)",
        "(line 256,col 9)-(line 256,col 41)",
        "(line 257,col 9)-(line 257,col 70)",
        "(line 258,col 9)-(line 258,col 40)",
        "(line 261,col 9)-(line 261,col 60)",
        "(line 262,col 9)-(line 262,col 41)",
        "(line 263,col 9)-(line 263,col 60)",
        "(line 264,col 9)-(line 264,col 40)",
        "(line 267,col 9)-(line 267,col 57)",
        "(line 268,col 9)-(line 268,col 41)",
        "(line 269,col 9)-(line 269,col 57)",
        "(line 270,col 9)-(line 270,col 40)",
        "(line 273,col 9)-(line 273,col 46)",
        "(line 274,col 9)-(line 274,col 41)",
        "(line 275,col 9)-(line 275,col 46)",
        "(line 276,col 9)-(line 276,col 40)",
        "(line 279,col 9)-(line 279,col 60)",
        "(line 280,col 9)-(line 280,col 41)",
        "(line 281,col 9)-(line 281,col 60)",
        "(line 282,col 9)-(line 282,col 40)",
        "(line 285,col 9)-(line 285,col 46)",
        "(line 286,col 9)-(line 286,col 46)",
        "(line 287,col 9)-(line 287,col 41)",
        "(line 288,col 9)-(line 288,col 46)",
        "(line 289,col 9)-(line 289,col 40)",
        "(line 292,col 9)-(line 293,col 43)",
        "(line 294,col 9)-(line 294,col 41)",
        "(line 295,col 9)-(line 296,col 43)",
        "(line 297,col 9)-(line 297,col 40)",
        "(line 300,col 9)-(line 300,col 46)",
        "(line 301,col 9)-(line 301,col 41)",
        "(line 302,col 9)-(line 302,col 46)",
        "(line 303,col 9)-(line 303,col 40)",
        "(line 306,col 9)-(line 306,col 45)",
        "(line 307,col 9)-(line 307,col 41)",
        "(line 308,col 9)-(line 308,col 45)",
        "(line 309,col 9)-(line 309,col 40)",
        "(line 312,col 9)-(line 313,col 43)",
        "(line 314,col 9)-(line 314,col 41)",
        "(line 315,col 9)-(line 316,col 43)",
        "(line 317,col 9)-(line 317,col 40)",
        "(line 320,col 9)-(line 320,col 36)",
        "(line 321,col 9)-(line 321,col 41)",
        "(line 322,col 9)-(line 322,col 36)",
        "(line 323,col 9)-(line 323,col 40)",
        "(line 326,col 9)-(line 326,col 45)",
        "(line 327,col 9)-(line 327,col 41)",
        "(line 328,col 9)-(line 328,col 45)",
        "(line 329,col 9)-(line 329,col 40)",
        "(line 332,col 9)-(line 332,col 44)",
        "(line 333,col 9)-(line 333,col 41)",
        "(line 334,col 9)-(line 334,col 44)",
        "(line 335,col 9)-(line 335,col 40)",
        "(line 338,col 9)-(line 338,col 46)",
        "(line 339,col 9)-(line 339,col 41)",
        "(line 340,col 9)-(line 340,col 46)",
        "(line 341,col 9)-(line 341,col 40)",
        "(line 344,col 9)-(line 345,col 43)",
        "(line 346,col 9)-(line 346,col 41)",
        "(line 347,col 9)-(line 348,col 43)",
        "(line 349,col 9)-(line 349,col 40)",
        "(line 352,col 9)-(line 352,col 51)",
        "(line 353,col 9)-(line 353,col 41)",
        "(line 354,col 9)-(line 354,col 51)",
        "(line 355,col 9)-(line 355,col 40)",
        "(line 358,col 9)-(line 358,col 74)",
        "(line 359,col 9)-(line 359,col 41)",
        "(line 360,col 9)-(line 360,col 74)",
        "(line 361,col 9)-(line 361,col 40)",
        "(line 364,col 9)-(line 364,col 74)",
        "(line 365,col 9)-(line 365,col 41)",
        "(line 366,col 9)-(line 366,col 74)",
        "(line 367,col 9)-(line 367,col 40)",
        "(line 370,col 9)-(line 370,col 69)",
        "(line 371,col 9)-(line 371,col 41)",
        "(line 372,col 9)-(line 372,col 69)",
        "(line 373,col 9)-(line 373,col 40)",
        "(line 375,col 9)-(line 375,col 69)",
        "(line 376,col 9)-(line 376,col 41)",
        "(line 377,col 9)-(line 377,col 69)",
        "(line 378,col 9)-(line 378,col 40)",
        "(line 381,col 9)-(line 381,col 72)",
        "(line 382,col 9)-(line 382,col 41)",
        "(line 383,col 9)-(line 383,col 72)",
        "(line 384,col 9)-(line 384,col 40)",
        "(line 387,col 9)-(line 387,col 72)",
        "(line 388,col 9)-(line 388,col 41)",
        "(line 389,col 9)-(line 389,col 72)",
        "(line 390,col 9)-(line 390,col 40)",
        "(line 393,col 9)-(line 394,col 23)",
        "(line 395,col 9)-(line 395,col 41)",
        "(line 396,col 9)-(line 397,col 23)",
        "(line 398,col 9)-(line 398,col 40)",
        "(line 401,col 9)-(line 401,col 27)",
        "(line 402,col 9)-(line 402,col 41)",
        "(line 403,col 9)-(line 403,col 27)",
        "(line 404,col 9)-(line 404,col 40)",
        "(line 407,col 9)-(line 407,col 55)",
        "(line 408,col 9)-(line 408,col 41)",
        "(line 409,col 9)-(line 409,col 55)",
        "(line 410,col 9)-(line 410,col 40)",
        "(line 413,col 9)-(line 413,col 54)",
        "(line 414,col 9)-(line 414,col 41)",
        "(line 415,col 9)-(line 415,col 54)",
        "(line 416,col 9)-(line 416,col 40)",
        "(line 419,col 9)-(line 419,col 62)",
        "(line 420,col 9)-(line 420,col 41)",
        "(line 421,col 9)-(line 421,col 62)",
        "(line 422,col 9)-(line 422,col 40)",
        "(line 425,col 9)-(line 425,col 43)",
        "(line 426,col 9)-(line 426,col 41)",
        "(line 427,col 9)-(line 427,col 43)",
        "(line 428,col 9)-(line 428,col 40)",
        "(line 431,col 9)-(line 431,col 47)",
        "(line 432,col 9)-(line 432,col 41)",
        "(line 433,col 9)-(line 433,col 47)",
        "(line 434,col 9)-(line 434,col 40)",
        "(line 437,col 9)-(line 437,col 44)",
        "(line 438,col 9)-(line 438,col 41)",
        "(line 439,col 9)-(line 439,col 44)",
        "(line 440,col 9)-(line 440,col 40)",
        "(line 443,col 9)-(line 443,col 46)",
        "(line 444,col 9)-(line 444,col 41)",
        "(line 445,col 9)-(line 445,col 46)",
        "(line 446,col 9)-(line 446,col 40)",
        "(line 449,col 9)-(line 450,col 41)",
        "(line 451,col 9)-(line 451,col 41)",
        "(line 452,col 9)-(line 453,col 41)",
        "(line 454,col 9)-(line 454,col 40)",
        "(line 457,col 9)-(line 457,col 63)",
        "(line 458,col 9)-(line 458,col 41)",
        "(line 459,col 9)-(line 459,col 63)",
        "(line 460,col 9)-(line 460,col 40)",
        "(line 462,col 9)-(line 462,col 50)",
        "(line 463,col 9)-(line 463,col 41)",
        "(line 464,col 9)-(line 464,col 50)",
        "(line 465,col 9)-(line 465,col 40)",
        "(line 467,col 9)-(line 468,col 52)",
        "(line 469,col 9)-(line 469,col 41)",
        "(line 470,col 9)-(line 471,col 41)",
        "(line 472,col 9)-(line 472,col 40)",
        "(line 474,col 9)-(line 474,col 66)",
        "(line 475,col 9)-(line 475,col 41)",
        "(line 476,col 9)-(line 476,col 66)",
        "(line 477,col 9)-(line 477,col 40)",
        "(line 479,col 9)-(line 479,col 79)",
        "(line 480,col 9)-(line 480,col 41)",
        "(line 481,col 9)-(line 481,col 79)",
        "(line 482,col 9)-(line 482,col 40)",
        "(line 484,col 9)-(line 485,col 52)",
        "(line 486,col 9)-(line 486,col 41)",
        "(line 487,col 9)-(line 488,col 41)",
        "(line 489,col 9)-(line 489,col 40)",
        "(line 491,col 9)-(line 491,col 65)",
        "(line 492,col 9)-(line 492,col 41)",
        "(line 493,col 9)-(line 493,col 65)",
        "(line 494,col 9)-(line 494,col 40)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testCloning()",
      "begin_line": 501,
      "end_line": 544,
      "comment": "\n     * Confirm that cloning works.\n     ",
      "child_ranges": [
        "(line 502,col 9)-(line 502,col 45)",
        "(line 503,col 9)-(line 504,col 43)",
        "(line 505,col 9)-(line 505,col 31)",
        "(line 506,col 9)-(line 512,col 9)",
        "(line 513,col 9)-(line 513,col 29)",
        "(line 514,col 9)-(line 514,col 51)",
        "(line 515,col 9)-(line 515,col 34)",
        "(line 518,col 9)-(line 519,col 51)",
        "(line 520,col 9)-(line 520,col 35)",
        "(line 521,col 9)-(line 522,col 51)",
        "(line 523,col 9)-(line 523,col 34)",
        "(line 525,col 9)-(line 525,col 71)",
        "(line 526,col 9)-(line 526,col 35)",
        "(line 527,col 9)-(line 527,col 71)",
        "(line 528,col 9)-(line 528,col 34)",
        "(line 530,col 9)-(line 530,col 71)",
        "(line 531,col 9)-(line 531,col 35)",
        "(line 532,col 9)-(line 532,col 71)",
        "(line 533,col 9)-(line 533,col 34)",
        "(line 535,col 9)-(line 535,col 66)",
        "(line 536,col 9)-(line 536,col 35)",
        "(line 537,col 9)-(line 537,col 66)",
        "(line 538,col 9)-(line 538,col 34)",
        "(line 540,col 9)-(line 540,col 66)",
        "(line 541,col 9)-(line 541,col 35)",
        "(line 542,col 9)-(line 542,col 66)",
        "(line 543,col 9)-(line 543,col 34)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testCloning2()",
      "begin_line": 549,
      "end_line": 575,
      "comment": "\n     * Some more cloning checks.\n     ",
      "child_ranges": [
        "(line 550,col 9)-(line 550,col 40)",
        "(line 551,col 9)-(line 551,col 40)",
        "(line 552,col 9)-(line 552,col 45)",
        "(line 553,col 9)-(line 553,col 40)",
        "(line 554,col 9)-(line 554,col 39)",
        "(line 555,col 9)-(line 555,col 31)",
        "(line 556,col 9)-(line 561,col 9)",
        "(line 562,col 9)-(line 562,col 29)",
        "(line 563,col 9)-(line 563,col 51)",
        "(line 564,col 9)-(line 564,col 34)",
        "(line 566,col 9)-(line 566,col 28)",
        "(line 567,col 9)-(line 567,col 35)",
        "(line 568,col 9)-(line 568,col 53)",
        "(line 569,col 9)-(line 569,col 34)",
        "(line 571,col 9)-(line 571,col 28)",
        "(line 572,col 9)-(line 572,col 35)",
        "(line 573,col 9)-(line 573,col 52)",
        "(line 574,col 9)-(line 574,col 34)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testCloning3()",
      "begin_line": 580,
      "end_line": 607,
      "comment": "\n     * Some more cloning checks.\n     ",
      "child_ranges": [
        "(line 581,col 9)-(line 581,col 61)",
        "(line 582,col 9)-(line 582,col 45)",
        "(line 583,col 9)-(line 583,col 35)",
        "(line 584,col 9)-(line 584,col 31)",
        "(line 585,col 9)-(line 590,col 9)",
        "(line 591,col 9)-(line 591,col 29)",
        "(line 592,col 9)-(line 592,col 51)",
        "(line 593,col 9)-(line 593,col 34)",
        "(line 595,col 9)-(line 599,col 30)",
        "(line 600,col 9)-(line 600,col 35)",
        "(line 601,col 9)-(line 605,col 30)",
        "(line 606,col 9)-(line 606,col 34)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testSerialization()",
      "begin_line": 612,
      "end_line": 637,
      "comment": "\n     * Serialize an instance, restore it, and check for equality.\n     ",
      "child_ranges": [
        "(line 614,col 9)-(line 614,col 70)",
        "(line 615,col 9)-(line 615,col 61)",
        "(line 616,col 9)-(line 616,col 55)",
        "(line 617,col 9)-(line 617,col 49)",
        "(line 618,col 9)-(line 619,col 26)",
        "(line 620,col 9)-(line 620,col 54)",
        "(line 621,col 9)-(line 621,col 31)",
        "(line 622,col 9)-(line 635,col 9)",
        "(line 636,col 9)-(line 636,col 34)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testSerialization2()",
      "begin_line": 642,
      "end_line": 667,
      "comment": "\n     * Serialize an instance, restore it, and check for equality.\n     ",
      "child_ranges": [
        "(line 643,col 9)-(line 643,col 67)",
        "(line 644,col 9)-(line 644,col 61)",
        "(line 645,col 9)-(line 645,col 55)",
        "(line 646,col 9)-(line 646,col 49)",
        "(line 647,col 9)-(line 648,col 26)",
        "(line 649,col 9)-(line 649,col 52)",
        "(line 650,col 9)-(line 650,col 31)",
        "(line 652,col 9)-(line 665,col 9)",
        "(line 666,col 9)-(line 666,col 29)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testSerialization3()",
      "begin_line": 672,
      "end_line": 712,
      "comment": "\n     * Serialize an instance, restore it, and check for equality.\n     ",
      "child_ranges": [
        "(line 673,col 9)-(line 673,col 70)",
        "(line 674,col 9)-(line 683,col 10)",
        "(line 684,col 9)-(line 684,col 33)",
        "(line 687,col 9)-(line 700,col 9)",
        "(line 703,col 9)-(line 703,col 30)",
        "(line 704,col 9)-(line 710,col 9)",
        "(line 711,col 9)-(line 711,col 27)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testSerialization4()",
      "begin_line": 717,
      "end_line": 761,
      "comment": "\n     * This test ensures that a plot with markers is serialized correctly.\n     ",
      "child_ranges": [
        "(line 718,col 9)-(line 718,col 70)",
        "(line 719,col 9)-(line 728,col 10)",
        "(line 729,col 9)-(line 729,col 59)",
        "(line 730,col 9)-(line 730,col 68)",
        "(line 731,col 9)-(line 731,col 76)",
        "(line 732,col 9)-(line 732,col 33)",
        "(line 735,col 9)-(line 748,col 9)",
        "(line 749,col 9)-(line 749,col 36)",
        "(line 752,col 9)-(line 752,col 30)",
        "(line 753,col 9)-(line 759,col 9)",
        "(line 760,col 9)-(line 760,col 27)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testSerialization5()",
      "begin_line": 768,
      "end_line": 819,
      "comment": "\n     * Tests a bug where the plot is no longer registered as a listener\n     * with the dataset(s) and axes after deserialization.  See patch 1209475\n     * at SourceForge.\n     ",
      "child_ranges": [
        "(line 769,col 9)-(line 769,col 71)",
        "(line 770,col 9)-(line 770,col 64)",
        "(line 771,col 9)-(line 771,col 58)",
        "(line 772,col 9)-(line 772,col 50)",
        "(line 773,col 9)-(line 774,col 27)",
        "(line 775,col 9)-(line 775,col 64)",
        "(line 776,col 9)-(line 776,col 58)",
        "(line 777,col 9)-(line 777,col 50)",
        "(line 778,col 9)-(line 778,col 71)",
        "(line 779,col 9)-(line 779,col 35)",
        "(line 780,col 9)-(line 780,col 41)",
        "(line 781,col 9)-(line 781,col 39)",
        "(line 782,col 9)-(line 782,col 37)",
        "(line 783,col 9)-(line 783,col 31)",
        "(line 784,col 9)-(line 796,col 9)",
        "(line 797,col 9)-(line 797,col 29)",
        "(line 801,col 9)-(line 801,col 55)",
        "(line 802,col 9)-(line 802,col 64)",
        "(line 803,col 9)-(line 804,col 60)",
        "(line 805,col 9)-(line 805,col 64)",
        "(line 806,col 9)-(line 806,col 55)",
        "(line 807,col 9)-(line 807,col 64)",
        "(line 808,col 9)-(line 809,col 60)",
        "(line 810,col 9)-(line 810,col 65)",
        "(line 811,col 9)-(line 811,col 45)",
        "(line 812,col 9)-(line 812,col 48)",
        "(line 813,col 9)-(line 813,col 47)",
        "(line 814,col 9)-(line 814,col 46)",
        "(line 815,col 9)-(line 815,col 45)",
        "(line 816,col 9)-(line 816,col 48)",
        "(line 817,col 9)-(line 817,col 47)",
        "(line 818,col 9)-(line 818,col 46)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testSetRenderer()",
      "begin_line": 825,
      "end_line": 835,
      "comment": "\n     * A test for a bug where setting the renderer doesn\u0027t register the plot\n     * as a RendererChangeListener.\n     ",
      "child_ranges": [
        "(line 826,col 9)-(line 826,col 47)",
        "(line 827,col 9)-(line 827,col 67)",
        "(line 828,col 9)-(line 828,col 35)",
        "(line 831,col 9)-(line 831,col 67)",
        "(line 832,col 9)-(line 832,col 41)",
        "(line 833,col 9)-(line 833,col 48)",
        "(line 834,col 9)-(line 834,col 48)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.test1169972()",
      "begin_line": 840,
      "end_line": 847,
      "comment": "\n     * A test for bug report 1169972.\n     ",
      "child_ranges": [
        "(line 841,col 9)-(line 841,col 69)",
        "(line 842,col 9)-(line 842,col 50)",
        "(line 843,col 9)-(line 843,col 47)",
        "(line 844,col 9)-(line 844,col 44)",
        "(line 845,col 9)-(line 845,col 54)",
        "(line 846,col 9)-(line 846,col 33)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testAddDomainMarker()",
      "begin_line": 852,
      "end_line": 862,
      "comment": "\n     * Some tests for the addDomainMarker() method(s).\n     ",
      "child_ranges": [
        "(line 853,col 9)-(line 853,col 47)",
        "(line 854,col 9)-(line 854,col 52)",
        "(line 855,col 9)-(line 855,col 32)",
        "(line 856,col 9)-(line 857,col 45)",
        "(line 858,col 9)-(line 858,col 45)",
        "(line 859,col 9)-(line 859,col 34)",
        "(line 860,col 9)-(line 860,col 78)",
        "(line 861,col 9)-(line 861,col 46)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testAddRangeMarker()",
      "begin_line": 867,
      "end_line": 877,
      "comment": "\n     * Some tests for the addRangeMarker() method(s).\n     ",
      "child_ranges": [
        "(line 868,col 9)-(line 868,col 47)",
        "(line 869,col 9)-(line 869,col 40)",
        "(line 870,col 9)-(line 870,col 31)",
        "(line 871,col 9)-(line 872,col 45)",
        "(line 873,col 9)-(line 873,col 45)",
        "(line 874,col 9)-(line 874,col 33)",
        "(line 875,col 9)-(line 875,col 78)",
        "(line 876,col 9)-(line 876,col 46)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.test1654215()",
      "begin_line": 883,
      "end_line": 903,
      "comment": "\n     * A test for bug 1654215 (where a renderer is added to the plot without\n     * a corresponding dataset and it throws an exception at drawing time).\n     ",
      "child_ranges": [
        "(line 884,col 9)-(line 884,col 70)",
        "(line 885,col 9)-(line 886,col 71)",
        "(line 887,col 9)-(line 887,col 59)",
        "(line 888,col 9)-(line 888,col 56)",
        "(line 889,col 9)-(line 889,col 32)",
        "(line 890,col 9)-(line 901,col 9)",
        "(line 902,col 9)-(line 902,col 28)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testGetDomainAxisIndex()",
      "begin_line": 908,
      "end_line": 927,
      "comment": "\n     * Some checks for the getDomainAxisIndex() method.\n     ",
      "child_ranges": [
        "(line 909,col 9)-(line 909,col 58)",
        "(line 910,col 9)-(line 910,col 58)",
        "(line 911,col 9)-(line 911,col 53)",
        "(line 912,col 9)-(line 913,col 22)",
        "(line 914,col 9)-(line 914,col 62)",
        "(line 915,col 9)-(line 915,col 63)",
        "(line 916,col 9)-(line 916,col 43)",
        "(line 917,col 9)-(line 917,col 62)",
        "(line 918,col 9)-(line 918,col 74)",
        "(line 919,col 9)-(line 919,col 29)",
        "(line 920,col 9)-(line 925,col 9)",
        "(line 926,col 9)-(line 926,col 25)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testGetRangeAxisIndex()",
      "begin_line": 932,
      "end_line": 951,
      "comment": "\n     * Some checks for the getRangeAxisIndex() method.\n     ",
      "child_ranges": [
        "(line 933,col 9)-(line 933,col 58)",
        "(line 934,col 9)-(line 934,col 53)",
        "(line 935,col 9)-(line 935,col 53)",
        "(line 936,col 9)-(line 937,col 22)",
        "(line 938,col 9)-(line 938,col 60)",
        "(line 939,col 9)-(line 939,col 61)",
        "(line 940,col 9)-(line 940,col 41)",
        "(line 941,col 9)-(line 941,col 60)",
        "(line 942,col 9)-(line 942,col 71)",
        "(line 943,col 9)-(line 943,col 29)",
        "(line 944,col 9)-(line 949,col 9)",
        "(line 950,col 9)-(line 950,col 25)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testRemoveDomainMarker()",
      "begin_line": 957,
      "end_line": 960,
      "comment": "\n     * Check that removing a marker that isn\u0027t assigned to the plot returns\n     * false.\n     ",
      "child_ranges": [
        "(line 958,col 9)-(line 958,col 47)",
        "(line 959,col 9)-(line 959,col 79)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testRemoveRangeMarker()",
      "begin_line": 966,
      "end_line": 969,
      "comment": "\n     * Check that removing a marker that isn\u0027t assigned to the plot returns\n     * false.\n     ",
      "child_ranges": [
        "(line 967,col 9)-(line 967,col 47)",
        "(line 968,col 9)-(line 968,col 66)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testGetDomainAxisForDataset()",
      "begin_line": 974,
      "end_line": 1010,
      "comment": "\n     * Some tests for the getDomainAxisForDataset() method.\n     ",
      "child_ranges": [
        "(line 975,col 9)-(line 975,col 63)",
        "(line 976,col 9)-(line 976,col 51)",
        "(line 977,col 9)-(line 977,col 47)",
        "(line 978,col 9)-(line 978,col 58)",
        "(line 979,col 9)-(line 979,col 78)",
        "(line 980,col 9)-(line 980,col 61)",
        "(line 983,col 9)-(line 983,col 29)",
        "(line 984,col 9)-(line 989,col 9)",
        "(line 990,col 9)-(line 990,col 25)",
        "(line 994,col 9)-(line 994,col 53)",
        "(line 995,col 9)-(line 995,col 38)",
        "(line 996,col 9)-(line 996,col 61)",
        "(line 998,col 9)-(line 998,col 42)",
        "(line 999,col 9)-(line 999,col 62)",
        "(line 1001,col 9)-(line 1002,col 33)",
        "(line 1003,col 9)-(line 1003,col 52)",
        "(line 1004,col 9)-(line 1004,col 61)",
        "(line 1006,col 9)-(line 1007,col 33)",
        "(line 1008,col 9)-(line 1008,col 52)",
        "(line 1009,col 9)-(line 1009,col 62)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.plot.junit.CategoryPlotTests.testGetRangeAxisForDataset()",
      "begin_line": 1015,
      "end_line": 1051,
      "comment": "\n     * Some tests for the getRangeAxisForDataset() method.\n     ",
      "child_ranges": [
        "(line 1016,col 9)-(line 1016,col 63)",
        "(line 1017,col 9)-(line 1017,col 51)",
        "(line 1018,col 9)-(line 1018,col 47)",
        "(line 1019,col 9)-(line 1019,col 74)",
        "(line 1020,col 9)-(line 1020,col 78)",
        "(line 1021,col 9)-(line 1021,col 60)",
        "(line 1024,col 9)-(line 1024,col 29)",
        "(line 1025,col 9)-(line 1030,col 9)",
        "(line 1031,col 9)-(line 1031,col 25)",
        "(line 1035,col 9)-(line 1035,col 49)",
        "(line 1036,col 9)-(line 1036,col 37)",
        "(line 1037,col 9)-(line 1037,col 60)",
        "(line 1039,col 9)-(line 1039,col 41)",
        "(line 1040,col 9)-(line 1040,col 61)",
        "(line 1042,col 9)-(line 1043,col 33)",
        "(line 1044,col 9)-(line 1044,col 51)",
        "(line 1045,col 9)-(line 1045,col 60)",
        "(line 1047,col 9)-(line 1048,col 33)",
        "(line 1049,col 9)-(line 1049,col 51)",
        "(line 1050,col 9)-(line 1050,col 61)"
      ]
    }
  ]
}