{
  "filepath": "/tmp/Chart-4b/source/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java",
  "nodes": [
    {
      "type": "class_interface",
      "name": "ClusteredXYBarRenderer",
      "is_interface": false,
      "parent_types": [
        "org.jfree.chart.renderer.xy.XYBarRenderer",
        "java.lang.Cloneable",
        "org.jfree.chart.util.PublicCloneable",
        "java.io.Serializable"
      ],
      "begin_line": 101,
      "end_line": 373,
      "comment": "\r\n * An extension of {@link XYBarRenderer} that displays bars for different\r\n * series values at the same x next to each other. The assumption here is\r\n * that for each x (time or else) there is a y value for each series. If\r\n * this is not the case, there will be spaces between bars for a given x.\r\n * The example shown here is generated by the\r\n * \u003ccode\u003eClusteredXYBarRendererDemo1.java\u003c/code\u003e program included in the\r\n * JFreeChart demo collection:\r\n * \u003cbr\u003e\u003cbr\u003e\r\n * \u003cimg src\u003d\"../../../../../images/ClusteredXYBarRendererSample.png\"\r\n * alt\u003d\"ClusteredXYBarRendererSample.png\" /\u003e\r\n * \u003cP\u003e\r\n * This renderer does not include code to calculate the crosshair point for the\r\n * plot.\r\n "
    },
    {
      "type": "field",
      "varNames": [
        "serialVersionUID"
      ],
      "begin_line": 105,
      "end_line": 105,
      "comment": " For serialization. "
    },
    {
      "type": "field",
      "varNames": [
        "centerBarAtStartValue"
      ],
      "begin_line": 108,
      "end_line": 108,
      "comment": " Determines whether bar center should be interval start. "
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.ClusteredXYBarRenderer()",
      "begin_line": 113,
      "end_line": 115,
      "comment": "\r\n     * Default constructor. Bar margin is set to 0.0.\r\n     ",
      "child_ranges": [
        "(line 114,col 9)-(line 114,col 25)"
      ]
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.ClusteredXYBarRenderer(double, boolean)",
      "begin_line": 124,
      "end_line": 128,
      "comment": "\r\n     * Constructs a new XY clustered bar renderer.\r\n     *\r\n     * @param margin  the percentage amount to trim from the width of each bar.\r\n     * @param centerBarAtStartValue  if true, bars will be centered on the\r\n     *         start of the time period.\r\n     ",
      "child_ranges": [
        "(line 126,col 9)-(line 126,col 22)",
        "(line 127,col 9)-(line 127,col 59)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.getPassCount()",
      "begin_line": 137,
      "end_line": 139,
      "comment": "\r\n     * Returns the number of passes through the dataset that this renderer\r\n     * requires.  In this case, two passes are required, the first for drawing\r\n     * the shadows (if visible), and the second for drawing the bars.\r\n     *\r\n     * @return \u003ccode\u003e2\u003c/code\u003e.\r\n     ",
      "child_ranges": [
        "(line 138,col 9)-(line 138,col 17)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds(org.jfree.data.xy.XYDataset)",
      "begin_line": 148,
      "end_line": 159,
      "comment": "\r\n     * Returns the x-value bounds for the specified dataset.\r\n     *\r\n     * @param dataset  the dataset (\u003ccode\u003enull\u003c/code\u003e permitted).\r\n     *\r\n     * @return The bounds (possibly \u003ccode\u003enull\u003c/code\u003e).\r\n     ",
      "child_ranges": [
        "(line 149,col 9)-(line 151,col 9)",
        "(line 153,col 9)-(line 158,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset(org.jfree.data.xy.IntervalXYDataset)",
      "begin_line": 170,
      "end_line": 198,
      "comment": "\r\n     * Iterates over the items in an {@link IntervalXYDataset} to find\r\n     * the range of x-values including the interval OFFSET so that it centers\r\n     * the interval around the start value.\r\n     *\r\n     * @param dataset  the dataset (\u003ccode\u003enull\u003c/code\u003e not permitted).\r\n     *\r\n     * @return The range (possibly \u003ccode\u003enull\u003c/code\u003e).\r\n     ",
      "child_ranges": [
        "(line 171,col 9)-(line 173,col 9)",
        "(line 174,col 9)-(line 174,col 50)",
        "(line 175,col 9)-(line 175,col 50)",
        "(line 176,col 9)-(line 176,col 51)",
        "(line 177,col 9)-(line 177,col 22)",
        "(line 178,col 9)-(line 178,col 22)",
        "(line 179,col 9)-(line 190,col 9)",
        "(line 192,col 9)-(line 197,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.drawItem(java.awt.Graphics2D, org.jfree.chart.renderer.xy.XYItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.XYPlot, org.jfree.chart.axis.ValueAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.xy.XYDataset, int, int, boolean, int)",
      "begin_line": 220,
      "end_line": 336,
      "comment": "\r\n     * Draws the visual representation of a single data item. This method\r\n     * is mostly copied from the superclass, the change is that in the\r\n     * calculated space for a singe bar we draw bars for each series next to\r\n     * each other. The width of each bar is the available width divided by\r\n     * the number of series. Bars for each series are drawn in order left to\r\n     * right.\r\n     *\r\n     * @param g2  the graphics device.\r\n     * @param state  the renderer state.\r\n     * @param dataArea  the area within which the plot is being drawn.\r\n     * @param plot  the plot (can be used to obtain standard color\r\n     *              information etc).\r\n     * @param domainAxis  the domain axis.\r\n     * @param rangeAxis  the range axis.\r\n     * @param dataset  the dataset.\r\n     * @param series  the series index.\r\n     * @param item  the item index.\r\n     * @param pass  the pass index.\r\n     ",
      "child_ranges": [
        "(line 225,col 9)-(line 225,col 72)",
        "(line 227,col 9)-(line 227,col 18)",
        "(line 228,col 9)-(line 228,col 18)",
        "(line 229,col 9)-(line 236,col 9)",
        "(line 237,col 9)-(line 239,col 9)",
        "(line 241,col 9)-(line 242,col 41)",
        "(line 243,col 9)-(line 244,col 41)",
        "(line 246,col 9)-(line 246,col 63)",
        "(line 247,col 9)-(line 247,col 65)",
        "(line 248,col 9)-(line 248,col 75)",
        "(line 250,col 9)-(line 250,col 63)",
        "(line 251,col 9)-(line 251,col 75)",
        "(line 253,col 9)-(line 253,col 37)",
        "(line 254,col 9)-(line 254,col 27)",
        "(line 255,col 9)-(line 257,col 9)",
        "(line 258,col 9)-(line 258,col 31)",
        "(line 259,col 9)-(line 263,col 9)",
        "(line 265,col 9)-(line 265,col 47)",
        "(line 267,col 9)-(line 267,col 60)",
        "(line 269,col 9)-(line 269,col 49)",
        "(line 270,col 9)-(line 270,col 54)",
        "(line 272,col 9)-(line 272,col 31)",
        "(line 273,col 9)-(line 290,col 9)",
        "(line 291,col 9)-(line 291,col 38)",
        "(line 292,col 9)-(line 292,col 50)",
        "(line 293,col 9)-(line 293,col 30)",
        "(line 294,col 9)-(line 309,col 9)",
        "(line 310,col 9)-(line 313,col 9)",
        "(line 314,col 9)-(line 334,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.equals(java.lang.Object)",
      "begin_line": 348,
      "end_line": 360,
      "comment": "\r\n     * Tests this renderer for equality with an arbitrary object, returning\r\n     * \u003ccode\u003etrue\u003c/code\u003e if \u003ccode\u003eobj\u003c/code\u003e is a\r\n     * \u003ccode\u003eClusteredXYBarRenderer\u003c/code\u003e with the same settings as this\r\n     * renderer, and \u003ccode\u003efalse\u003c/code\u003e otherwise.\r\n     *\r\n     * @param obj  the object (\u003ccode\u003enull\u003c/code\u003e permitted).\r\n     *\r\n     * @return A boolean.\r\n     ",
      "child_ranges": [
        "(line 349,col 9)-(line 351,col 9)",
        "(line 352,col 9)-(line 354,col 9)",
        "(line 355,col 9)-(line 355,col 67)",
        "(line 356,col 9)-(line 358,col 9)",
        "(line 359,col 9)-(line 359,col 33)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.clone()",
      "begin_line": 369,
      "end_line": 371,
      "comment": "\r\n     * Returns a clone of the renderer.\r\n     *\r\n     * @return A clone.\r\n     *\r\n     * @throws CloneNotSupportedException  if the renderer cannot be cloned.\r\n     ",
      "child_ranges": [
        "(line 370,col 9)-(line 370,col 29)"
      ]
    }
  ]
}