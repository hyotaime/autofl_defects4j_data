{
  "filepath": "/tmp/Chart-4b/source/org/jfree/chart/renderer/category/GanttRenderer.java",
  "nodes": [
    {
      "type": "class_interface",
      "name": "GanttRenderer",
      "is_interface": false,
      "parent_types": [
        "org.jfree.chart.renderer.category.IntervalBarRenderer",
        "java.io.Serializable"
      ],
      "begin_line": 89,
      "end_line": 631,
      "comment": "\r\n * A renderer for simple Gantt charts.  The example shown\r\n * here is generated by the \u003ccode\u003eGanttDemo1.java\u003c/code\u003e program\r\n * included in the JFreeChart Demo Collection:\r\n * \u003cbr\u003e\u003cbr\u003e\r\n * \u003cimg src\u003d\"../../../../../images/GanttRendererSample.png\"\r\n * alt\u003d\"GanttRendererSample.png\" /\u003e\r\n "
    },
    {
      "type": "field",
      "varNames": [
        "serialVersionUID"
      ],
      "begin_line": 93,
      "end_line": 93,
      "comment": " For serialization. "
    },
    {
      "type": "field",
      "varNames": [
        "completePaint"
      ],
      "begin_line": 96,
      "end_line": 96,
      "comment": " The paint for displaying the percentage complete. "
    },
    {
      "type": "field",
      "varNames": [
        "incompletePaint"
      ],
      "begin_line": 99,
      "end_line": 99,
      "comment": " The paint for displaying the incomplete part of a task. "
    },
    {
      "type": "field",
      "varNames": [
        "startPercent"
      ],
      "begin_line": 105,
      "end_line": 105,
      "comment": "\r\n     * Controls the starting edge of the progress indicator (expressed as a\r\n     * percentage of the overall bar width).\r\n     "
    },
    {
      "type": "field",
      "varNames": [
        "endPercent"
      ],
      "begin_line": 111,
      "end_line": 111,
      "comment": "\r\n     * Controls the ending edge of the progress indicator (expressed as a\r\n     * percentage of the overall bar width).\r\n     "
    },
    {
      "type": "constructor",
      "signature": "org.jfree.chart.renderer.category.GanttRenderer.GanttRenderer()",
      "begin_line": 116,
      "end_line": 123,
      "comment": "\r\n     * Creates a new renderer.\r\n     ",
      "child_ranges": [
        "(line 117,col 9)-(line 117,col 16)",
        "(line 118,col 9)-(line 118,col 37)",
        "(line 119,col 9)-(line 119,col 41)",
        "(line 120,col 9)-(line 120,col 41)",
        "(line 121,col 9)-(line 121,col 33)",
        "(line 122,col 9)-(line 122,col 31)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.GanttRenderer.getCompletePaint()",
      "begin_line": 132,
      "end_line": 134,
      "comment": "\r\n     * Returns the paint used to show the percentage complete.\r\n     *\r\n     * @return The paint (never \u003ccode\u003enull\u003c/code\u003e.\r\n     *\r\n     * @see #setCompletePaint(Paint)\r\n     ",
      "child_ranges": [
        "(line 133,col 9)-(line 133,col 34)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.GanttRenderer.setCompletePaint(java.awt.Paint)",
      "begin_line": 144,
      "end_line": 150,
      "comment": "\r\n     * Sets the paint used to show the percentage complete and sends a\r\n     * {@link RendererChangeEvent} to all registered listeners.\r\n     *\r\n     * @param paint  the paint (\u003ccode\u003enull\u003c/code\u003e not permitted).\r\n     *\r\n     * @see #getCompletePaint()\r\n     ",
      "child_ranges": [
        "(line 145,col 9)-(line 147,col 9)",
        "(line 148,col 9)-(line 148,col 35)",
        "(line 149,col 9)-(line 149,col 26)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.GanttRenderer.getIncompletePaint()",
      "begin_line": 159,
      "end_line": 161,
      "comment": "\r\n     * Returns the paint used to show the percentage incomplete.\r\n     *\r\n     * @return The paint (never \u003ccode\u003enull\u003c/code\u003e).\r\n     *\r\n     * @see #setCompletePaint(Paint)\r\n     ",
      "child_ranges": [
        "(line 160,col 9)-(line 160,col 36)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.GanttRenderer.setIncompletePaint(java.awt.Paint)",
      "begin_line": 171,
      "end_line": 177,
      "comment": "\r\n     * Sets the paint used to show the percentage incomplete and sends a\r\n     * {@link RendererChangeEvent} to all registered listeners.\r\n     *\r\n     * @param paint  the paint (\u003ccode\u003enull\u003c/code\u003e not permitted).\r\n     *\r\n     * @see #getIncompletePaint()\r\n     ",
      "child_ranges": [
        "(line 172,col 9)-(line 174,col 9)",
        "(line 175,col 9)-(line 175,col 37)",
        "(line 176,col 9)-(line 176,col 26)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.GanttRenderer.getStartPercent()",
      "begin_line": 187,
      "end_line": 189,
      "comment": "\r\n     * Returns the position of the start of the progress indicator, as a\r\n     * percentage of the bar width.\r\n     *\r\n     * @return The start percent.\r\n     *\r\n     * @see #setStartPercent(double)\r\n     ",
      "child_ranges": [
        "(line 188,col 9)-(line 188,col 33)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.GanttRenderer.setStartPercent(double)",
      "begin_line": 200,
      "end_line": 203,
      "comment": "\r\n     * Sets the position of the start of the progress indicator, as a\r\n     * percentage of the bar width, and sends a {@link RendererChangeEvent} to\r\n     * all registered listeners.\r\n     *\r\n     * @param percent  the percent.\r\n     *\r\n     * @see #getStartPercent()\r\n     ",
      "child_ranges": [
        "(line 201,col 9)-(line 201,col 36)",
        "(line 202,col 9)-(line 202,col 26)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.GanttRenderer.getEndPercent()",
      "begin_line": 213,
      "end_line": 215,
      "comment": "\r\n     * Returns the position of the end of the progress indicator, as a\r\n     * percentage of the bar width.\r\n     *\r\n     * @return The end percent.\r\n     *\r\n     * @see #setEndPercent(double)\r\n     ",
      "child_ranges": [
        "(line 214,col 9)-(line 214,col 31)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.GanttRenderer.setEndPercent(double)",
      "begin_line": 226,
      "end_line": 229,
      "comment": "\r\n     * Sets the position of the end of the progress indicator, as a percentage\r\n     * of the bar width, and sends a {@link RendererChangeEvent} to all\r\n     * registered listeners.\r\n     *\r\n     * @param percent  the percent.\r\n     *\r\n     * @see #getEndPercent()\r\n     ",
      "child_ranges": [
        "(line 227,col 9)-(line 227,col 34)",
        "(line 228,col 9)-(line 228,col 26)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.GanttRenderer.drawItem(java.awt.Graphics2D, org.jfree.chart.renderer.category.CategoryItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.CategoryPlot, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.category.CategoryDataset, int, int, boolean, int)",
      "begin_line": 245,
      "end_line": 260,
      "comment": "\r\n     * Draws the bar for a single (series, category) data item.\r\n     *\r\n     * @param g2  the graphics device.\r\n     * @param state  the renderer state.\r\n     * @param dataArea  the data area.\r\n     * @param plot  the plot.\r\n     * @param domainAxis  the domain axis.\r\n     * @param rangeAxis  the range axis.\r\n     * @param dataset  the dataset.\r\n     * @param row  the row index (zero-based).\r\n     * @param column  the column index (zero-based).\r\n     * @param pass  the pass index.\r\n     ",
      "child_ranges": [
        "(line 250,col 10)-(line 258,col 10)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.GanttRenderer.drawTasks(java.awt.Graphics2D, org.jfree.chart.renderer.category.CategoryItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.CategoryPlot, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.gantt.GanttCategoryDataset, int, int, boolean)",
      "begin_line": 276,
      "end_line": 405,
      "comment": "\r\n     * Draws the tasks/subtasks for one item.\r\n     *\r\n     * @param g2  the graphics device.\r\n     * @param state  the renderer state.\r\n     * @param dataArea  the data plot area.\r\n     * @param plot  the plot.\r\n     * @param domainAxis  the domain axis.\r\n     * @param rangeAxis  the range axis.\r\n     * @param dataset  the data.\r\n     * @param row  the row index (zero-based).\r\n     * @param column  the column index (zero-based).\r\n     * @param selected  is the item selected?\r\n     ",
      "child_ranges": [
        "(line 281,col 9)-(line 281,col 61)",
        "(line 282,col 9)-(line 285,col 9)",
        "(line 287,col 9)-(line 287,col 60)",
        "(line 288,col 9)-(line 404,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.GanttRenderer.drawTask(java.awt.Graphics2D, org.jfree.chart.renderer.category.CategoryItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.CategoryPlot, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.gantt.GanttCategoryDataset, int, int, boolean)",
      "begin_line": 423,
      "end_line": 550,
      "comment": "\r\n     * Draws a single task.\r\n     *\r\n     * @param g2  the graphics device.\r\n     * @param state  the renderer state.\r\n     * @param dataArea  the data plot area.\r\n     * @param plot  the plot.\r\n     * @param domainAxis  the domain axis.\r\n     * @param rangeAxis  the range axis.\r\n     * @param dataset  the data.\r\n     * @param row  the row index (zero-based).\r\n     * @param column  the column index (zero-based).\r\n     * @param selected  is the item selected?\r\n     *\r\n     * @since 1.2.0\r\n     ",
      "child_ranges": [
        "(line 428,col 9)-(line 428,col 60)",
        "(line 429,col 9)-(line 429,col 66)",
        "(line 432,col 9)-(line 432,col 57)",
        "(line 433,col 9)-(line 435,col 9)",
        "(line 436,col 9)-(line 437,col 45)",
        "(line 440,col 9)-(line 440,col 59)",
        "(line 441,col 9)-(line 443,col 9)",
        "(line 444,col 9)-(line 445,col 45)",
        "(line 447,col 9)-(line 454,col 9)",
        "(line 456,col 9)-(line 457,col 48)",
        "(line 458,col 9)-(line 458,col 49)",
        "(line 459,col 9)-(line 459,col 66)",
        "(line 461,col 9)-(line 461,col 31)",
        "(line 462,col 9)-(line 462,col 37)",
        "(line 463,col 9)-(line 472,col 9)",
        "(line 474,col 9)-(line 474,col 39)",
        "(line 475,col 9)-(line 475,col 41)",
        "(line 476,col 9)-(line 476,col 65)",
        "(line 477,col 9)-(line 477,col 41)",
        "(line 478,col 9)-(line 478,col 37)",
        "(line 479,col 9)-(line 498,col 9)",
        "(line 500,col 9)-(line 503,col 9)",
        "(line 504,col 9)-(line 504,col 80)",
        "(line 506,col 9)-(line 509,col 9)",
        "(line 510,col 9)-(line 513,col 9)",
        "(line 516,col 9)-(line 525,col 9)",
        "(line 527,col 9)-(line 528,col 34)",
        "(line 529,col 9)-(line 532,col 9)",
        "(line 535,col 9)-(line 535,col 49)",
        "(line 536,col 9)-(line 536,col 60)",
        "(line 537,col 9)-(line 537,col 51)",
        "(line 538,col 9)-(line 539,col 78)",
        "(line 540,col 9)-(line 543,col 29)",
        "(line 546,col 9)-(line 546,col 64)",
        "(line 547,col 9)-(line 549,col 9)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.GanttRenderer.getItemMiddle(java.lang.Comparable, java.lang.Comparable, org.jfree.data.category.CategoryDataset, org.jfree.chart.axis.CategoryAxis, java.awt.geom.Rectangle2D, org.jfree.chart.util.RectangleEdge)",
      "begin_line": 566,
      "end_line": 571,
      "comment": "\r\n     * Returns the Java2D coordinate for the middle of the specified data item.\r\n     *\r\n     * @param rowKey  the row key.\r\n     * @param columnKey  the column key.\r\n     * @param dataset  the dataset.\r\n     * @param axis  the axis.\r\n     * @param area  the drawing area.\r\n     * @param edge  the edge along which the axis lies.\r\n     *\r\n     * @return The Java2D coordinate.\r\n     *\r\n     * @since 1.0.11\r\n     ",
      "child_ranges": [
        "(line 569,col 9)-(line 570,col 45)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.GanttRenderer.equals(java.lang.Object)",
      "begin_line": 580,
      "end_line": 601,
      "comment": "\r\n     * Tests this renderer for equality with an arbitrary object.\r\n     *\r\n     * @param obj  the object (\u003ccode\u003enull\u003c/code\u003e permitted).\r\n     *\r\n     * @return A boolean.\r\n     ",
      "child_ranges": [
        "(line 581,col 9)-(line 583,col 9)",
        "(line 584,col 9)-(line 586,col 9)",
        "(line 587,col 9)-(line 587,col 49)",
        "(line 588,col 9)-(line 590,col 9)",
        "(line 591,col 9)-(line 593,col 9)",
        "(line 594,col 9)-(line 596,col 9)",
        "(line 597,col 9)-(line 599,col 9)",
        "(line 600,col 9)-(line 600,col 33)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.GanttRenderer.writeObject(java.io.ObjectOutputStream)",
      "begin_line": 610,
      "end_line": 614,
      "comment": "\r\n     * Provides serialization support.\r\n     *\r\n     * @param stream  the output stream.\r\n     *\r\n     * @throws IOException  if there is an I/O error.\r\n     ",
      "child_ranges": [
        "(line 611,col 9)-(line 611,col 36)",
        "(line 612,col 9)-(line 612,col 63)",
        "(line 613,col 9)-(line 613,col 65)"
      ]
    },
    {
      "type": "method",
      "signature": "org.jfree.chart.renderer.category.GanttRenderer.readObject(java.io.ObjectInputStream)",
      "begin_line": 624,
      "end_line": 629,
      "comment": "\r\n     * Provides serialization support.\r\n     *\r\n     * @param stream  the input stream.\r\n     *\r\n     * @throws IOException  if there is an I/O error.\r\n     * @throws ClassNotFoundException  if there is a classpath problem.\r\n     ",
      "child_ranges": [
        "(line 626,col 9)-(line 626,col 35)",
        "(line 627,col 9)-(line 627,col 63)",
        "(line 628,col 9)-(line 628,col 65)"
      ]
    }
  ]
}