[
    {
        "class_name": "org.apache.commons.lang3.ArrayUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
        "signature": "org.apache.commons.lang3.ArrayUtils.EMPTY_OBJECT_ARRAY",
        "snippet": "    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];",
        "begin_line": 46,
        "end_line": 46,
        "comment": "\n     * An empty immutable {@code Object} array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ArrayUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
        "signature": "org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY",
        "snippet": "    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];",
        "begin_line": 50,
        "end_line": 50,
        "comment": "\n     * An empty immutable {@code Class} array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ArrayUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
        "signature": "org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY",
        "snippet": "    public static final String[] EMPTY_STRING_ARRAY = new String[0];",
        "begin_line": 54,
        "end_line": 54,
        "comment": "\n     * An empty immutable {@code String} array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ArrayUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
        "signature": "org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_ARRAY",
        "snippet": "    public static final long[] EMPTY_LONG_ARRAY = new long[0];",
        "begin_line": 58,
        "end_line": 58,
        "comment": "\n     * An empty immutable {@code long} array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ArrayUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
        "signature": "org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY",
        "snippet": "    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];",
        "begin_line": 62,
        "end_line": 62,
        "comment": "\n     * An empty immutable {@code Long} array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ArrayUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
        "signature": "org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY",
        "snippet": "    public static final int[] EMPTY_INT_ARRAY = new int[0];",
        "begin_line": 66,
        "end_line": 66,
        "comment": "\n     * An empty immutable {@code int} array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ArrayUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
        "signature": "org.apache.commons.lang3.ArrayUtils.EMPTY_INTEGER_OBJECT_ARRAY",
        "snippet": "    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];",
        "begin_line": 70,
        "end_line": 70,
        "comment": "\n     * An empty immutable {@code Integer} array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ArrayUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
        "signature": "org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY",
        "snippet": "    public static final short[] EMPTY_SHORT_ARRAY = new short[0];",
        "begin_line": 74,
        "end_line": 74,
        "comment": "\n     * An empty immutable {@code short} array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ArrayUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
        "signature": "org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY",
        "snippet": "    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];",
        "begin_line": 78,
        "end_line": 78,
        "comment": "\n     * An empty immutable {@code Short} array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ArrayUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
        "signature": "org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY",
        "snippet": "    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];",
        "begin_line": 82,
        "end_line": 82,
        "comment": "\n     * An empty immutable {@code byte} array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ArrayUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
        "signature": "org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY",
        "snippet": "    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];",
        "begin_line": 86,
        "end_line": 86,
        "comment": "\n     * An empty immutable {@code Byte} array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ArrayUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
        "signature": "org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY",
        "snippet": "    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];",
        "begin_line": 90,
        "end_line": 90,
        "comment": "\n     * An empty immutable {@code double} array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ArrayUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
        "signature": "org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY",
        "snippet": "    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];",
        "begin_line": 94,
        "end_line": 94,
        "comment": "\n     * An empty immutable {@code Double} array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ArrayUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
        "signature": "org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY",
        "snippet": "    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];",
        "begin_line": 98,
        "end_line": 98,
        "comment": "\n     * An empty immutable {@code float} array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ArrayUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
        "signature": "org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY",
        "snippet": "    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];",
        "begin_line": 102,
        "end_line": 102,
        "comment": "\n     * An empty immutable {@code Float} array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ArrayUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
        "signature": "org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY",
        "snippet": "    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];",
        "begin_line": 106,
        "end_line": 106,
        "comment": "\n     * An empty immutable {@code boolean} array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ArrayUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
        "signature": "org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY",
        "snippet": "    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];",
        "begin_line": 110,
        "end_line": 110,
        "comment": "\n     * An empty immutable {@code Boolean} array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ArrayUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
        "signature": "org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY",
        "snippet": "    public static final char[] EMPTY_CHAR_ARRAY = new char[0];",
        "begin_line": 114,
        "end_line": 114,
        "comment": "\n     * An empty immutable {@code char} array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ArrayUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
        "signature": "org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY",
        "snippet": "    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];",
        "begin_line": 118,
        "end_line": 118,
        "comment": "\n     * An empty immutable {@code Character} array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ArrayUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
        "signature": "org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND",
        "snippet": "    public static final int INDEX_NOT_FOUND = -1;",
        "begin_line": 125,
        "end_line": 125,
        "comment": "\n     * The index value when an element is not found in a list or array: {@code -1}.\n     * This value is returned by methods in this class and can also be used in comparisons with values returned by\n     * various method from {@link java.util.List}.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.JavaVersion",
        "src_path": "src/main/java/org/apache/commons/lang3/JavaVersion.java",
        "signature": "org.apache.commons.lang3.JavaVersion.value",
        "snippet": "    private float value;",
        "begin_line": 44,
        "end_line": 44,
        "comment": "\n     * The float value.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.JavaVersion",
        "src_path": "src/main/java/org/apache/commons/lang3/JavaVersion.java",
        "signature": "org.apache.commons.lang3.JavaVersion.name",
        "snippet": "    private String name;",
        "begin_line": 48,
        "end_line": 48,
        "comment": "\n     * The standard name.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SerializationException",
        "src_path": "src/main/java/org/apache/commons/lang3/SerializationException.java",
        "signature": "org.apache.commons.lang3.SerializationException.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 4029025366392702726L;",
        "begin_line": 35,
        "end_line": 35,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.StringUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "signature": "org.apache.commons.lang3.StringUtils.EMPTY",
        "snippet": "    public static final String EMPTY = \"\";",
        "begin_line": 131,
        "end_line": 131,
        "comment": "\n     * The empty String {@code \"\"}.\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.StringUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "signature": "org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND",
        "snippet": "    public static final int INDEX_NOT_FOUND = -1;",
        "begin_line": 137,
        "end_line": 137,
        "comment": "\n     * Represents a failed index search.\n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.StringUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "signature": "org.apache.commons.lang3.StringUtils.PAD_LIMIT",
        "snippet": "    private static final int PAD_LIMIT = 8192;",
        "begin_line": 142,
        "end_line": 142,
        "comment": "\n     * <p>The maximum size to which the padding constant(s) can expand.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.StringUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "signature": "org.apache.commons.lang3.StringUtils.WHITESPACE_BLOCK",
        "snippet": "    private static final Pattern WHITESPACE_BLOCK = Pattern.compile(\"\\\\s+\");",
        "begin_line": 147,
        "end_line": 147,
        "comment": "\n     * A regex pattern for recognizing blocks of whitespace characters.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.StringUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "signature": "org.apache.commons.lang3.StringUtils.sunAvailable",
        "snippet": "    private static boolean sunAvailable = false;",
        "begin_line": 704,
        "end_line": 704,
        "comment": " SUN internal, Java 1.3 -> Java 5"
    },
    {
        "class_name": "org.apache.commons.lang3.StringUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "signature": "org.apache.commons.lang3.StringUtils.sunDecomposeMethod",
        "snippet": "    private static Method  sunDecomposeMethod = null;",
        "begin_line": 705,
        "end_line": 705,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.StringUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "signature": "org.apache.commons.lang3.StringUtils.sunPattern",
        "snippet": "    private static final Pattern sunPattern = Pattern.compile(\"\\\\p{InCombiningDiacriticalMarks}+\");//$NON-NLS-1$",
        "begin_line": 706,
        "end_line": 706,
        "comment": "$NON-NLS-1$"
    },
    {
        "class_name": "org.apache.commons.lang3.StringUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "signature": "org.apache.commons.lang3.StringUtils.java6Available",
        "snippet": "    private static boolean java6Available = false;",
        "begin_line": 708,
        "end_line": 708,
        "comment": " Java 6+"
    },
    {
        "class_name": "org.apache.commons.lang3.StringUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "signature": "org.apache.commons.lang3.StringUtils.java6NormalizeMethod",
        "snippet": "    private static Method  java6NormalizeMethod = null;",
        "begin_line": 709,
        "end_line": 709,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.StringUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "signature": "org.apache.commons.lang3.StringUtils.java6NormalizerFormNFD",
        "snippet": "    private static Object  java6NormalizerFormNFD = null;",
        "begin_line": 710,
        "end_line": 710,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.StringUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "signature": "org.apache.commons.lang3.StringUtils.java6Pattern",
        "snippet": "    private static final Pattern java6Pattern = sunPattern;",
        "begin_line": 711,
        "end_line": 711,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.StringEscapeUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
        "signature": "org.apache.commons.lang3.StringEscapeUtils.ESCAPE_JAVA",
        "snippet": "    public static final CharSequenceTranslator ESCAPE_JAVA = \n          new LookupTranslator(\n            new String[][] { \n              {\"\\\"\", \"\\\\\\\"\"},\n              {\"\\\\\", \"\\\\\\\\\"},\n          }).with(\n            new LookupTranslator(EntityArrays.JAVA_CTRL_CHARS_ESCAPE())\n          ).with(\n            UnicodeEscaper.outsideOf(32, 0x7f) \n        );",
        "begin_line": 52,
        "end_line": 61,
        "comment": "\n     * Translator object for escaping Java. \n     * \n     * While {@link #escapeJava(String)} is the expected method of use, this \n     * object allows the Java escaping functionality to be used \n     * as the foundation for a custom translator. \n     *\n     * @since 3.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.StringEscapeUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
        "signature": "org.apache.commons.lang3.StringEscapeUtils.ESCAPE_ECMASCRIPT",
        "snippet": "    public static final CharSequenceTranslator ESCAPE_ECMASCRIPT = \n        new AggregateTranslator(\n            new LookupTranslator(\n                      new String[][] { \n                            {\"'\", \"\\\\'\"},\n                            {\"\\\"\", \"\\\\\\\"\"},\n                            {\"\\\\\", \"\\\\\\\\\"},\n                            {\"/\", \"\\\\/\"}\n                      }),\n            new LookupTranslator(EntityArrays.JAVA_CTRL_CHARS_ESCAPE()),\n            UnicodeEscaper.outsideOf(32, 0x7f) \n        );",
        "begin_line": 72,
        "end_line": 83,
        "comment": "\n     * Translator object for escaping EcmaScript/JavaScript. \n     * \n     * While {@link #escapeEcmaScript(String)} is the expected method of use, this \n     * object allows the EcmaScript escaping functionality to be used \n     * as the foundation for a custom translator. \n     *\n     * @since 3.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.StringEscapeUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
        "signature": "org.apache.commons.lang3.StringEscapeUtils.ESCAPE_XML",
        "snippet": "    public static final CharSequenceTranslator ESCAPE_XML = \n        new AggregateTranslator(\n            new LookupTranslator(EntityArrays.BASIC_ESCAPE()),\n            new LookupTranslator(EntityArrays.APOS_ESCAPE())\n        );",
        "begin_line": 94,
        "end_line": 98,
        "comment": "\n     * Translator object for escaping XML.\n     * \n     * While {@link #escapeXml(String)} is the expected method of use, this \n     * object allows the XML escaping functionality to be used \n     * as the foundation for a custom translator. \n     *\n     * @since 3.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.StringEscapeUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
        "signature": "org.apache.commons.lang3.StringEscapeUtils.ESCAPE_HTML3",
        "snippet": "    public static final CharSequenceTranslator ESCAPE_HTML3 = \n        new AggregateTranslator(\n            new LookupTranslator(EntityArrays.BASIC_ESCAPE()),\n            new LookupTranslator(EntityArrays.ISO8859_1_ESCAPE())\n        );",
        "begin_line": 109,
        "end_line": 113,
        "comment": "\n     * Translator object for escaping HTML version 3.0.\n     * \n     * While {@link #escapeHtml3(String)} is the expected method of use, this \n     * object allows the HTML escaping functionality to be used \n     * as the foundation for a custom translator. \n     *\n     * @since 3.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.StringEscapeUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
        "signature": "org.apache.commons.lang3.StringEscapeUtils.ESCAPE_HTML4",
        "snippet": "    public static final CharSequenceTranslator ESCAPE_HTML4 = \n        new AggregateTranslator(\n            new LookupTranslator(EntityArrays.BASIC_ESCAPE()),\n            new LookupTranslator(EntityArrays.ISO8859_1_ESCAPE()),\n            new LookupTranslator(EntityArrays.HTML40_EXTENDED_ESCAPE())\n        );",
        "begin_line": 124,
        "end_line": 129,
        "comment": "\n     * Translator object for escaping HTML version 4.0.\n     * \n     * While {@link #escapeHtml4(String)} is the expected method of use, this \n     * object allows the HTML escaping functionality to be used \n     * as the foundation for a custom translator. \n     *\n     * @since 3.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.StringEscapeUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
        "signature": "org.apache.commons.lang3.StringEscapeUtils.ESCAPE_CSV",
        "snippet": "    public static final CharSequenceTranslator ESCAPE_CSV = new CsvEscaper();",
        "begin_line": 140,
        "end_line": 140,
        "comment": "\n     * Translator object for escaping individual Comma Separated Values. \n     * \n     * While {@link #escapeCsv(String)} is the expected method of use, this \n     * object allows the CSV escaping functionality to be used \n     * as the foundation for a custom translator. \n     *\n     * @since 3.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.CsvEscaper",
        "src_path": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
        "signature": "org.apache.commons.lang3.CsvEscaper.CSV_DELIMITER",
        "snippet": "        private static final char CSV_DELIMITER = ',';",
        "begin_line": 147,
        "end_line": 147,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.CsvEscaper",
        "src_path": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
        "signature": "org.apache.commons.lang3.CsvEscaper.CSV_QUOTE",
        "snippet": "        private static final char CSV_QUOTE = '\"';",
        "begin_line": 148,
        "end_line": 148,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.CsvEscaper",
        "src_path": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
        "signature": "org.apache.commons.lang3.CsvEscaper.CSV_QUOTE_STR",
        "snippet": "        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);",
        "begin_line": 149,
        "end_line": 149,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.CsvEscaper",
        "src_path": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
        "signature": "org.apache.commons.lang3.CsvEscaper.CSV_SEARCH_CHARS",
        "snippet": "        private static final char[] CSV_SEARCH_CHARS = \n            new char[] {CSV_DELIMITER, CSV_QUOTE, CharUtils.CR, CharUtils.LF};",
        "begin_line": 150,
        "end_line": 151,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.StringEscapeUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
        "signature": "org.apache.commons.lang3.StringEscapeUtils.UNESCAPE_JAVA",
        "snippet": "    public static final CharSequenceTranslator UNESCAPE_JAVA = \n        new AggregateTranslator(\n            new OctalUnescaper(),     // .between('\\1', '\\377'),\n            new UnicodeUnescaper(),\n            new LookupTranslator(EntityArrays.JAVA_CTRL_CHARS_UNESCAPE()),\n            new LookupTranslator(\n                      new String[][] { \n                            {\"\\\\\\\\\", \"\\\\\"},\n                            {\"\\\\\\\"\", \"\\\"\"},\n                            {\"\\\\'\", \"'\"},\n                            {\"\\\\\", \"\"}\n                      })\n        );",
        "begin_line": 183,
        "end_line": 195,
        "comment": " TODO: throw \"illegal character: \\92\" as an Exception if a \\ on the end of the Java (as per the compiler)?"
    },
    {
        "class_name": "org.apache.commons.lang3.StringEscapeUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
        "signature": "org.apache.commons.lang3.StringEscapeUtils.UNESCAPE_ECMASCRIPT",
        "snippet": "    public static final CharSequenceTranslator UNESCAPE_ECMASCRIPT = UNESCAPE_JAVA;",
        "begin_line": 206,
        "end_line": 206,
        "comment": "\n     * Translator object for unescaping escaped EcmaScript. \n     * \n     * While {@link #unescapeEcmaScript(String)} is the expected method of use, this \n     * object allows the EcmaScript unescaping functionality to be used \n     * as the foundation for a custom translator. \n     *\n     * @since 3.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.StringEscapeUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
        "signature": "org.apache.commons.lang3.StringEscapeUtils.UNESCAPE_HTML3",
        "snippet": "    public static final CharSequenceTranslator UNESCAPE_HTML3 = \n        new AggregateTranslator(\n            new LookupTranslator(EntityArrays.BASIC_UNESCAPE()),\n            new LookupTranslator(EntityArrays.ISO8859_1_UNESCAPE()),\n            new NumericEntityUnescaper()\n        );",
        "begin_line": 217,
        "end_line": 222,
        "comment": "\n     * Translator object for unescaping escaped HTML 3.0. \n     * \n     * While {@link #unescapeHtml3(String)} is the expected method of use, this \n     * object allows the HTML unescaping functionality to be used \n     * as the foundation for a custom translator. \n     *\n     * @since 3.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.StringEscapeUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
        "signature": "org.apache.commons.lang3.StringEscapeUtils.UNESCAPE_HTML4",
        "snippet": "    public static final CharSequenceTranslator UNESCAPE_HTML4 = \n        new AggregateTranslator(\n            new LookupTranslator(EntityArrays.BASIC_UNESCAPE()),\n            new LookupTranslator(EntityArrays.ISO8859_1_UNESCAPE()),\n            new LookupTranslator(EntityArrays.HTML40_EXTENDED_UNESCAPE()),\n            new NumericEntityUnescaper()\n        );",
        "begin_line": 233,
        "end_line": 239,
        "comment": "\n     * Translator object for unescaping escaped HTML 4.0. \n     * \n     * While {@link #unescapeHtml4(String)} is the expected method of use, this \n     * object allows the HTML unescaping functionality to be used \n     * as the foundation for a custom translator. \n     *\n     * @since 3.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.StringEscapeUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
        "signature": "org.apache.commons.lang3.StringEscapeUtils.UNESCAPE_XML",
        "snippet": "    public static final CharSequenceTranslator UNESCAPE_XML = \n        new AggregateTranslator(\n            new LookupTranslator(EntityArrays.BASIC_UNESCAPE()),\n            new LookupTranslator(EntityArrays.APOS_UNESCAPE()),\n            new NumericEntityUnescaper()\n        );",
        "begin_line": 250,
        "end_line": 255,
        "comment": "\n     * Translator object for unescaping escaped XML.\n     * \n     * While {@link #unescapeXml(String)} is the expected method of use, this \n     * object allows the XML unescaping functionality to be used \n     * as the foundation for a custom translator. \n     *\n     * @since 3.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.StringEscapeUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
        "signature": "org.apache.commons.lang3.StringEscapeUtils.UNESCAPE_CSV",
        "snippet": "    public static final CharSequenceTranslator UNESCAPE_CSV = new CsvUnescaper();",
        "begin_line": 266,
        "end_line": 266,
        "comment": "\n     * Translator object for unescaping escaped Comma Separated Value entries.\n     * \n     * While {@link #unescapeCsv(String)} is the expected method of use, this \n     * object allows the CSV unescaping functionality to be used \n     * as the foundation for a custom translator. \n     *\n     * @since 3.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.CsvUnescaper",
        "src_path": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
        "signature": "org.apache.commons.lang3.CsvUnescaper.CSV_DELIMITER",
        "snippet": "        private static final char CSV_DELIMITER = ',';",
        "begin_line": 270,
        "end_line": 270,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.CsvUnescaper",
        "src_path": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
        "signature": "org.apache.commons.lang3.CsvUnescaper.CSV_QUOTE",
        "snippet": "        private static final char CSV_QUOTE = '\"';",
        "begin_line": 271,
        "end_line": 271,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.CsvUnescaper",
        "src_path": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
        "signature": "org.apache.commons.lang3.CsvUnescaper.CSV_QUOTE_STR",
        "snippet": "        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);",
        "begin_line": 272,
        "end_line": 272,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.CsvUnescaper",
        "src_path": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
        "signature": "org.apache.commons.lang3.CsvUnescaper.CSV_SEARCH_CHARS",
        "snippet": "        private static final char[] CSV_SEARCH_CHARS = \n            new char[] {CSV_DELIMITER, CSV_QUOTE, CharUtils.CR, CharUtils.LF};",
        "begin_line": 273,
        "end_line": 274,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.AnnotationUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/AnnotationUtils.java",
        "signature": "org.apache.commons.lang3.AnnotationUtils.TO_STRING_STYLE",
        "snippet": "    private static final ToStringStyle TO_STRING_STYLE = new ToStringStyle() {\n        /** Serialization version */\n        private static final long serialVersionUID = 1L;\n\n        {\n            setDefaultFullDetail(true);\n            setArrayContentDetail(true);\n            setUseClassName(true);\n            setUseShortClassName(true);\n            setUseIdentityHashCode(false);\n            setContentStart(\"(\");\n            setContentEnd(\")\");\n            setFieldSeparator(\", \");\n            setArrayStart(\"[\");\n            setArrayEnd(\"]\");\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        @Override\n        protected String getShortClassName(java.lang.Class<?> cls) {\n            Class<? extends Annotation> annotationType = null;\n            for (Class<?> iface : ClassUtils.getAllInterfaces(cls)) {\n                if (Annotation.class.isAssignableFrom(iface)) {\n                    @SuppressWarnings(\"unchecked\")\n                    //because we just checked the assignability\n                    Class<? extends Annotation> found = (Class<? extends Annotation>) iface;\n                    annotationType = found;\n                    break;\n                }\n            }\n            return new StringBuilder(annotationType == null ? \"\" : annotationType.getName())\n                    .insert(0, '@').toString();\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        @Override\n        protected void appendDetail(StringBuffer buffer, String fieldName, Object value) {\n            if (value instanceof Annotation) {\n                value = AnnotationUtils.toString((Annotation) value);\n            }\n            super.appendDetail(buffer, fieldName, value);\n        }\n\n    };",
        "begin_line": 51,
        "end_line": 98,
        "comment": "\n     * A style that prints annotations as recommended.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.AnnotationUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/AnnotationUtils.java",
        "signature": "org.apache.commons.lang3.AnnotationUtils.serialVersionUID",
        "snippet": "        private static final long serialVersionUID = 1L;",
        "begin_line": 53,
        "end_line": 53,
        "comment": " Serialization version "
    },
    {
        "class_name": "org.apache.commons.lang3.BitField",
        "src_path": "src/main/java/org/apache/commons/lang3/BitField.java",
        "signature": "org.apache.commons.lang3.BitField._mask",
        "snippet": "    private final int _mask;",
        "begin_line": 27,
        "end_line": 27,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.BitField",
        "src_path": "src/main/java/org/apache/commons/lang3/BitField.java",
        "signature": "org.apache.commons.lang3.BitField._shift_count",
        "snippet": "    private final int _shift_count;",
        "begin_line": 28,
        "end_line": 28,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.RandomStringUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/RandomStringUtils.java",
        "signature": "org.apache.commons.lang3.RandomStringUtils.RANDOM",
        "snippet": "    private static final Random RANDOM = new Random();",
        "begin_line": 43,
        "end_line": 43,
        "comment": "\n     * <p>Random object used by random method. This has to be not local\n     * to the random method so as to not return the same value in the \n     * same millisecond.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ObjectUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ObjectUtils.java",
        "signature": "org.apache.commons.lang3.ObjectUtils.NULL",
        "snippet": "    public static final Null NULL = new Null();",
        "begin_line": 55,
        "end_line": 55,
        "comment": "\n     * <p>Singleton used as a {@code null} placeholder where\n     * {@code null} has another meaning.</p>\n     *\n     * <p>For example, in a {@code HashMap} the\n     * {@link java.util.HashMap#get(java.lang.Object)} method returns\n     * {@code null} if the {@code Map} contains {@code null} or if there\n     * is no matching key. The {@code Null} placeholder can be used to\n     * distinguish between these two cases.</p>\n     *\n     * <p>Another example is {@code Hashtable}, where {@code null}\n     * cannot be stored.</p>\n     *\n     * <p>This instance is Serializable.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.Null",
        "src_path": "src/main/java/org/apache/commons/lang3/ObjectUtils.java",
        "signature": "org.apache.commons.lang3.Null.serialVersionUID",
        "snippet": "        private static final long serialVersionUID = 7092611880189329093L;",
        "begin_line": 502,
        "end_line": 502,
        "comment": "\n         * Required for serialization support. Declare serialization compatibility with Commons Lang 1.0\n         *\n         * @see java.io.Serializable\n         "
    },
    {
        "class_name": "org.apache.commons.lang3.ClassUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ClassUtils.java",
        "signature": "org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR",
        "snippet": "    public static final char PACKAGE_SEPARATOR_CHAR = '.';",
        "begin_line": 48,
        "end_line": 48,
        "comment": "\n     * <p>The package separator character: <code>'&#x2e;' == {@value}</code>.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ClassUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ClassUtils.java",
        "signature": "org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR",
        "snippet": "    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);",
        "begin_line": 53,
        "end_line": 53,
        "comment": "\n     * <p>The package separator String: {@code \"&#x2e;\"}.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ClassUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ClassUtils.java",
        "signature": "org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR_CHAR",
        "snippet": "    public static final char INNER_CLASS_SEPARATOR_CHAR = '$';",
        "begin_line": 58,
        "end_line": 58,
        "comment": "\n     * <p>The inner class separator character: <code>'$' == {@value}</code>.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ClassUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ClassUtils.java",
        "signature": "org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR",
        "snippet": "    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);",
        "begin_line": 63,
        "end_line": 63,
        "comment": "\n     * <p>The inner class separator String: {@code \"$\"}.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ClassUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ClassUtils.java",
        "signature": "org.apache.commons.lang3.ClassUtils.primitiveWrapperMap",
        "snippet": "    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",
        "begin_line": 68,
        "end_line": 68,
        "comment": "\n     * Maps primitive {@code Class}es to their corresponding wrapper {@code Class}.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ClassUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ClassUtils.java",
        "signature": "org.apache.commons.lang3.ClassUtils.wrapperPrimitiveMap",
        "snippet": "    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",
        "begin_line": 84,
        "end_line": 84,
        "comment": "\n     * Maps wrapper {@code Class}es to their corresponding primitive types.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ClassUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ClassUtils.java",
        "signature": "org.apache.commons.lang3.ClassUtils.abbreviationMap",
        "snippet": "    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",
        "begin_line": 97,
        "end_line": 97,
        "comment": "\n     * Maps a primitive class name to its corresponding abbreviation used in array class names.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.ClassUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/ClassUtils.java",
        "signature": "org.apache.commons.lang3.ClassUtils.reverseAbbreviationMap",
        "snippet": "    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",
        "begin_line": 102,
        "end_line": 102,
        "comment": "\n     * Maps an abbreviation used in array class names to corresponding primitive class name.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.Validate",
        "src_path": "src/main/java/org/apache/commons/lang3/Validate.java",
        "signature": "org.apache.commons.lang3.Validate.DEFAULT_EXCLUSIVE_BETWEEN_EX_MESSAGE",
        "snippet": "    private static final String DEFAULT_EXCLUSIVE_BETWEEN_EX_MESSAGE =\n        \"The value %s is not in the specified exclusive range of %s to %s\";",
        "begin_line": 49,
        "end_line": 50,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.Validate",
        "src_path": "src/main/java/org/apache/commons/lang3/Validate.java",
        "signature": "org.apache.commons.lang3.Validate.DEFAULT_INCLUSIVE_BETWEEN_EX_MESSAGE",
        "snippet": "    private static final String DEFAULT_INCLUSIVE_BETWEEN_EX_MESSAGE =\n        \"The value %s is not in the specified inclusive range of %s to %s\";",
        "begin_line": 51,
        "end_line": 52,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.Validate",
        "src_path": "src/main/java/org/apache/commons/lang3/Validate.java",
        "signature": "org.apache.commons.lang3.Validate.DEFAULT_MATCHES_PATTERN_EX",
        "snippet": "    private static final String DEFAULT_MATCHES_PATTERN_EX = \"The string %s does not match the pattern %s\";",
        "begin_line": 53,
        "end_line": 53,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.Validate",
        "src_path": "src/main/java/org/apache/commons/lang3/Validate.java",
        "signature": "org.apache.commons.lang3.Validate.DEFAULT_IS_NULL_EX_MESSAGE",
        "snippet": "    private static final String DEFAULT_IS_NULL_EX_MESSAGE = \"The validated object is null\";",
        "begin_line": 54,
        "end_line": 54,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.Validate",
        "src_path": "src/main/java/org/apache/commons/lang3/Validate.java",
        "signature": "org.apache.commons.lang3.Validate.DEFAULT_IS_TRUE_EX_MESSAGE",
        "snippet": "    private static final String DEFAULT_IS_TRUE_EX_MESSAGE = \"The validated expression is false\";",
        "begin_line": 55,
        "end_line": 55,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.Validate",
        "src_path": "src/main/java/org/apache/commons/lang3/Validate.java",
        "signature": "org.apache.commons.lang3.Validate.DEFAULT_NO_NULL_ELEMENTS_ARRAY_EX_MESSAGE",
        "snippet": "    private static final String DEFAULT_NO_NULL_ELEMENTS_ARRAY_EX_MESSAGE =\n        \"The validated array contains null element at index: %d\";",
        "begin_line": 56,
        "end_line": 57,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.Validate",
        "src_path": "src/main/java/org/apache/commons/lang3/Validate.java",
        "signature": "org.apache.commons.lang3.Validate.DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EX_MESSAGE",
        "snippet": "    private static final String DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EX_MESSAGE =\n        \"The validated collection contains null element at index: %d\";",
        "begin_line": 58,
        "end_line": 59,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.Validate",
        "src_path": "src/main/java/org/apache/commons/lang3/Validate.java",
        "signature": "org.apache.commons.lang3.Validate.DEFAULT_NOT_BLANK_EX_MESSAGE",
        "snippet": "    private static final String DEFAULT_NOT_BLANK_EX_MESSAGE = \"The validated character sequence is blank\";",
        "begin_line": 60,
        "end_line": 60,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.Validate",
        "src_path": "src/main/java/org/apache/commons/lang3/Validate.java",
        "signature": "org.apache.commons.lang3.Validate.DEFAULT_NOT_EMPTY_ARRAY_EX_MESSAGE",
        "snippet": "    private static final String DEFAULT_NOT_EMPTY_ARRAY_EX_MESSAGE = \"The validated array is empty\";",
        "begin_line": 61,
        "end_line": 61,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.Validate",
        "src_path": "src/main/java/org/apache/commons/lang3/Validate.java",
        "signature": "org.apache.commons.lang3.Validate.DEFAULT_NOT_EMPTY_CHAR_SEQUENCE_EX_MESSAGE",
        "snippet": "    private static final String DEFAULT_NOT_EMPTY_CHAR_SEQUENCE_EX_MESSAGE =\n        \"The validated character sequence is empty\";",
        "begin_line": 62,
        "end_line": 63,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.Validate",
        "src_path": "src/main/java/org/apache/commons/lang3/Validate.java",
        "signature": "org.apache.commons.lang3.Validate.DEFAULT_NOT_EMPTY_COLLECTION_EX_MESSAGE",
        "snippet": "    private static final String DEFAULT_NOT_EMPTY_COLLECTION_EX_MESSAGE = \"The validated collection is empty\";",
        "begin_line": 64,
        "end_line": 64,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.Validate",
        "src_path": "src/main/java/org/apache/commons/lang3/Validate.java",
        "signature": "org.apache.commons.lang3.Validate.DEFAULT_NOT_EMPTY_MAP_EX_MESSAGE",
        "snippet": "    private static final String DEFAULT_NOT_EMPTY_MAP_EX_MESSAGE = \"The validated map is empty\";",
        "begin_line": 65,
        "end_line": 65,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.Validate",
        "src_path": "src/main/java/org/apache/commons/lang3/Validate.java",
        "signature": "org.apache.commons.lang3.Validate.DEFAULT_VALID_INDEX_ARRAY_EX_MESSAGE",
        "snippet": "    private static final String DEFAULT_VALID_INDEX_ARRAY_EX_MESSAGE = \"The validated array index is invalid: %d\";",
        "begin_line": 66,
        "end_line": 66,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.Validate",
        "src_path": "src/main/java/org/apache/commons/lang3/Validate.java",
        "signature": "org.apache.commons.lang3.Validate.DEFAULT_VALID_INDEX_CHAR_SEQUENCE_EX_MESSAGE",
        "snippet": "    private static final String DEFAULT_VALID_INDEX_CHAR_SEQUENCE_EX_MESSAGE =\n        \"The validated character sequence index is invalid: %d\";",
        "begin_line": 67,
        "end_line": 68,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.Validate",
        "src_path": "src/main/java/org/apache/commons/lang3/Validate.java",
        "signature": "org.apache.commons.lang3.Validate.DEFAULT_VALID_INDEX_COLLECTION_EX_MESSAGE",
        "snippet": "    private static final String DEFAULT_VALID_INDEX_COLLECTION_EX_MESSAGE =\n        \"The validated collection index is invalid: %d\";",
        "begin_line": 69,
        "end_line": 70,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.Validate",
        "src_path": "src/main/java/org/apache/commons/lang3/Validate.java",
        "signature": "org.apache.commons.lang3.Validate.DEFAULT_VALID_STATE_EX_MESSAGE",
        "snippet": "    private static final String DEFAULT_VALID_STATE_EX_MESSAGE = \"The validated state is false\";",
        "begin_line": 71,
        "end_line": 71,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.Validate",
        "src_path": "src/main/java/org/apache/commons/lang3/Validate.java",
        "signature": "org.apache.commons.lang3.Validate.DEFAULT_IS_ASSIGNABLE_EX_MESSAGE",
        "snippet": "    private static final String DEFAULT_IS_ASSIGNABLE_EX_MESSAGE =\n        \"The validated class can not be converted to the %s class\";",
        "begin_line": 72,
        "end_line": 73,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.Validate",
        "src_path": "src/main/java/org/apache/commons/lang3/Validate.java",
        "signature": "org.apache.commons.lang3.Validate.DEFAULT_IS_INSTANCE_OF_EX_MESSAGE",
        "snippet": "    private static final String DEFAULT_IS_INSTANCE_OF_EX_MESSAGE = \"The validated object is not an instance of %s\";",
        "begin_line": 74,
        "end_line": 74,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.Range",
        "src_path": "src/main/java/org/apache/commons/lang3/Range.java",
        "signature": "org.apache.commons.lang3.Range.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1L;",
        "begin_line": 40,
        "end_line": 40,
        "comment": "\n     * Serialization version.\n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.Range",
        "src_path": "src/main/java/org/apache/commons/lang3/Range.java",
        "signature": "org.apache.commons.lang3.Range.comparator",
        "snippet": "    private final Comparator<T> comparator;",
        "begin_line": 45,
        "end_line": 45,
        "comment": "\n     * The ordering scheme used in this range.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.Range",
        "src_path": "src/main/java/org/apache/commons/lang3/Range.java",
        "signature": "org.apache.commons.lang3.Range.minimum",
        "snippet": "    private final T minimum;",
        "begin_line": 49,
        "end_line": 49,
        "comment": "\n     * The minimum value in this range (inclusive).\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.Range",
        "src_path": "src/main/java/org/apache/commons/lang3/Range.java",
        "signature": "org.apache.commons.lang3.Range.maximum",
        "snippet": "    private final T maximum;",
        "begin_line": 53,
        "end_line": 53,
        "comment": "\n     * The maximum value in this range (inclusive).\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.Range",
        "src_path": "src/main/java/org/apache/commons/lang3/Range.java",
        "signature": "org.apache.commons.lang3.Range.hashCode",
        "snippet": "    private transient int hashCode;",
        "begin_line": 57,
        "end_line": 57,
        "comment": "\n     * Cached output hashCode (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.Range",
        "src_path": "src/main/java/org/apache/commons/lang3/Range.java",
        "signature": "org.apache.commons.lang3.Range.toString",
        "snippet": "    private transient String toString;",
        "begin_line": 61,
        "end_line": 61,
        "comment": "\n     * Cached output toString (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.CharRange",
        "src_path": "src/main/java/org/apache/commons/lang3/CharRange.java",
        "signature": "org.apache.commons.lang3.CharRange.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 8270183163158333422L;",
        "begin_line": 41,
        "end_line": 41,
        "comment": "\n     * Required for serialization support. Lang version 2.0. \n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.CharRange",
        "src_path": "src/main/java/org/apache/commons/lang3/CharRange.java",
        "signature": "org.apache.commons.lang3.CharRange.start",
        "snippet": "    private final char start;",
        "begin_line": 44,
        "end_line": 44,
        "comment": " The first character, inclusive, in the range. "
    },
    {
        "class_name": "org.apache.commons.lang3.CharRange",
        "src_path": "src/main/java/org/apache/commons/lang3/CharRange.java",
        "signature": "org.apache.commons.lang3.CharRange.end",
        "snippet": "    private final char end;",
        "begin_line": 46,
        "end_line": 46,
        "comment": " The last character, inclusive, in the range. "
    },
    {
        "class_name": "org.apache.commons.lang3.CharRange",
        "src_path": "src/main/java/org/apache/commons/lang3/CharRange.java",
        "signature": "org.apache.commons.lang3.CharRange.negated",
        "snippet": "    private final boolean negated;",
        "begin_line": 48,
        "end_line": 48,
        "comment": " True if the range is everything except the characters specified. "
    },
    {
        "class_name": "org.apache.commons.lang3.CharRange",
        "src_path": "src/main/java/org/apache/commons/lang3/CharRange.java",
        "signature": "org.apache.commons.lang3.CharRange.iToString",
        "snippet": "    private transient String iToString;",
        "begin_line": 51,
        "end_line": 51,
        "comment": " Cached toString. "
    },
    {
        "class_name": "org.apache.commons.lang3.CharacterIterator",
        "src_path": "src/main/java/org/apache/commons/lang3/CharRange.java",
        "signature": "org.apache.commons.lang3.CharacterIterator.current",
        "snippet": "        private char current;",
        "begin_line": 270,
        "end_line": 270,
        "comment": " The current character "
    },
    {
        "class_name": "org.apache.commons.lang3.CharacterIterator",
        "src_path": "src/main/java/org/apache/commons/lang3/CharRange.java",
        "signature": "org.apache.commons.lang3.CharacterIterator.range",
        "snippet": "        private final CharRange range;",
        "begin_line": 272,
        "end_line": 272,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.CharacterIterator",
        "src_path": "src/main/java/org/apache/commons/lang3/CharRange.java",
        "signature": "org.apache.commons.lang3.CharacterIterator.hasNext",
        "snippet": "        private boolean hasNext;",
        "begin_line": 273,
        "end_line": 273,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.CharUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/CharUtils.java",
        "signature": "org.apache.commons.lang3.CharUtils.CHAR_STRING",
        "snippet": "    private static final String CHAR_STRING = \n        \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\" +\n        \"\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\" +\n        \"\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\" +\n        \"\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f\" +\n        \"\\u0020\\u0021\\\"\\u0023\\u0024\\u0025\\u0026\\u0027\" +\n        \"\\u0028\\u0029\\u002a\\u002b\\u002c\\u002d\\u002e\\u002f\" +\n        \"\\u0030\\u0031\\u0032\\u0033\\u0034\\u0035\\u0036\\u0037\" +\n        \"\\u0038\\u0039\\u003a\\u003b\\u003c\\u003d\\u003e\\u003f\" +\n        \"\\u0040\\u0041\\u0042\\u0043\\u0044\\u0045\\u0046\\u0047\" +\n        \"\\u0048\\u0049\\u004a\\u004b\\u004c\\u004d\\u004e\\u004f\" +\n        \"\\u0050\\u0051\\u0052\\u0053\\u0054\\u0055\\u0056\\u0057\" +\n        \"\\u0058\\u0059\\u005a\\u005b\\\\\\u005d\\u005e\\u005f\" +\n        \"\\u0060\\u0061\\u0062\\u0063\\u0064\\u0065\\u0066\\u0067\" +\n        \"\\u0068\\u0069\\u006a\\u006b\\u006c\\u006d\\u006e\\u006f\" +\n        \"\\u0070\\u0071\\u0072\\u0073\\u0074\\u0075\\u0076\\u0077\" +\n        \"\\u0078\\u0079\\u007a\\u007b\\u007c\\u007d\\u007e\\u007f\";",
        "begin_line": 32,
        "end_line": 48,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.CharUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/CharUtils.java",
        "signature": "org.apache.commons.lang3.CharUtils.CHAR_STRING_ARRAY",
        "snippet": "    private static final String[] CHAR_STRING_ARRAY = new String[128];",
        "begin_line": 50,
        "end_line": 50,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.CharUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/CharUtils.java",
        "signature": "org.apache.commons.lang3.CharUtils.CHAR_ARRAY",
        "snippet": "    private static final Character[] CHAR_ARRAY = new Character[128];",
        "begin_line": 51,
        "end_line": 51,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.CharUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/CharUtils.java",
        "signature": "org.apache.commons.lang3.CharUtils.LF",
        "snippet": "    public static final char LF = '\\n';",
        "begin_line": 60,
        "end_line": 60,
        "comment": "\n     * {@code \\u000a} linefeed LF ('\\n').\n     * \n     * @see <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/lexical.html#101089\">JLF: Escape Sequences\n     *      for Character and String Literals</a>\n     * @since 2.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.CharUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/CharUtils.java",
        "signature": "org.apache.commons.lang3.CharUtils.CR",
        "snippet": "    public static final char CR = '\\r';",
        "begin_line": 69,
        "end_line": 69,
        "comment": "\n     * {@code \\u000d} carriage return CR ('\\r').\n     * \n     * @see <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/lexical.html#101089\">JLF: Escape Sequences\n     *      for Character and String Literals</a>\n     * @since 2.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.CharEncoding",
        "src_path": "src/main/java/org/apache/commons/lang3/CharEncoding.java",
        "signature": "org.apache.commons.lang3.CharEncoding.ISO_8859_1",
        "snippet": "    public static final String ISO_8859_1 = \"ISO-8859-1\";",
        "begin_line": 44,
        "end_line": 44,
        "comment": "\n     * <p>ISO Latin Alphabet #1, also known as ISO-LATIN-1.</p>\n     *\n     * <p>Every implementation of the Java platform is required to support this character encoding.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.CharEncoding",
        "src_path": "src/main/java/org/apache/commons/lang3/CharEncoding.java",
        "signature": "org.apache.commons.lang3.CharEncoding.US_ASCII",
        "snippet": "    public static final String US_ASCII = \"US-ASCII\";",
        "begin_line": 52,
        "end_line": 52,
        "comment": "\n     * <p>Seven-bit ASCII, also known as ISO646-US, also known as the Basic Latin block\n     * of the Unicode character set.</p>\n     *\n     * <p>Every implementation of the Java platform is required to support this character encoding.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.CharEncoding",
        "src_path": "src/main/java/org/apache/commons/lang3/CharEncoding.java",
        "signature": "org.apache.commons.lang3.CharEncoding.UTF_16",
        "snippet": "    public static final String UTF_16 = \"UTF-16\";",
        "begin_line": 60,
        "end_line": 60,
        "comment": "\n     * <p>Sixteen-bit Unicode Transformation Format, byte order specified by a mandatory initial\n     * byte-order mark (either order accepted on input, big-endian used on output).</p>\n     *\n     * <p>Every implementation of the Java platform is required to support this character encoding.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.CharEncoding",
        "src_path": "src/main/java/org/apache/commons/lang3/CharEncoding.java",
        "signature": "org.apache.commons.lang3.CharEncoding.UTF_16BE",
        "snippet": "    public static final String UTF_16BE = \"UTF-16BE\";",
        "begin_line": 67,
        "end_line": 67,
        "comment": "\n     * <p>Sixteen-bit Unicode Transformation Format, big-endian byte order.</p>\n     *\n     * <p>Every implementation of the Java platform is required to support this character encoding.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.CharEncoding",
        "src_path": "src/main/java/org/apache/commons/lang3/CharEncoding.java",
        "signature": "org.apache.commons.lang3.CharEncoding.UTF_16LE",
        "snippet": "    public static final String UTF_16LE = \"UTF-16LE\";",
        "begin_line": 74,
        "end_line": 74,
        "comment": "\n     * <p>Sixteen-bit Unicode Transformation Format, little-endian byte order.</p>\n     *\n     * <p>Every implementation of the Java platform is required to support this character encoding.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.CharEncoding",
        "src_path": "src/main/java/org/apache/commons/lang3/CharEncoding.java",
        "signature": "org.apache.commons.lang3.CharEncoding.UTF_8",
        "snippet": "    public static final String UTF_8 = \"UTF-8\";",
        "begin_line": 81,
        "end_line": 81,
        "comment": "\n     * <p>Eight-bit Unicode Transformation Format.</p>\n     *\n     * <p>Every implementation of the Java platform is required to support this character encoding.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.OS_NAME_WINDOWS_PREFIX",
        "snippet": "    private static final String OS_NAME_WINDOWS_PREFIX = \"Windows\";",
        "begin_line": 41,
        "end_line": 41,
        "comment": "\n     * The prefix String for all Windows OS.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.USER_HOME_KEY",
        "snippet": "    private static final String USER_HOME_KEY = \"user.home\";",
        "begin_line": 50,
        "end_line": 50,
        "comment": "\n     * The System property key for the user home directory.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.USER_DIR_KEY",
        "snippet": "    private static final String USER_DIR_KEY = \"user.dir\";",
        "begin_line": 55,
        "end_line": 55,
        "comment": "\n     * The System property key for the user directory.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_IO_TMPDIR_KEY",
        "snippet": "    private static final String JAVA_IO_TMPDIR_KEY = \"java.io.tmpdir\";",
        "begin_line": 60,
        "end_line": 60,
        "comment": "\n     * The System property key for the Java IO temporary directory.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_HOME_KEY",
        "snippet": "    private static final String JAVA_HOME_KEY = \"java.home\";",
        "begin_line": 65,
        "end_line": 65,
        "comment": "\n     * The System property key for the Java home directory.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.AWT_TOOLKIT",
        "snippet": "    public static final String AWT_TOOLKIT = getSystemProperty(\"awt.toolkit\");",
        "begin_line": 89,
        "end_line": 89,
        "comment": "\n     * <p>\n     * The {@code awt.toolkit} System Property.\n     * </p>\n     * <p>\n     * Holds a class name, on Windows XP this is {@code sun.awt.windows.WToolkit}.\n     * </p>\n     * <p>\n     * <b>On platforms without a GUI, this value is {@code null}.</b>\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.FILE_ENCODING",
        "snippet": "    public static final String FILE_ENCODING = getSystemProperty(\"file.encoding\");",
        "begin_line": 111,
        "end_line": 111,
        "comment": "\n     * <p>\n     * The {@code file.encoding} System Property.\n     * </p>\n     * <p>\n     * File encoding, such as {@code Cp1252}.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since 2.0\n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.FILE_SEPARATOR",
        "snippet": "    public static final String FILE_SEPARATOR = getSystemProperty(\"file.separator\");",
        "begin_line": 129,
        "end_line": 129,
        "comment": "\n     * <p>\n     * The {@code file.separator} System Property. File separator (<code>&quot;/&quot;</code> on UNIX).\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_AWT_FONTS",
        "snippet": "    public static final String JAVA_AWT_FONTS = getSystemProperty(\"java.awt.fonts\");",
        "begin_line": 147,
        "end_line": 147,
        "comment": "\n     * <p>\n     * The {@code java.awt.fonts} System Property.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_AWT_GRAPHICSENV",
        "snippet": "    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(\"java.awt.graphicsenv\");",
        "begin_line": 165,
        "end_line": 165,
        "comment": "\n     * <p>\n     * The {@code java.awt.graphicsenv} System Property.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_AWT_HEADLESS",
        "snippet": "    public static final String JAVA_AWT_HEADLESS = getSystemProperty(\"java.awt.headless\");",
        "begin_line": 186,
        "end_line": 186,
        "comment": "\n     * <p>\n     * The {@code java.awt.headless} System Property. The value of this property is the String {@code \"true\"} or\n     * {@code \"false\"}.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @see #isJavaAwtHeadless()\n     * @since 2.1\n     * @since Java 1.4\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_AWT_PRINTERJOB",
        "snippet": "    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(\"java.awt.printerjob\");",
        "begin_line": 204,
        "end_line": 204,
        "comment": "\n     * <p>\n     * The {@code java.awt.printerjob} System Property.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_CLASS_PATH",
        "snippet": "    public static final String JAVA_CLASS_PATH = getSystemProperty(\"java.class.path\");",
        "begin_line": 222,
        "end_line": 222,
        "comment": "\n     * <p>\n     * The {@code java.class.path} System Property. Java class path.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_CLASS_VERSION",
        "snippet": "    public static final String JAVA_CLASS_VERSION = getSystemProperty(\"java.class.version\");",
        "begin_line": 240,
        "end_line": 240,
        "comment": "\n     * <p>\n     * The {@code java.class.version} System Property. Java class format version number.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_COMPILER",
        "snippet": "    public static final String JAVA_COMPILER = getSystemProperty(\"java.compiler\");",
        "begin_line": 259,
        "end_line": 259,
        "comment": "\n     * <p>\n     * The {@code java.compiler} System Property. Name of JIT compiler to use. First in JDK version 1.2. Not used in Sun\n     * JDKs after 1.2.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.2. Not used in Sun versions after 1.2.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_ENDORSED_DIRS",
        "snippet": "    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(\"java.endorsed.dirs\");",
        "begin_line": 277,
        "end_line": 277,
        "comment": "\n     * <p>\n     * The {@code java.endorsed.dirs} System Property. Path of endorsed directory or directories.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.4\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_EXT_DIRS",
        "snippet": "    public static final String JAVA_EXT_DIRS = getSystemProperty(\"java.ext.dirs\");",
        "begin_line": 295,
        "end_line": 295,
        "comment": "\n     * <p>\n     * The {@code java.ext.dirs} System Property. Path of extension directory or directories.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.3\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_HOME",
        "snippet": "    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);",
        "begin_line": 313,
        "end_line": 313,
        "comment": "\n     * <p>\n     * The {@code java.home} System Property. Java installation directory.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_IO_TMPDIR",
        "snippet": "    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);",
        "begin_line": 331,
        "end_line": 331,
        "comment": "\n     * <p>\n     * The {@code java.io.tmpdir} System Property. Default temp file path.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_LIBRARY_PATH",
        "snippet": "    public static final String JAVA_LIBRARY_PATH = getSystemProperty(\"java.library.path\");",
        "begin_line": 349,
        "end_line": 349,
        "comment": "\n     * <p>\n     * The {@code java.library.path} System Property. List of paths to search when loading libraries.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_RUNTIME_NAME",
        "snippet": "    public static final String JAVA_RUNTIME_NAME = getSystemProperty(\"java.runtime.name\");",
        "begin_line": 368,
        "end_line": 368,
        "comment": "\n     * <p>\n     * The {@code java.runtime.name} System Property. Java Runtime Environment name.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since 2.0\n     * @since Java 1.3\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_RUNTIME_VERSION",
        "snippet": "    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(\"java.runtime.version\");",
        "begin_line": 387,
        "end_line": 387,
        "comment": "\n     * <p>\n     * The {@code java.runtime.version} System Property. Java Runtime Environment version.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since 2.0\n     * @since Java 1.3\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_SPECIFICATION_NAME",
        "snippet": "    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(\"java.specification.name\");",
        "begin_line": 405,
        "end_line": 405,
        "comment": "\n     * <p>\n     * The {@code java.specification.name} System Property. Java Runtime Environment specification name.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_SPECIFICATION_VENDOR",
        "snippet": "    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(\"java.specification.vendor\");",
        "begin_line": 423,
        "end_line": 423,
        "comment": "\n     * <p>\n     * The {@code java.specification.vendor} System Property. Java Runtime Environment specification vendor.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_SPECIFICATION_VERSION",
        "snippet": "    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(\"java.specification.version\");",
        "begin_line": 441,
        "end_line": 441,
        "comment": "\n     * <p>\n     * The {@code java.specification.version} System Property. Java Runtime Environment specification version.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.3\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_SPECIFICATION_VERSION_AS_ENUM",
        "snippet": "    private static final JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM = JavaVersion.get(JAVA_SPECIFICATION_VERSION);",
        "begin_line": 442,
        "end_line": 442,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_UTIL_PREFS_PREFERENCES_FACTORY",
        "snippet": "    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY =\n        getSystemProperty(\"java.util.prefs.PreferencesFactory\");",
        "begin_line": 461,
        "end_line": 462,
        "comment": "\n     * <p>\n     * The {@code java.util.prefs.PreferencesFactory} System Property. A class name.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since 2.1\n     * @since Java 1.4\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_VENDOR",
        "snippet": "    public static final String JAVA_VENDOR = getSystemProperty(\"java.vendor\");",
        "begin_line": 480,
        "end_line": 480,
        "comment": "\n     * <p>\n     * The {@code java.vendor} System Property. Java vendor-specific string.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_VENDOR_URL",
        "snippet": "    public static final String JAVA_VENDOR_URL = getSystemProperty(\"java.vendor.url\");",
        "begin_line": 498,
        "end_line": 498,
        "comment": "\n     * <p>\n     * The {@code java.vendor.url} System Property. Java vendor URL.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_VERSION",
        "snippet": "    public static final String JAVA_VERSION = getSystemProperty(\"java.version\");",
        "begin_line": 516,
        "end_line": 516,
        "comment": "\n     * <p>\n     * The {@code java.version} System Property. Java version number.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_VM_INFO",
        "snippet": "    public static final String JAVA_VM_INFO = getSystemProperty(\"java.vm.info\");",
        "begin_line": 535,
        "end_line": 535,
        "comment": "\n     * <p>\n     * The {@code java.vm.info} System Property. Java Virtual Machine implementation info.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since 2.0\n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_VM_NAME",
        "snippet": "    public static final String JAVA_VM_NAME = getSystemProperty(\"java.vm.name\");",
        "begin_line": 553,
        "end_line": 553,
        "comment": "\n     * <p>\n     * The {@code java.vm.name} System Property. Java Virtual Machine implementation name.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_VM_SPECIFICATION_NAME",
        "snippet": "    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(\"java.vm.specification.name\");",
        "begin_line": 571,
        "end_line": 571,
        "comment": "\n     * <p>\n     * The {@code java.vm.specification.name} System Property. Java Virtual Machine specification name.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_VM_SPECIFICATION_VENDOR",
        "snippet": "    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(\"java.vm.specification.vendor\");",
        "begin_line": 589,
        "end_line": 589,
        "comment": "\n     * <p>\n     * The {@code java.vm.specification.vendor} System Property. Java Virtual Machine specification vendor.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_VM_SPECIFICATION_VERSION",
        "snippet": "    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(\"java.vm.specification.version\");",
        "begin_line": 607,
        "end_line": 607,
        "comment": "\n     * <p>\n     * The {@code java.vm.specification.version} System Property. Java Virtual Machine specification version.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_VM_VENDOR",
        "snippet": "    public static final String JAVA_VM_VENDOR = getSystemProperty(\"java.vm.vendor\");",
        "begin_line": 625,
        "end_line": 625,
        "comment": "\n     * <p>\n     * The {@code java.vm.vendor} System Property. Java Virtual Machine implementation vendor.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.JAVA_VM_VERSION",
        "snippet": "    public static final String JAVA_VM_VERSION = getSystemProperty(\"java.vm.version\");",
        "begin_line": 643,
        "end_line": 643,
        "comment": "\n     * <p>\n     * The {@code java.vm.version} System Property. Java Virtual Machine implementation version.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.LINE_SEPARATOR",
        "snippet": "    public static final String LINE_SEPARATOR = getSystemProperty(\"line.separator\");",
        "begin_line": 661,
        "end_line": 661,
        "comment": "\n     * <p>\n     * The {@code line.separator} System Property. Line separator (<code>&quot;\\n&quot;</code> on UNIX).\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.OS_ARCH",
        "snippet": "    public static final String OS_ARCH = getSystemProperty(\"os.arch\");",
        "begin_line": 679,
        "end_line": 679,
        "comment": "\n     * <p>\n     * The {@code os.arch} System Property. Operating system architecture.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.OS_NAME",
        "snippet": "    public static final String OS_NAME = getSystemProperty(\"os.name\");",
        "begin_line": 697,
        "end_line": 697,
        "comment": "\n     * <p>\n     * The {@code os.name} System Property. Operating system name.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.OS_VERSION",
        "snippet": "    public static final String OS_VERSION = getSystemProperty(\"os.version\");",
        "begin_line": 715,
        "end_line": 715,
        "comment": "\n     * <p>\n     * The {@code os.version} System Property. Operating system version.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.PATH_SEPARATOR",
        "snippet": "    public static final String PATH_SEPARATOR = getSystemProperty(\"path.separator\");",
        "begin_line": 733,
        "end_line": 733,
        "comment": "\n     * <p>\n     * The {@code path.separator} System Property. Path separator (<code>&quot;:&quot;</code> on UNIX).\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.USER_COUNTRY",
        "snippet": "    public static final String USER_COUNTRY = getSystemProperty(\"user.country\") == null ?\n            getSystemProperty(\"user.region\") : getSystemProperty(\"user.country\");",
        "begin_line": 753,
        "end_line": 754,
        "comment": "\n     * <p>\n     * The {@code user.country} or {@code user.region} System Property. User's country code, such as {@code GB}. First\n     * in Java version 1.2 as {@code user.region}. Renamed to {@code user.country} in 1.4\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since 2.0\n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.USER_DIR",
        "snippet": "    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);",
        "begin_line": 772,
        "end_line": 772,
        "comment": "\n     * <p>\n     * The {@code user.dir} System Property. User's current working directory.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.USER_HOME",
        "snippet": "    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);",
        "begin_line": 790,
        "end_line": 790,
        "comment": "\n     * <p>\n     * The {@code user.home} System Property. User's home directory.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.USER_LANGUAGE",
        "snippet": "    public static final String USER_LANGUAGE = getSystemProperty(\"user.language\");",
        "begin_line": 809,
        "end_line": 809,
        "comment": "\n     * <p>\n     * The {@code user.language} System Property. User's language code, such as {@code \"en\"}.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since 2.0\n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.USER_NAME",
        "snippet": "    public static final String USER_NAME = getSystemProperty(\"user.name\");",
        "begin_line": 827,
        "end_line": 827,
        "comment": "\n     * <p>\n     * The {@code user.name} System Property. User's account name.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.USER_TIMEZONE",
        "snippet": "    public static final String USER_TIMEZONE = getSystemProperty(\"user.timezone\");",
        "begin_line": 845,
        "end_line": 845,
        "comment": "\n     * <p>\n     * The {@code user.timezone} System Property. For example: {@code \"America/Los_Angeles\"}.\n     * </p>\n     * <p>\n     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n     * not exist.\n     * </p>\n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n     * sync with that System property.\n     * </p>\n     *\n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_JAVA_1_1",
        "snippet": "    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(\"1.1\");",
        "begin_line": 860,
        "end_line": 860,
        "comment": "\n     * <p>\n     * Is {@code true} if this is Java version 1.1 (also 1.1.x versions).\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@link #JAVA_VERSION} is {@code null}.\n     * </p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_JAVA_1_2",
        "snippet": "    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(\"1.2\");",
        "begin_line": 870,
        "end_line": 870,
        "comment": "\n     * <p>\n     * Is {@code true} if this is Java version 1.2 (also 1.2.x versions).\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@link #JAVA_VERSION} is {@code null}.\n     * </p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_JAVA_1_3",
        "snippet": "    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(\"1.3\");",
        "begin_line": 880,
        "end_line": 880,
        "comment": "\n     * <p>\n     * Is {@code true} if this is Java version 1.3 (also 1.3.x versions).\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@link #JAVA_VERSION} is {@code null}.\n     * </p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_JAVA_1_4",
        "snippet": "    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(\"1.4\");",
        "begin_line": 890,
        "end_line": 890,
        "comment": "\n     * <p>\n     * Is {@code true} if this is Java version 1.4 (also 1.4.x versions).\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@link #JAVA_VERSION} is {@code null}.\n     * </p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_JAVA_1_5",
        "snippet": "    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(\"1.5\");",
        "begin_line": 900,
        "end_line": 900,
        "comment": "\n     * <p>\n     * Is {@code true} if this is Java version 1.5 (also 1.5.x versions).\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@link #JAVA_VERSION} is {@code null}.\n     * </p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_JAVA_1_6",
        "snippet": "    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(\"1.6\");",
        "begin_line": 910,
        "end_line": 910,
        "comment": "\n     * <p>\n     * Is {@code true} if this is Java version 1.6 (also 1.6.x versions).\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@link #JAVA_VERSION} is {@code null}.\n     * </p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_JAVA_1_7",
        "snippet": "    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(\"1.7\");",
        "begin_line": 922,
        "end_line": 922,
        "comment": "\n     * <p>\n     * Is {@code true} if this is Java version 1.7 (also 1.7.x versions).\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@link #JAVA_VERSION} is {@code null}.\n     * </p>\n     *\n     * @since 3.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_OS_AIX",
        "snippet": "    public static final boolean IS_OS_AIX = getOSMatchesName(\"AIX\");",
        "begin_line": 942,
        "end_line": 942,
        "comment": "\n     * <p>\n     * Is {@code true} if this is AIX.\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n     * </p>\n     *\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_OS_HP_UX",
        "snippet": "    public static final boolean IS_OS_HP_UX = getOSMatchesName(\"HP-UX\");",
        "begin_line": 954,
        "end_line": 954,
        "comment": "\n     * <p>\n     * Is {@code true} if this is HP-UX.\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n     * </p>\n     *\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_OS_IRIX",
        "snippet": "    public static final boolean IS_OS_IRIX = getOSMatchesName(\"Irix\");",
        "begin_line": 966,
        "end_line": 966,
        "comment": "\n     * <p>\n     * Is {@code true} if this is Irix.\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n     * </p>\n     *\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_OS_LINUX",
        "snippet": "    public static final boolean IS_OS_LINUX = getOSMatchesName(\"Linux\") || getOSMatchesName(\"LINUX\");",
        "begin_line": 978,
        "end_line": 978,
        "comment": "\n     * <p>\n     * Is {@code true} if this is Linux.\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n     * </p>\n     *\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_OS_MAC",
        "snippet": "    public static final boolean IS_OS_MAC = getOSMatchesName(\"Mac\");",
        "begin_line": 990,
        "end_line": 990,
        "comment": "\n     * <p>\n     * Is {@code true} if this is Mac.\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n     * </p>\n     *\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX",
        "snippet": "    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(\"Mac OS X\");",
        "begin_line": 1002,
        "end_line": 1002,
        "comment": "\n     * <p>\n     * Is {@code true} if this is Mac.\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n     * </p>\n     *\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_OS_OS2",
        "snippet": "    public static final boolean IS_OS_OS2 = getOSMatchesName(\"OS/2\");",
        "begin_line": 1014,
        "end_line": 1014,
        "comment": "\n     * <p>\n     * Is {@code true} if this is OS/2.\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n     * </p>\n     *\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_OS_SOLARIS",
        "snippet": "    public static final boolean IS_OS_SOLARIS = getOSMatchesName(\"Solaris\");",
        "begin_line": 1026,
        "end_line": 1026,
        "comment": "\n     * <p>\n     * Is {@code true} if this is Solaris.\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n     * </p>\n     *\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_OS_SUN_OS",
        "snippet": "    public static final boolean IS_OS_SUN_OS = getOSMatchesName(\"SunOS\");",
        "begin_line": 1038,
        "end_line": 1038,
        "comment": "\n     * <p>\n     * Is {@code true} if this is SunOS.\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n     * </p>\n     *\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_OS_UNIX",
        "snippet": "    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX\n            || IS_OS_SOLARIS || IS_OS_SUN_OS;",
        "begin_line": 1050,
        "end_line": 1051,
        "comment": "\n     * <p>\n     * Is {@code true} if this is a UNIX like system, as in any of AIX, HP-UX, Irix, Linux, MacOSX, Solaris or SUN OS.\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n     * </p>\n     *\n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS",
        "snippet": "    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);",
        "begin_line": 1063,
        "end_line": 1063,
        "comment": "\n     * <p>\n     * Is {@code true} if this is Windows.\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n     * </p>\n     *\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_2000",
        "snippet": "    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, \"5.0\");",
        "begin_line": 1075,
        "end_line": 1075,
        "comment": "\n     * <p>\n     * Is {@code true} if this is Windows 2000.\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n     * </p>\n     *\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_95",
        "snippet": "    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + \" 9\", \"4.0\");",
        "begin_line": 1087,
        "end_line": 1087,
        "comment": "\n     * <p>\n     * Is {@code true} if this is Windows 95.\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n     * </p>\n     *\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_98",
        "snippet": "    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + \" 9\", \"4.1\");",
        "begin_line": 1100,
        "end_line": 1100,
        "comment": "\n     * <p>\n     * Is {@code true} if this is Windows 98.\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n     * </p>\n     *\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_ME",
        "snippet": "    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, \"4.9\");",
        "begin_line": 1113,
        "end_line": 1113,
        "comment": "\n     * <p>\n     * Is {@code true} if this is Windows ME.\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n     * </p>\n     *\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_NT",
        "snippet": "    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + \" NT\");",
        "begin_line": 1126,
        "end_line": 1126,
        "comment": "\n     * <p>\n     * Is {@code true} if this is Windows NT.\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n     * </p>\n     *\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_XP",
        "snippet": "    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, \"5.1\");",
        "begin_line": 1139,
        "end_line": 1139,
        "comment": "\n     * <p>\n     * Is {@code true} if this is Windows XP.\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n     * </p>\n     *\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_VISTA",
        "snippet": "    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, \"6.0\");",
        "begin_line": 1152,
        "end_line": 1152,
        "comment": "\n     * <p>\n     * Is {@code true} if this is Windows Vista.\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n     * </p>\n     *\n     * @since 2.4\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.SystemUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
        "signature": "org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_7",
        "snippet": "    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, \"6.1\");",
        "begin_line": 1164,
        "end_line": 1164,
        "comment": "\n     * <p>\n     * Is {@code true} if this is Windows 7.\n     * </p>\n     * <p>\n     * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n     * </p>\n     *\n     * @since 3.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.CharSet",
        "src_path": "src/main/java/org/apache/commons/lang3/CharSet.java",
        "signature": "org.apache.commons.lang3.CharSet.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 5947847346149275958L;",
        "begin_line": 42,
        "end_line": 42,
        "comment": "\n     * Required for serialization support. Lang version 2.0. \n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.CharSet",
        "src_path": "src/main/java/org/apache/commons/lang3/CharSet.java",
        "signature": "org.apache.commons.lang3.CharSet.EMPTY",
        "snippet": "    public static final CharSet EMPTY = new CharSet((String) null);",
        "begin_line": 48,
        "end_line": 48,
        "comment": " \n     * A CharSet defining no characters. \n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.CharSet",
        "src_path": "src/main/java/org/apache/commons/lang3/CharSet.java",
        "signature": "org.apache.commons.lang3.CharSet.ASCII_ALPHA",
        "snippet": "    public static final CharSet ASCII_ALPHA = new CharSet(\"a-zA-Z\");",
        "begin_line": 54,
        "end_line": 54,
        "comment": " \n     * A CharSet defining ASCII alphabetic characters \"a-zA-Z\".\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.CharSet",
        "src_path": "src/main/java/org/apache/commons/lang3/CharSet.java",
        "signature": "org.apache.commons.lang3.CharSet.ASCII_ALPHA_LOWER",
        "snippet": "    public static final CharSet ASCII_ALPHA_LOWER = new CharSet(\"a-z\");",
        "begin_line": 60,
        "end_line": 60,
        "comment": " \n     * A CharSet defining ASCII alphabetic characters \"a-z\".\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.CharSet",
        "src_path": "src/main/java/org/apache/commons/lang3/CharSet.java",
        "signature": "org.apache.commons.lang3.CharSet.ASCII_ALPHA_UPPER",
        "snippet": "    public static final CharSet ASCII_ALPHA_UPPER = new CharSet(\"A-Z\");",
        "begin_line": 66,
        "end_line": 66,
        "comment": " \n     * A CharSet defining ASCII alphabetic characters \"A-Z\".\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.CharSet",
        "src_path": "src/main/java/org/apache/commons/lang3/CharSet.java",
        "signature": "org.apache.commons.lang3.CharSet.ASCII_NUMERIC",
        "snippet": "    public static final CharSet ASCII_NUMERIC = new CharSet(\"0-9\");",
        "begin_line": 72,
        "end_line": 72,
        "comment": " \n     * A CharSet defining ASCII alphabetic characters \"0-9\".\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.CharSet",
        "src_path": "src/main/java/org/apache/commons/lang3/CharSet.java",
        "signature": "org.apache.commons.lang3.CharSet.COMMON",
        "snippet": "    protected static final Map<String, CharSet> COMMON = Collections.synchronizedMap(new HashMap<String, CharSet>());",
        "begin_line": 79,
        "end_line": 79,
        "comment": "\n     * A Map of the common cases used in the factory.\n     * Subclasses can add more common patterns if desired\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.CharSet",
        "src_path": "src/main/java/org/apache/commons/lang3/CharSet.java",
        "signature": "org.apache.commons.lang3.CharSet.set",
        "snippet": "    private final Set<CharRange> set = Collections.synchronizedSet(new HashSet<CharRange>());",
        "begin_line": 92,
        "end_line": 92,
        "comment": " The set of CharRange objects. "
    },
    {
        "class_name": "org.apache.commons.lang3.LocaleUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/LocaleUtils.java",
        "signature": "org.apache.commons.lang3.LocaleUtils.cLanguagesByCountry",
        "snippet": "    private static final ConcurrentMap<String, List<Locale>> cLanguagesByCountry = \n        new ConcurrentHashMap<String, List<Locale>>();",
        "begin_line": 42,
        "end_line": 43,
        "comment": " Concurrent map of language locales by country. "
    },
    {
        "class_name": "org.apache.commons.lang3.LocaleUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/LocaleUtils.java",
        "signature": "org.apache.commons.lang3.LocaleUtils.cCountriesByLanguage",
        "snippet": "    private static final ConcurrentMap<String, List<Locale>> cCountriesByLanguage = \n        new ConcurrentHashMap<String, List<Locale>>();",
        "begin_line": 46,
        "end_line": 47,
        "comment": " Concurrent map of country locales by language. "
    },
    {
        "class_name": "org.apache.commons.lang3.SyncAvoid",
        "src_path": "src/main/java/org/apache/commons/lang3/LocaleUtils.java",
        "signature": "org.apache.commons.lang3.SyncAvoid.AVAILABLE_LOCALE_LIST",
        "snippet": "        private static List<Locale> AVAILABLE_LOCALE_LIST;",
        "begin_line": 286,
        "end_line": 286,
        "comment": " Unmodifiable list of available locales. "
    },
    {
        "class_name": "org.apache.commons.lang3.SyncAvoid",
        "src_path": "src/main/java/org/apache/commons/lang3/LocaleUtils.java",
        "signature": "org.apache.commons.lang3.SyncAvoid.AVAILABLE_LOCALE_SET",
        "snippet": "        private static Set<Locale> AVAILABLE_LOCALE_SET;",
        "begin_line": 288,
        "end_line": 288,
        "comment": " Unmodifiable set of available locales. "
    },
    {
        "class_name": "org.apache.commons.lang3.exception.CloneFailedException",
        "src_path": "src/main/java/org/apache/commons/lang3/exception/CloneFailedException.java",
        "signature": "org.apache.commons.lang3.exception.CloneFailedException.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 20091223L;",
        "begin_line": 28,
        "end_line": 28,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.exception.DefaultExceptionContext",
        "src_path": "src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java",
        "signature": "org.apache.commons.lang3.exception.DefaultExceptionContext.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 293747957535772807L;",
        "begin_line": 37,
        "end_line": 37,
        "comment": " The serialization version. "
    },
    {
        "class_name": "org.apache.commons.lang3.exception.DefaultExceptionContext",
        "src_path": "src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java",
        "signature": "org.apache.commons.lang3.exception.DefaultExceptionContext.contextValueMap",
        "snippet": "    private Map<String, Object> contextValueMap = new LinkedHashMap<String, Object>();",
        "begin_line": 39,
        "end_line": 39,
        "comment": " The ordered map storing the label-data pairs. "
    },
    {
        "class_name": "org.apache.commons.lang3.exception.ContextedException",
        "src_path": "src/main/java/org/apache/commons/lang3/exception/ContextedException.java",
        "signature": "org.apache.commons.lang3.exception.ContextedException.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 8940917952810290164L;",
        "begin_line": 70,
        "end_line": 70,
        "comment": " The serialization version. "
    },
    {
        "class_name": "org.apache.commons.lang3.exception.ContextedException",
        "src_path": "src/main/java/org/apache/commons/lang3/exception/ContextedException.java",
        "signature": "org.apache.commons.lang3.exception.ContextedException.exceptionContext",
        "snippet": "    private final ExceptionContext exceptionContext;",
        "begin_line": 72,
        "end_line": 72,
        "comment": " The context where the data is stored. "
    },
    {
        "class_name": "org.apache.commons.lang3.exception.ExceptionUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java",
        "signature": "org.apache.commons.lang3.exception.ExceptionUtils.WRAPPED_MARKER",
        "snippet": "    static final String WRAPPED_MARKER = \" [wrapped] \";",
        "begin_line": 48,
        "end_line": 48,
        "comment": "\n     * <p>Used when printing stack frames to denote the start of a\n     * wrapped exception.</p>\n     *\n     * <p>Package private for accessibility by test suite.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.exception.ExceptionUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java",
        "signature": "org.apache.commons.lang3.exception.ExceptionUtils.CAUSE_METHOD_NAMES",
        "snippet": "    private static final String[] CAUSE_METHOD_NAMES = {\n        \"getCause\",\n        \"getNextException\",\n        \"getTargetException\",\n        \"getException\",\n        \"getSourceException\",\n        \"getRootCause\",\n        \"getCausedByException\",\n        \"getNested\",\n        \"getLinkedException\",\n        \"getNestedException\",\n        \"getLinkedCause\",\n        \"getThrowable\",\n    };",
        "begin_line": 54,
        "end_line": 67,
        "comment": " TODO: Remove in Lang 4.0"
    },
    {
        "class_name": "org.apache.commons.lang3.exception.ContextedRuntimeException",
        "src_path": "src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java",
        "signature": "org.apache.commons.lang3.exception.ContextedRuntimeException.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1459691936045811817L;",
        "begin_line": 70,
        "end_line": 70,
        "comment": " The serialization version. "
    },
    {
        "class_name": "org.apache.commons.lang3.exception.ContextedRuntimeException",
        "src_path": "src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java",
        "signature": "org.apache.commons.lang3.exception.ContextedRuntimeException.exceptionContext",
        "snippet": "    private final ExceptionContext exceptionContext;",
        "begin_line": 72,
        "end_line": 72,
        "comment": " The context where the data is stored. "
    },
    {
        "class_name": "org.apache.commons.lang3.text.ExtendedMessageFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "signature": "org.apache.commons.lang3.text.ExtendedMessageFormat.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -2362048321261811743L;",
        "begin_line": 71,
        "end_line": 71,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.ExtendedMessageFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "signature": "org.apache.commons.lang3.text.ExtendedMessageFormat.HASH_SEED",
        "snippet": "    private static final int HASH_SEED = 31;",
        "begin_line": 72,
        "end_line": 72,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.ExtendedMessageFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "signature": "org.apache.commons.lang3.text.ExtendedMessageFormat.DUMMY_PATTERN",
        "snippet": "    private static final String DUMMY_PATTERN = \"\";",
        "begin_line": 74,
        "end_line": 74,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.ExtendedMessageFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "signature": "org.apache.commons.lang3.text.ExtendedMessageFormat.ESCAPED_QUOTE",
        "snippet": "    private static final String ESCAPED_QUOTE = \"''\";",
        "begin_line": 75,
        "end_line": 75,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.ExtendedMessageFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "signature": "org.apache.commons.lang3.text.ExtendedMessageFormat.START_FMT",
        "snippet": "    private static final char START_FMT = ',';",
        "begin_line": 76,
        "end_line": 76,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.ExtendedMessageFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "signature": "org.apache.commons.lang3.text.ExtendedMessageFormat.END_FE",
        "snippet": "    private static final char END_FE = '}';",
        "begin_line": 77,
        "end_line": 77,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.ExtendedMessageFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "signature": "org.apache.commons.lang3.text.ExtendedMessageFormat.START_FE",
        "snippet": "    private static final char START_FE = '{';",
        "begin_line": 78,
        "end_line": 78,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.ExtendedMessageFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "signature": "org.apache.commons.lang3.text.ExtendedMessageFormat.QUOTE",
        "snippet": "    private static final char QUOTE = '\\'';",
        "begin_line": 79,
        "end_line": 79,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.ExtendedMessageFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "signature": "org.apache.commons.lang3.text.ExtendedMessageFormat.toPattern",
        "snippet": "    private String toPattern;",
        "begin_line": 81,
        "end_line": 81,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.ExtendedMessageFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "signature": "org.apache.commons.lang3.text.ExtendedMessageFormat.registry",
        "snippet": "    private final Map<String, ? extends FormatFactory> registry;",
        "begin_line": 82,
        "end_line": 82,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrMatcher",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrMatcher.java",
        "signature": "org.apache.commons.lang3.text.StrMatcher.COMMA_MATCHER",
        "snippet": "    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",
        "begin_line": 36,
        "end_line": 36,
        "comment": "\n     * Matches the comma character.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrMatcher",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrMatcher.java",
        "signature": "org.apache.commons.lang3.text.StrMatcher.TAB_MATCHER",
        "snippet": "    private static final StrMatcher TAB_MATCHER = new CharMatcher('\\t');",
        "begin_line": 40,
        "end_line": 40,
        "comment": "\n     * Matches the tab character.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrMatcher",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrMatcher.java",
        "signature": "org.apache.commons.lang3.text.StrMatcher.SPACE_MATCHER",
        "snippet": "    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');",
        "begin_line": 44,
        "end_line": 44,
        "comment": "\n     * Matches the space character.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrMatcher",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrMatcher.java",
        "signature": "org.apache.commons.lang3.text.StrMatcher.SPLIT_MATCHER",
        "snippet": "    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher(\" \\t\\n\\r\\f\".toCharArray());",
        "begin_line": 49,
        "end_line": 49,
        "comment": "\n     * Matches the same characters as StringTokenizer,\n     * namely space, tab, newline, formfeed.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrMatcher",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrMatcher.java",
        "signature": "org.apache.commons.lang3.text.StrMatcher.TRIM_MATCHER",
        "snippet": "    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();",
        "begin_line": 53,
        "end_line": 53,
        "comment": "\n     * Matches the String trim() whitespace characters.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrMatcher",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrMatcher.java",
        "signature": "org.apache.commons.lang3.text.StrMatcher.SINGLE_QUOTE_MATCHER",
        "snippet": "    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\\'');",
        "begin_line": 57,
        "end_line": 57,
        "comment": "\n     * Matches the double quote character.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrMatcher",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrMatcher.java",
        "signature": "org.apache.commons.lang3.text.StrMatcher.DOUBLE_QUOTE_MATCHER",
        "snippet": "    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('\"');",
        "begin_line": 61,
        "end_line": 61,
        "comment": "\n     * Matches the double quote character.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrMatcher",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrMatcher.java",
        "signature": "org.apache.commons.lang3.text.StrMatcher.QUOTE_MATCHER",
        "snippet": "    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(\"'\\\"\".toCharArray());",
        "begin_line": 65,
        "end_line": 65,
        "comment": "\n     * Matches the single or double quote character.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrMatcher",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrMatcher.java",
        "signature": "org.apache.commons.lang3.text.StrMatcher.NONE_MATCHER",
        "snippet": "    private static final StrMatcher NONE_MATCHER = new NoMatcher();",
        "begin_line": 69,
        "end_line": 69,
        "comment": "\n     * Matches no characters.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.CharSetMatcher",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrMatcher.java",
        "signature": "org.apache.commons.lang3.text.CharSetMatcher.chars",
        "snippet": "        private final char[] chars;",
        "begin_line": 275,
        "end_line": 275,
        "comment": " The set of characters to match. "
    },
    {
        "class_name": "org.apache.commons.lang3.text.CharMatcher",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrMatcher.java",
        "signature": "org.apache.commons.lang3.text.CharMatcher.ch",
        "snippet": "        private final char ch;",
        "begin_line": 309,
        "end_line": 309,
        "comment": " The character to match. "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StringMatcher",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrMatcher.java",
        "signature": "org.apache.commons.lang3.text.StringMatcher.chars",
        "snippet": "        private final char[] chars;",
        "begin_line": 342,
        "end_line": 342,
        "comment": " The string to match, as a character array. "
    },
    {
        "class_name": "org.apache.commons.lang3.text.CompositeFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/text/CompositeFormat.java",
        "signature": "org.apache.commons.lang3.text.CompositeFormat.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -4329119827877627683L;",
        "begin_line": 38,
        "end_line": 38,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.CompositeFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/text/CompositeFormat.java",
        "signature": "org.apache.commons.lang3.text.CompositeFormat.parser",
        "snippet": "    private final Format parser;",
        "begin_line": 41,
        "end_line": 41,
        "comment": " The parser to use. "
    },
    {
        "class_name": "org.apache.commons.lang3.text.CompositeFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/text/CompositeFormat.java",
        "signature": "org.apache.commons.lang3.text.CompositeFormat.formatter",
        "snippet": "    private final Format formatter;",
        "begin_line": 43,
        "end_line": 43,
        "comment": " The formatter to use. "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrLookup",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrLookup.java",
        "signature": "org.apache.commons.lang3.text.StrLookup.NONE_LOOKUP",
        "snippet": "    private static final StrLookup<String> NONE_LOOKUP;",
        "begin_line": 42,
        "end_line": 42,
        "comment": "\n     * Lookup that always returns null.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrLookup",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrLookup.java",
        "signature": "org.apache.commons.lang3.text.StrLookup.SYSTEM_PROPERTIES_LOOKUP",
        "snippet": "    private static final StrLookup<String> SYSTEM_PROPERTIES_LOOKUP;",
        "begin_line": 46,
        "end_line": 46,
        "comment": "\n     * Lookup that uses System properties.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.MapStrLookup",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrLookup.java",
        "signature": "org.apache.commons.lang3.text.MapStrLookup.map",
        "snippet": "        private final Map<String, V> map;",
        "begin_line": 140,
        "end_line": 140,
        "comment": " Map keys are variable names and value. "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrTokenizer",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java",
        "signature": "org.apache.commons.lang3.text.StrTokenizer.CSV_TOKENIZER_PROTOTYPE",
        "snippet": "    private static final StrTokenizer CSV_TOKENIZER_PROTOTYPE;",
        "begin_line": 89,
        "end_line": 89,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrTokenizer",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java",
        "signature": "org.apache.commons.lang3.text.StrTokenizer.TSV_TOKENIZER_PROTOTYPE",
        "snippet": "    private static final StrTokenizer TSV_TOKENIZER_PROTOTYPE;",
        "begin_line": 90,
        "end_line": 90,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrTokenizer",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java",
        "signature": "org.apache.commons.lang3.text.StrTokenizer.chars",
        "snippet": "    private char chars[];",
        "begin_line": 110,
        "end_line": 110,
        "comment": " The text to work on. "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrTokenizer",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java",
        "signature": "org.apache.commons.lang3.text.StrTokenizer.tokens",
        "snippet": "    private String tokens[];",
        "begin_line": 112,
        "end_line": 112,
        "comment": " The parsed tokens "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrTokenizer",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java",
        "signature": "org.apache.commons.lang3.text.StrTokenizer.tokenPos",
        "snippet": "    private int tokenPos;",
        "begin_line": 114,
        "end_line": 114,
        "comment": " The current iteration position "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrTokenizer",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java",
        "signature": "org.apache.commons.lang3.text.StrTokenizer.delimMatcher",
        "snippet": "    private StrMatcher delimMatcher = StrMatcher.splitMatcher();",
        "begin_line": 117,
        "end_line": 117,
        "comment": " The delimiter matcher "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrTokenizer",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java",
        "signature": "org.apache.commons.lang3.text.StrTokenizer.quoteMatcher",
        "snippet": "    private StrMatcher quoteMatcher = StrMatcher.noneMatcher();",
        "begin_line": 119,
        "end_line": 119,
        "comment": " The quote matcher "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrTokenizer",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java",
        "signature": "org.apache.commons.lang3.text.StrTokenizer.ignoredMatcher",
        "snippet": "    private StrMatcher ignoredMatcher = StrMatcher.noneMatcher();",
        "begin_line": 121,
        "end_line": 121,
        "comment": " The ignored matcher "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrTokenizer",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java",
        "signature": "org.apache.commons.lang3.text.StrTokenizer.trimmerMatcher",
        "snippet": "    private StrMatcher trimmerMatcher = StrMatcher.noneMatcher();",
        "begin_line": 123,
        "end_line": 123,
        "comment": " The trimmer matcher "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrTokenizer",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java",
        "signature": "org.apache.commons.lang3.text.StrTokenizer.emptyAsNull",
        "snippet": "    private boolean emptyAsNull = false;",
        "begin_line": 126,
        "end_line": 126,
        "comment": " Whether to return empty tokens as null "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrTokenizer",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java",
        "signature": "org.apache.commons.lang3.text.StrTokenizer.ignoreEmptyTokens",
        "snippet": "    private boolean ignoreEmptyTokens = true;",
        "begin_line": 128,
        "end_line": 128,
        "comment": " Whether to ignore empty tokens "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrSubstitutor",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java",
        "signature": "org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_ESCAPE",
        "snippet": "    public static final char DEFAULT_ESCAPE = '$';",
        "begin_line": 108,
        "end_line": 108,
        "comment": "\n     * Constant for the default escape character.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrSubstitutor",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java",
        "signature": "org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_PREFIX",
        "snippet": "    public static final StrMatcher DEFAULT_PREFIX = StrMatcher.stringMatcher(\"${\");",
        "begin_line": 112,
        "end_line": 112,
        "comment": "\n     * Constant for the default variable prefix.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrSubstitutor",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java",
        "signature": "org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX",
        "snippet": "    public static final StrMatcher DEFAULT_SUFFIX = StrMatcher.stringMatcher(\"}\");",
        "begin_line": 116,
        "end_line": 116,
        "comment": "\n     * Constant for the default variable suffix.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrSubstitutor",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java",
        "signature": "org.apache.commons.lang3.text.StrSubstitutor.escapeChar",
        "snippet": "    private char escapeChar;",
        "begin_line": 121,
        "end_line": 121,
        "comment": "\n     * Stores the escape character.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrSubstitutor",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java",
        "signature": "org.apache.commons.lang3.text.StrSubstitutor.prefixMatcher",
        "snippet": "    private StrMatcher prefixMatcher;",
        "begin_line": 125,
        "end_line": 125,
        "comment": "\n     * Stores the variable prefix.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrSubstitutor",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java",
        "signature": "org.apache.commons.lang3.text.StrSubstitutor.suffixMatcher",
        "snippet": "    private StrMatcher suffixMatcher;",
        "begin_line": 129,
        "end_line": 129,
        "comment": "\n     * Stores the variable suffix.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrSubstitutor",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java",
        "signature": "org.apache.commons.lang3.text.StrSubstitutor.variableResolver",
        "snippet": "    private StrLookup<?> variableResolver;",
        "begin_line": 133,
        "end_line": 133,
        "comment": "\n     * Variable resolution is delegated to an implementor of VariableResolver.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrSubstitutor",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java",
        "signature": "org.apache.commons.lang3.text.StrSubstitutor.enableSubstitutionInVariables",
        "snippet": "    private boolean enableSubstitutionInVariables;",
        "begin_line": 137,
        "end_line": 137,
        "comment": "\n     * The flag whether substitution in variable names is enabled.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.FormattableUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/text/FormattableUtils.java",
        "signature": "org.apache.commons.lang3.text.FormattableUtils.SIMPLEST_FORMAT",
        "snippet": "    private static final String SIMPLEST_FORMAT = \"%s\";",
        "begin_line": 43,
        "end_line": 43,
        "comment": "\n     * A format that simply outputs the value as a string.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrBuilder",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrBuilder.java",
        "signature": "org.apache.commons.lang3.text.StrBuilder.CAPACITY",
        "snippet": "    static final int CAPACITY = 32;",
        "begin_line": 77,
        "end_line": 77,
        "comment": "\n     * The extra capacity for new builders.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrBuilder",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrBuilder.java",
        "signature": "org.apache.commons.lang3.text.StrBuilder.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 7628716375283629643L;",
        "begin_line": 84,
        "end_line": 84,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrBuilder",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrBuilder.java",
        "signature": "org.apache.commons.lang3.text.StrBuilder.buffer",
        "snippet": "    protected char[] buffer; // TODO make private?",
        "begin_line": 87,
        "end_line": 87,
        "comment": " TODO make private?"
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrBuilder",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrBuilder.java",
        "signature": "org.apache.commons.lang3.text.StrBuilder.size",
        "snippet": "    protected int size; // TODO make private?",
        "begin_line": 89,
        "end_line": 89,
        "comment": " TODO make private?"
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrBuilder",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrBuilder.java",
        "signature": "org.apache.commons.lang3.text.StrBuilder.newLine",
        "snippet": "    private String newLine;",
        "begin_line": 91,
        "end_line": 91,
        "comment": " The new line. "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrBuilder",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrBuilder.java",
        "signature": "org.apache.commons.lang3.text.StrBuilder.nullText",
        "snippet": "    private String nullText;",
        "begin_line": 93,
        "end_line": 93,
        "comment": " The null text. "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrBuilderReader",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrBuilder.java",
        "signature": "org.apache.commons.lang3.text.StrBuilderReader.pos",
        "snippet": "        private int pos;",
        "begin_line": 2707,
        "end_line": 2707,
        "comment": " The current stream position. "
    },
    {
        "class_name": "org.apache.commons.lang3.text.StrBuilderReader",
        "src_path": "src/main/java/org/apache/commons/lang3/text/StrBuilder.java",
        "signature": "org.apache.commons.lang3.text.StrBuilderReader.mark",
        "snippet": "        private int mark;",
        "begin_line": 2709,
        "end_line": 2709,
        "comment": " The last mark position. "
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.OctalUnescaper",
        "src_path": "src/main/java/org/apache/commons/lang3/text/translate/OctalUnescaper.java",
        "signature": "org.apache.commons.lang3.text.translate.OctalUnescaper.OCTAL_MAX",
        "snippet": "    private static int OCTAL_MAX = 377;",
        "begin_line": 36,
        "end_line": 36,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.EntityArrays",
        "src_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "signature": "org.apache.commons.lang3.text.translate.EntityArrays.ISO8859_1_ESCAPE",
        "snippet": "    private static final String[][] ISO8859_1_ESCAPE = {\n        {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n        {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark\n        {\"\\u00A2\", \"&cent;\"}, // cent sign\n        {\"\\u00A3\", \"&pound;\"}, // pound sign\n        {\"\\u00A4\", \"&curren;\"}, // currency sign\n        {\"\\u00A5\", \"&yen;\"}, // yen sign = yuan sign\n        {\"\\u00A6\", \"&brvbar;\"}, // broken bar = broken vertical bar\n        {\"\\u00A7\", \"&sect;\"}, // section sign\n        {\"\\u00A8\", \"&uml;\"}, // diaeresis = spacing diaeresis\n        {\"\\u00A9\", \"&copy;\"}, // \\xa9 - copyright sign\n        {\"\\u00AA\", \"&ordf;\"}, // feminine ordinal indicator\n        {\"\\u00AB\", \"&laquo;\"}, // left-pointing double angle quotation mark = left pointing guillemet\n        {\"\\u00AC\", \"&not;\"}, // not sign\n        {\"\\u00AD\", \"&shy;\"}, // soft hyphen = discretionary hyphen\n        {\"\\u00AE\", \"&reg;\"}, // \\xae - registered trademark sign\n        {\"\\u00AF\", \"&macr;\"}, // macron = spacing macron = overline = APL overbar\n        {\"\\u00B0\", \"&deg;\"}, // degree sign\n        {\"\\u00B1\", \"&plusmn;\"}, // plus-minus sign = plus-or-minus sign\n        {\"\\u00B2\", \"&sup2;\"}, // superscript two = superscript digit two = squared\n        {\"\\u00B3\", \"&sup3;\"}, // superscript three = superscript digit three = cubed\n        {\"\\u00B4\", \"&acute;\"}, // acute accent = spacing acute\n        {\"\\u00B5\", \"&micro;\"}, // micro sign\n        {\"\\u00B6\", \"&para;\"}, // pilcrow sign = paragraph sign\n        {\"\\u00B7\", \"&middot;\"}, // middle dot = Georgian comma = Greek middle dot\n        {\"\\u00B8\", \"&cedil;\"}, // cedilla = spacing cedilla\n        {\"\\u00B9\", \"&sup1;\"}, // superscript one = superscript digit one\n        {\"\\u00BA\", \"&ordm;\"}, // masculine ordinal indicator\n        {\"\\u00BB\", \"&raquo;\"}, // right-pointing double angle quotation mark = right pointing guillemet\n        {\"\\u00BC\", \"&frac14;\"}, // vulgar fraction one quarter = fraction one quarter\n        {\"\\u00BD\", \"&frac12;\"}, // vulgar fraction one half = fraction one half\n        {\"\\u00BE\", \"&frac34;\"}, // vulgar fraction three quarters = fraction three quarters\n        {\"\\u00BF\", \"&iquest;\"}, // inverted question mark = turned question mark\n        {\"\\u00C0\", \"&Agrave;\"}, // \\xc0 - uppercase A, grave accent\n        {\"\\u00C1\", \"&Aacute;\"}, // \\xc1 - uppercase A, acute accent\n        {\"\\u00C2\", \"&Acirc;\"}, // \\xc2 - uppercase A, circumflex accent\n        {\"\\u00C3\", \"&Atilde;\"}, // \\xc3 - uppercase A, tilde\n        {\"\\u00C4\", \"&Auml;\"}, // \\xc4 - uppercase A, umlaut\n        {\"\\u00C5\", \"&Aring;\"}, // \\xc5 - uppercase A, ring\n        {\"\\u00C6\", \"&AElig;\"}, // \\xc6 - uppercase AE\n        {\"\\u00C7\", \"&Ccedil;\"}, // \\xc7 - uppercase C, cedilla\n        {\"\\u00C8\", \"&Egrave;\"}, // \\xc8 - uppercase E, grave accent\n        {\"\\u00C9\", \"&Eacute;\"}, // \\xc9 - uppercase E, acute accent\n        {\"\\u00CA\", \"&Ecirc;\"}, // \\xca - uppercase E, circumflex accent\n        {\"\\u00CB\", \"&Euml;\"}, // \\xcb - uppercase E, umlaut\n        {\"\\u00CC\", \"&Igrave;\"}, // \\xcc - uppercase I, grave accent\n        {\"\\u00CD\", \"&Iacute;\"}, // \\xcd - uppercase I, acute accent\n        {\"\\u00CE\", \"&Icirc;\"}, // \\xce - uppercase I, circumflex accent\n        {\"\\u00CF\", \"&Iuml;\"}, // \\xcf - uppercase I, umlaut\n        {\"\\u00D0\", \"&ETH;\"}, // \\xd0 - uppercase Eth, Icelandic\n        {\"\\u00D1\", \"&Ntilde;\"}, // \\xd1 - uppercase N, tilde\n        {\"\\u00D2\", \"&Ograve;\"}, // \\xd2 - uppercase O, grave accent\n        {\"\\u00D3\", \"&Oacute;\"}, // \\xd3 - uppercase O, acute accent\n        {\"\\u00D4\", \"&Ocirc;\"}, // \\xd4 - uppercase O, circumflex accent\n        {\"\\u00D5\", \"&Otilde;\"}, // \\xd5 - uppercase O, tilde\n        {\"\\u00D6\", \"&Ouml;\"}, // \\xd6 - uppercase O, umlaut\n        {\"\\u00D7\", \"&times;\"}, // multiplication sign\n        {\"\\u00D8\", \"&Oslash;\"}, // \\xd8 - uppercase O, slash\n        {\"\\u00D9\", \"&Ugrave;\"}, // \\xd9 - uppercase U, grave accent\n        {\"\\u00DA\", \"&Uacute;\"}, // \\xda - uppercase U, acute accent\n        {\"\\u00DB\", \"&Ucirc;\"}, // \\xdb - uppercase U, circumflex accent\n        {\"\\u00DC\", \"&Uuml;\"}, // \\xdc - uppercase U, umlaut\n        {\"\\u00DD\", \"&Yacute;\"}, // \\xdd - uppercase Y, acute accent\n        {\"\\u00DE\", \"&THORN;\"}, // \\xde - uppercase THORN, Icelandic\n        {\"\\u00DF\", \"&szlig;\"}, // \\xdf - lowercase sharps, German\n        {\"\\u00E0\", \"&agrave;\"}, // \\xe0 - lowercase a, grave accent\n        {\"\\u00E1\", \"&aacute;\"}, // \\xe1 - lowercase a, acute accent\n        {\"\\u00E2\", \"&acirc;\"}, // \\xe2 - lowercase a, circumflex accent\n        {\"\\u00E3\", \"&atilde;\"}, // \\xe3 - lowercase a, tilde\n        {\"\\u00E4\", \"&auml;\"}, // \\xe4 - lowercase a, umlaut\n        {\"\\u00E5\", \"&aring;\"}, // \\xe5 - lowercase a, ring\n        {\"\\u00E6\", \"&aelig;\"}, // \\xe6 - lowercase ae\n        {\"\\u00E7\", \"&ccedil;\"}, // \\xe7 - lowercase c, cedilla\n        {\"\\u00E8\", \"&egrave;\"}, // \\xe8 - lowercase e, grave accent\n        {\"\\u00E9\", \"&eacute;\"}, // \\xe9 - lowercase e, acute accent\n        {\"\\u00EA\", \"&ecirc;\"}, // \\xea - lowercase e, circumflex accent\n        {\"\\u00EB\", \"&euml;\"}, // \\xeb - lowercase e, umlaut\n        {\"\\u00EC\", \"&igrave;\"}, // \\xec - lowercase i, grave accent\n        {\"\\u00ED\", \"&iacute;\"}, // \\xed - lowercase i, acute accent\n        {\"\\u00EE\", \"&icirc;\"}, // \\xee - lowercase i, circumflex accent\n        {\"\\u00EF\", \"&iuml;\"}, // \\xef - lowercase i, umlaut\n        {\"\\u00F0\", \"&eth;\"}, // \\xf0 - lowercase eth, Icelandic\n        {\"\\u00F1\", \"&ntilde;\"}, // \\xf1 - lowercase n, tilde\n        {\"\\u00F2\", \"&ograve;\"}, // \\xf2 - lowercase o, grave accent\n        {\"\\u00F3\", \"&oacute;\"}, // \\xf3 - lowercase o, acute accent\n        {\"\\u00F4\", \"&ocirc;\"}, // \\xf4 - lowercase o, circumflex accent\n        {\"\\u00F5\", \"&otilde;\"}, // \\xf5 - lowercase o, tilde\n        {\"\\u00F6\", \"&ouml;\"}, // \\xf6 - lowercase o, umlaut\n        {\"\\u00F7\", \"&divide;\"}, // division sign\n        {\"\\u00F8\", \"&oslash;\"}, // \\xf8 - lowercase o, slash\n        {\"\\u00F9\", \"&ugrave;\"}, // \\xf9 - lowercase u, grave accent\n        {\"\\u00FA\", \"&uacute;\"}, // \\xfa - lowercase u, acute accent\n        {\"\\u00FB\", \"&ucirc;\"}, // \\xfb - lowercase u, circumflex accent\n        {\"\\u00FC\", \"&uuml;\"}, // \\xfc - lowercase u, umlaut\n        {\"\\u00FD\", \"&yacute;\"}, // \\xfd - lowercase y, acute accent\n        {\"\\u00FE\", \"&thorn;\"}, // \\xfe - lowercase thorn, Icelandic\n        {\"\\u00FF\", \"&yuml;\"}, // \\xff - lowercase y, umlaut\n    };",
        "begin_line": 35,
        "end_line": 132,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.EntityArrays",
        "src_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "signature": "org.apache.commons.lang3.text.translate.EntityArrays.ISO8859_1_UNESCAPE",
        "snippet": "    private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);",
        "begin_line": 139,
        "end_line": 139,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.EntityArrays",
        "src_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "signature": "org.apache.commons.lang3.text.translate.EntityArrays.HTML40_EXTENDED_ESCAPE",
        "snippet": "    private static final String[][] HTML40_EXTENDED_ESCAPE = {\n        // <!-- Latin Extended-B -->\n        {\"\\u0192\", \"&fnof;\"}, // latin small f with hook = function= florin, U+0192 ISOtech -->\n        // <!-- Greek -->\n        {\"\\u0391\", \"&Alpha;\"}, // greek capital letter alpha, U+0391 -->\n        {\"\\u0392\", \"&Beta;\"}, // greek capital letter beta, U+0392 -->\n        {\"\\u0393\", \"&Gamma;\"}, // greek capital letter gamma,U+0393 ISOgrk3 -->\n        {\"\\u0394\", \"&Delta;\"}, // greek capital letter delta,U+0394 ISOgrk3 -->\n        {\"\\u0395\", \"&Epsilon;\"}, // greek capital letter epsilon, U+0395 -->\n        {\"\\u0396\", \"&Zeta;\"}, // greek capital letter zeta, U+0396 -->\n        {\"\\u0397\", \"&Eta;\"}, // greek capital letter eta, U+0397 -->\n        {\"\\u0398\", \"&Theta;\"}, // greek capital letter theta,U+0398 ISOgrk3 -->\n        {\"\\u0399\", \"&Iota;\"}, // greek capital letter iota, U+0399 -->\n        {\"\\u039A\", \"&Kappa;\"}, // greek capital letter kappa, U+039A -->\n        {\"\\u039B\", \"&Lambda;\"}, // greek capital letter lambda,U+039B ISOgrk3 -->\n        {\"\\u039C\", \"&Mu;\"}, // greek capital letter mu, U+039C -->\n        {\"\\u039D\", \"&Nu;\"}, // greek capital letter nu, U+039D -->\n        {\"\\u039E\", \"&Xi;\"}, // greek capital letter xi, U+039E ISOgrk3 -->\n        {\"\\u039F\", \"&Omicron;\"}, // greek capital letter omicron, U+039F -->\n        {\"\\u03A0\", \"&Pi;\"}, // greek capital letter pi, U+03A0 ISOgrk3 -->\n        {\"\\u03A1\", \"&Rho;\"}, // greek capital letter rho, U+03A1 -->\n        // <!-- there is no Sigmaf, and no U+03A2 character either -->\n        {\"\\u03A3\", \"&Sigma;\"}, // greek capital letter sigma,U+03A3 ISOgrk3 -->\n        {\"\\u03A4\", \"&Tau;\"}, // greek capital letter tau, U+03A4 -->\n        {\"\\u03A5\", \"&Upsilon;\"}, // greek capital letter upsilon,U+03A5 ISOgrk3 -->\n        {\"\\u03A6\", \"&Phi;\"}, // greek capital letter phi,U+03A6 ISOgrk3 -->\n        {\"\\u03A7\", \"&Chi;\"}, // greek capital letter chi, U+03A7 -->\n        {\"\\u03A8\", \"&Psi;\"}, // greek capital letter psi,U+03A8 ISOgrk3 -->\n        {\"\\u03A9\", \"&Omega;\"}, // greek capital letter omega,U+03A9 ISOgrk3 -->\n        {\"\\u03B1\", \"&alpha;\"}, // greek small letter alpha,U+03B1 ISOgrk3 -->\n        {\"\\u03B2\", \"&beta;\"}, // greek small letter beta, U+03B2 ISOgrk3 -->\n        {\"\\u03B3\", \"&gamma;\"}, // greek small letter gamma,U+03B3 ISOgrk3 -->\n        {\"\\u03B4\", \"&delta;\"}, // greek small letter delta,U+03B4 ISOgrk3 -->\n        {\"\\u03B5\", \"&epsilon;\"}, // greek small letter epsilon,U+03B5 ISOgrk3 -->\n        {\"\\u03B6\", \"&zeta;\"}, // greek small letter zeta, U+03B6 ISOgrk3 -->\n        {\"\\u03B7\", \"&eta;\"}, // greek small letter eta, U+03B7 ISOgrk3 -->\n        {\"\\u03B8\", \"&theta;\"}, // greek small letter theta,U+03B8 ISOgrk3 -->\n        {\"\\u03B9\", \"&iota;\"}, // greek small letter iota, U+03B9 ISOgrk3 -->\n        {\"\\u03BA\", \"&kappa;\"}, // greek small letter kappa,U+03BA ISOgrk3 -->\n        {\"\\u03BB\", \"&lambda;\"}, // greek small letter lambda,U+03BB ISOgrk3 -->\n        {\"\\u03BC\", \"&mu;\"}, // greek small letter mu, U+03BC ISOgrk3 -->\n        {\"\\u03BD\", \"&nu;\"}, // greek small letter nu, U+03BD ISOgrk3 -->\n        {\"\\u03BE\", \"&xi;\"}, // greek small letter xi, U+03BE ISOgrk3 -->\n        {\"\\u03BF\", \"&omicron;\"}, // greek small letter omicron, U+03BF NEW -->\n        {\"\\u03C0\", \"&pi;\"}, // greek small letter pi, U+03C0 ISOgrk3 -->\n        {\"\\u03C1\", \"&rho;\"}, // greek small letter rho, U+03C1 ISOgrk3 -->\n        {\"\\u03C2\", \"&sigmaf;\"}, // greek small letter final sigma,U+03C2 ISOgrk3 -->\n        {\"\\u03C3\", \"&sigma;\"}, // greek small letter sigma,U+03C3 ISOgrk3 -->\n        {\"\\u03C4\", \"&tau;\"}, // greek small letter tau, U+03C4 ISOgrk3 -->\n        {\"\\u03C5\", \"&upsilon;\"}, // greek small letter upsilon,U+03C5 ISOgrk3 -->\n        {\"\\u03C6\", \"&phi;\"}, // greek small letter phi, U+03C6 ISOgrk3 -->\n        {\"\\u03C7\", \"&chi;\"}, // greek small letter chi, U+03C7 ISOgrk3 -->\n        {\"\\u03C8\", \"&psi;\"}, // greek small letter psi, U+03C8 ISOgrk3 -->\n        {\"\\u03C9\", \"&omega;\"}, // greek small letter omega,U+03C9 ISOgrk3 -->\n        {\"\\u03D1\", \"&thetasym;\"}, // greek small letter theta symbol,U+03D1 NEW -->\n        {\"\\u03D2\", \"&upsih;\"}, // greek upsilon with hook symbol,U+03D2 NEW -->\n        {\"\\u03D6\", \"&piv;\"}, // greek pi symbol, U+03D6 ISOgrk3 -->\n        // <!-- General Punctuation -->\n        {\"\\u2022\", \"&bull;\"}, // bullet = black small circle,U+2022 ISOpub -->\n        // <!-- bullet is NOT the same as bullet operator, U+2219 -->\n        {\"\\u2026\", \"&hellip;\"}, // horizontal ellipsis = three dot leader,U+2026 ISOpub -->\n        {\"\\u2032\", \"&prime;\"}, // prime = minutes = feet, U+2032 ISOtech -->\n        {\"\\u2033\", \"&Prime;\"}, // double prime = seconds = inches,U+2033 ISOtech -->\n        {\"\\u203E\", \"&oline;\"}, // overline = spacing overscore,U+203E NEW -->\n        {\"\\u2044\", \"&frasl;\"}, // fraction slash, U+2044 NEW -->\n        // <!-- Letterlike Symbols -->\n        {\"\\u2118\", \"&weierp;\"}, // script capital P = power set= Weierstrass p, U+2118 ISOamso -->\n        {\"\\u2111\", \"&image;\"}, // blackletter capital I = imaginary part,U+2111 ISOamso -->\n        {\"\\u211C\", \"&real;\"}, // blackletter capital R = real part symbol,U+211C ISOamso -->\n        {\"\\u2122\", \"&trade;\"}, // trade mark sign, U+2122 ISOnum -->\n        {\"\\u2135\", \"&alefsym;\"}, // alef symbol = first transfinite cardinal,U+2135 NEW -->\n        // <!-- alef symbol is NOT the same as hebrew letter alef,U+05D0 although the\n        // same glyph could be used to depict both characters -->\n        // <!-- Arrows -->\n        {\"\\u2190\", \"&larr;\"}, // leftwards arrow, U+2190 ISOnum -->\n        {\"\\u2191\", \"&uarr;\"}, // upwards arrow, U+2191 ISOnum-->\n        {\"\\u2192\", \"&rarr;\"}, // rightwards arrow, U+2192 ISOnum -->\n        {\"\\u2193\", \"&darr;\"}, // downwards arrow, U+2193 ISOnum -->\n        {\"\\u2194\", \"&harr;\"}, // left right arrow, U+2194 ISOamsa -->\n        {\"\\u21B5\", \"&crarr;\"}, // downwards arrow with corner leftwards= carriage return, U+21B5 NEW -->\n        {\"\\u21D0\", \"&lArr;\"}, // leftwards double arrow, U+21D0 ISOtech -->\n        // <!-- ISO 10646 does not say that lArr is the same as the 'is implied by'\n        // arrow but also does not have any other character for that function.\n        // So ? lArr canbe used for 'is implied by' as ISOtech suggests -->\n        {\"\\u21D1\", \"&uArr;\"}, // upwards double arrow, U+21D1 ISOamsa -->\n        {\"\\u21D2\", \"&rArr;\"}, // rightwards double arrow,U+21D2 ISOtech -->\n        // <!-- ISO 10646 does not say this is the 'implies' character but does not\n        // have another character with this function so ?rArr can be used for\n        // 'implies' as ISOtech suggests -->\n        {\"\\u21D3\", \"&dArr;\"}, // downwards double arrow, U+21D3 ISOamsa -->\n        {\"\\u21D4\", \"&hArr;\"}, // left right double arrow,U+21D4 ISOamsa -->\n        // <!-- Mathematical Operators -->\n        {\"\\u2200\", \"&forall;\"}, // for all, U+2200 ISOtech -->\n        {\"\\u2202\", \"&part;\"}, // partial differential, U+2202 ISOtech -->\n        {\"\\u2203\", \"&exist;\"}, // there exists, U+2203 ISOtech -->\n        {\"\\u2205\", \"&empty;\"}, // empty set = null set = diameter,U+2205 ISOamso -->\n        {\"\\u2207\", \"&nabla;\"}, // nabla = backward difference,U+2207 ISOtech -->\n        {\"\\u2208\", \"&isin;\"}, // element of, U+2208 ISOtech -->\n        {\"\\u2209\", \"&notin;\"}, // not an element of, U+2209 ISOtech -->\n        {\"\\u220B\", \"&ni;\"}, // contains as member, U+220B ISOtech -->\n        // <!-- should there be a more memorable name than 'ni'? -->\n        {\"\\u220F\", \"&prod;\"}, // n-ary product = product sign,U+220F ISOamsb -->\n        // <!-- prod is NOT the same character as U+03A0 'greek capital letter pi'\n        // though the same glyph might be used for both -->\n        {\"\\u2211\", \"&sum;\"}, // n-ary summation, U+2211 ISOamsb -->\n        // <!-- sum is NOT the same character as U+03A3 'greek capital letter sigma'\n        // though the same glyph might be used for both -->\n        {\"\\u2212\", \"&minus;\"}, // minus sign, U+2212 ISOtech -->\n        {\"\\u2217\", \"&lowast;\"}, // asterisk operator, U+2217 ISOtech -->\n        {\"\\u221A\", \"&radic;\"}, // square root = radical sign,U+221A ISOtech -->\n        {\"\\u221D\", \"&prop;\"}, // proportional to, U+221D ISOtech -->\n        {\"\\u221E\", \"&infin;\"}, // infinity, U+221E ISOtech -->\n        {\"\\u2220\", \"&ang;\"}, // angle, U+2220 ISOamso -->\n        {\"\\u2227\", \"&and;\"}, // logical and = wedge, U+2227 ISOtech -->\n        {\"\\u2228\", \"&or;\"}, // logical or = vee, U+2228 ISOtech -->\n        {\"\\u2229\", \"&cap;\"}, // intersection = cap, U+2229 ISOtech -->\n        {\"\\u222A\", \"&cup;\"}, // union = cup, U+222A ISOtech -->\n        {\"\\u222B\", \"&int;\"}, // integral, U+222B ISOtech -->\n        {\"\\u2234\", \"&there4;\"}, // therefore, U+2234 ISOtech -->\n        {\"\\u223C\", \"&sim;\"}, // tilde operator = varies with = similar to,U+223C ISOtech -->\n        // <!-- tilde operator is NOT the same character as the tilde, U+007E,although\n        // the same glyph might be used to represent both -->\n        {\"\\u2245\", \"&cong;\"}, // approximately equal to, U+2245 ISOtech -->\n        {\"\\u2248\", \"&asymp;\"}, // almost equal to = asymptotic to,U+2248 ISOamsr -->\n        {\"\\u2260\", \"&ne;\"}, // not equal to, U+2260 ISOtech -->\n        {\"\\u2261\", \"&equiv;\"}, // identical to, U+2261 ISOtech -->\n        {\"\\u2264\", \"&le;\"}, // less-than or equal to, U+2264 ISOtech -->\n        {\"\\u2265\", \"&ge;\"}, // greater-than or equal to,U+2265 ISOtech -->\n        {\"\\u2282\", \"&sub;\"}, // subset of, U+2282 ISOtech -->\n        {\"\\u2283\", \"&sup;\"}, // superset of, U+2283 ISOtech -->\n        // <!-- note that nsup, 'not a superset of, U+2283' is not covered by the\n        // Symbol font encoding and is not included. Should it be, for symmetry?\n        // It is in ISOamsn --> <!ENTITY nsub\", \"8836\"},\n        // not a subset of, U+2284 ISOamsn -->\n        {\"\\u2286\", \"&sube;\"}, // subset of or equal to, U+2286 ISOtech -->\n        {\"\\u2287\", \"&supe;\"}, // superset of or equal to,U+2287 ISOtech -->\n        {\"\\u2295\", \"&oplus;\"}, // circled plus = direct sum,U+2295 ISOamsb -->\n        {\"\\u2297\", \"&otimes;\"}, // circled times = vector product,U+2297 ISOamsb -->\n        {\"\\u22A5\", \"&perp;\"}, // up tack = orthogonal to = perpendicular,U+22A5 ISOtech -->\n        {\"\\u22C5\", \"&sdot;\"}, // dot operator, U+22C5 ISOamsb -->\n        // <!-- dot operator is NOT the same character as U+00B7 middle dot -->\n        // <!-- Miscellaneous Technical -->\n        {\"\\u2308\", \"&lceil;\"}, // left ceiling = apl upstile,U+2308 ISOamsc -->\n        {\"\\u2309\", \"&rceil;\"}, // right ceiling, U+2309 ISOamsc -->\n        {\"\\u230A\", \"&lfloor;\"}, // left floor = apl downstile,U+230A ISOamsc -->\n        {\"\\u230B\", \"&rfloor;\"}, // right floor, U+230B ISOamsc -->\n        {\"\\u2329\", \"&lang;\"}, // left-pointing angle bracket = bra,U+2329 ISOtech -->\n        // <!-- lang is NOT the same character as U+003C 'less than' or U+2039 'single left-pointing angle quotation\n        // mark' -->\n        {\"\\u232A\", \"&rang;\"}, // right-pointing angle bracket = ket,U+232A ISOtech -->\n        // <!-- rang is NOT the same character as U+003E 'greater than' or U+203A\n        // 'single right-pointing angle quotation mark' -->\n        // <!-- Geometric Shapes -->\n        {\"\\u25CA\", \"&loz;\"}, // lozenge, U+25CA ISOpub -->\n        // <!-- Miscellaneous Symbols -->\n        {\"\\u2660\", \"&spades;\"}, // black spade suit, U+2660 ISOpub -->\n        // <!-- black here seems to mean filled as opposed to hollow -->\n        {\"\\u2663\", \"&clubs;\"}, // black club suit = shamrock,U+2663 ISOpub -->\n        {\"\\u2665\", \"&hearts;\"}, // black heart suit = valentine,U+2665 ISOpub -->\n        {\"\\u2666\", \"&diams;\"}, // black diamond suit, U+2666 ISOpub -->\n\n        // <!-- Latin Extended-A -->\n        {\"\\u0152\", \"&OElig;\"}, // -- latin capital ligature OE,U+0152 ISOlat2 -->\n        {\"\\u0153\", \"&oelig;\"}, // -- latin small ligature oe, U+0153 ISOlat2 -->\n        // <!-- ligature is a misnomer, this is a separate character in some languages -->\n        {\"\\u0160\", \"&Scaron;\"}, // -- latin capital letter S with caron,U+0160 ISOlat2 -->\n        {\"\\u0161\", \"&scaron;\"}, // -- latin small letter s with caron,U+0161 ISOlat2 -->\n        {\"\\u0178\", \"&Yuml;\"}, // -- latin capital letter Y with diaeresis,U+0178 ISOlat2 -->\n        // <!-- Spacing Modifier Letters -->\n        {\"\\u02C6\", \"&circ;\"}, // -- modifier letter circumflex accent,U+02C6 ISOpub -->\n        {\"\\u02DC\", \"&tilde;\"}, // small tilde, U+02DC ISOdia -->\n        // <!-- General Punctuation -->\n        {\"\\u2002\", \"&ensp;\"}, // en space, U+2002 ISOpub -->\n        {\"\\u2003\", \"&emsp;\"}, // em space, U+2003 ISOpub -->\n        {\"\\u2009\", \"&thinsp;\"}, // thin space, U+2009 ISOpub -->\n        {\"\\u200C\", \"&zwnj;\"}, // zero width non-joiner,U+200C NEW RFC 2070 -->\n        {\"\\u200D\", \"&zwj;\"}, // zero width joiner, U+200D NEW RFC 2070 -->\n        {\"\\u200E\", \"&lrm;\"}, // left-to-right mark, U+200E NEW RFC 2070 -->\n        {\"\\u200F\", \"&rlm;\"}, // right-to-left mark, U+200F NEW RFC 2070 -->\n        {\"\\u2013\", \"&ndash;\"}, // en dash, U+2013 ISOpub -->\n        {\"\\u2014\", \"&mdash;\"}, // em dash, U+2014 ISOpub -->\n        {\"\\u2018\", \"&lsquo;\"}, // left single quotation mark,U+2018 ISOnum -->\n        {\"\\u2019\", \"&rsquo;\"}, // right single quotation mark,U+2019 ISOnum -->\n        {\"\\u201A\", \"&sbquo;\"}, // single low-9 quotation mark, U+201A NEW -->\n        {\"\\u201C\", \"&ldquo;\"}, // left double quotation mark,U+201C ISOnum -->\n        {\"\\u201D\", \"&rdquo;\"}, // right double quotation mark,U+201D ISOnum -->\n        {\"\\u201E\", \"&bdquo;\"}, // double low-9 quotation mark, U+201E NEW -->\n        {\"\\u2020\", \"&dagger;\"}, // dagger, U+2020 ISOpub -->\n        {\"\\u2021\", \"&Dagger;\"}, // double dagger, U+2021 ISOpub -->\n        {\"\\u2030\", \"&permil;\"}, // per mille sign, U+2030 ISOtech -->\n        {\"\\u2039\", \"&lsaquo;\"}, // single left-pointing angle quotation mark,U+2039 ISO proposed -->\n        // <!-- lsaquo is proposed but not yet ISO standardized -->\n        {\"\\u203A\", \"&rsaquo;\"}, // single right-pointing angle quotation mark,U+203A ISO proposed -->\n        // <!-- rsaquo is proposed but not yet ISO standardized -->\n        {\"\\u20AC\", \"&euro;\"}, // -- euro sign, U+20AC NEW -->\n    };",
        "begin_line": 148,
        "end_line": 343,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.EntityArrays",
        "src_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "signature": "org.apache.commons.lang3.text.translate.EntityArrays.HTML40_EXTENDED_UNESCAPE",
        "snippet": "    private static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);",
        "begin_line": 350,
        "end_line": 350,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.EntityArrays",
        "src_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "signature": "org.apache.commons.lang3.text.translate.EntityArrays.BASIC_ESCAPE",
        "snippet": "    private static final String[][] BASIC_ESCAPE = {\n        {\"\\\"\", \"&quot;\"}, // \" - double-quote\n        {\"&\", \"&amp;\"},   // & - ampersand\n        {\"<\", \"&lt;\"},    // < - less-than\n        {\">\", \"&gt;\"},    // > - greater-than\n    };",
        "begin_line": 359,
        "end_line": 364,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.EntityArrays",
        "src_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "signature": "org.apache.commons.lang3.text.translate.EntityArrays.BASIC_UNESCAPE",
        "snippet": "    private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);",
        "begin_line": 371,
        "end_line": 371,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.EntityArrays",
        "src_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "signature": "org.apache.commons.lang3.text.translate.EntityArrays.APOS_ESCAPE",
        "snippet": "    private static final String[][] APOS_ESCAPE = {\n        {\"'\", \"&apos;\"}, // XML apostrophe\n    };",
        "begin_line": 378,
        "end_line": 380,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.EntityArrays",
        "src_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "signature": "org.apache.commons.lang3.text.translate.EntityArrays.APOS_UNESCAPE",
        "snippet": "    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);",
        "begin_line": 387,
        "end_line": 387,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.EntityArrays",
        "src_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "signature": "org.apache.commons.lang3.text.translate.EntityArrays.JAVA_CTRL_CHARS_ESCAPE",
        "snippet": "    private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {\n        {\"\\b\", \"\\\\b\"},\n        {\"\\n\", \"\\\\n\"},\n        {\"\\t\", \"\\\\t\"},\n        {\"\\f\", \"\\\\f\"},\n        {\"\\r\", \"\\\\r\"}\n    };",
        "begin_line": 396,
        "end_line": 402,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.EntityArrays",
        "src_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "signature": "org.apache.commons.lang3.text.translate.EntityArrays.JAVA_CTRL_CHARS_UNESCAPE",
        "snippet": "    private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);",
        "begin_line": 409,
        "end_line": 409,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.UnicodeEscaper",
        "src_path": "src/main/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java",
        "signature": "org.apache.commons.lang3.text.translate.UnicodeEscaper.below",
        "snippet": "    private final int below;",
        "begin_line": 30,
        "end_line": 30,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.UnicodeEscaper",
        "src_path": "src/main/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java",
        "signature": "org.apache.commons.lang3.text.translate.UnicodeEscaper.above",
        "snippet": "    private final int above;",
        "begin_line": 31,
        "end_line": 31,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.UnicodeEscaper",
        "src_path": "src/main/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java",
        "signature": "org.apache.commons.lang3.text.translate.UnicodeEscaper.between",
        "snippet": "    private final boolean between;",
        "begin_line": 32,
        "end_line": 32,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.UnicodeUnescaper",
        "src_path": "src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java",
        "signature": "org.apache.commons.lang3.text.translate.UnicodeUnescaper.options",
        "snippet": "    private final EnumSet<OPTION> options;",
        "begin_line": 36,
        "end_line": 36,
        "comment": " TODO?: Create an OptionsSet class to hide some of the conditional logic below"
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.NumericEntityEscaper",
        "src_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java",
        "signature": "org.apache.commons.lang3.text.translate.NumericEntityEscaper.below",
        "snippet": "    private final int below;",
        "begin_line": 30,
        "end_line": 30,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.NumericEntityEscaper",
        "src_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java",
        "signature": "org.apache.commons.lang3.text.translate.NumericEntityEscaper.above",
        "snippet": "    private final int above;",
        "begin_line": 31,
        "end_line": 31,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.NumericEntityEscaper",
        "src_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java",
        "signature": "org.apache.commons.lang3.text.translate.NumericEntityEscaper.between",
        "snippet": "    private final boolean between;",
        "begin_line": 32,
        "end_line": 32,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.AggregateTranslator",
        "src_path": "src/main/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java",
        "signature": "org.apache.commons.lang3.text.translate.AggregateTranslator.translators",
        "snippet": "    private final CharSequenceTranslator[] translators;",
        "begin_line": 33,
        "end_line": 33,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.LookupTranslator",
        "src_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "signature": "org.apache.commons.lang3.text.translate.LookupTranslator.lookupMap",
        "snippet": "    private final HashMap<CharSequence, CharSequence> lookupMap;",
        "begin_line": 31,
        "end_line": 31,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.LookupTranslator",
        "src_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "signature": "org.apache.commons.lang3.text.translate.LookupTranslator.shortest",
        "snippet": "    private final int shortest;",
        "begin_line": 32,
        "end_line": 32,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.LookupTranslator",
        "src_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "signature": "org.apache.commons.lang3.text.translate.LookupTranslator.longest",
        "snippet": "    private final int longest;",
        "begin_line": 33,
        "end_line": 33,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateFormatUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java",
        "signature": "org.apache.commons.lang3.time.DateFormatUtils.UTC_TIME_ZONE",
        "snippet": "    private static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone(\"GMT\");",
        "begin_line": 39,
        "end_line": 39,
        "comment": "\n     * The UTC time zone (often referred to as GMT).\n     * This is private as it is mutable.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateFormatUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java",
        "signature": "org.apache.commons.lang3.time.DateFormatUtils.ISO_DATETIME_FORMAT",
        "snippet": "    public static final FastDateFormat ISO_DATETIME_FORMAT\n            = FastDateFormat.getInstance(\"yyyy-MM-dd'T'HH:mm:ss\");",
        "begin_line": 44,
        "end_line": 45,
        "comment": "\n     * ISO8601 formatter for date-time without time zone.\n     * The format used is <tt>yyyy-MM-dd'T'HH:mm:ss</tt>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateFormatUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java",
        "signature": "org.apache.commons.lang3.time.DateFormatUtils.ISO_DATETIME_TIME_ZONE_FORMAT",
        "snippet": "    public static final FastDateFormat ISO_DATETIME_TIME_ZONE_FORMAT\n            = FastDateFormat.getInstance(\"yyyy-MM-dd'T'HH:mm:ssZZ\");",
        "begin_line": 51,
        "end_line": 52,
        "comment": "\n     * ISO8601 formatter for date-time with time zone.\n     * The format used is <tt>yyyy-MM-dd'T'HH:mm:ssZZ</tt>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateFormatUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java",
        "signature": "org.apache.commons.lang3.time.DateFormatUtils.ISO_DATE_FORMAT",
        "snippet": "    public static final FastDateFormat ISO_DATE_FORMAT\n            = FastDateFormat.getInstance(\"yyyy-MM-dd\");",
        "begin_line": 58,
        "end_line": 59,
        "comment": "\n     * ISO8601 formatter for date without time zone.\n     * The format used is <tt>yyyy-MM-dd</tt>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateFormatUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java",
        "signature": "org.apache.commons.lang3.time.DateFormatUtils.ISO_DATE_TIME_ZONE_FORMAT",
        "snippet": "    public static final FastDateFormat ISO_DATE_TIME_ZONE_FORMAT\n            = FastDateFormat.getInstance(\"yyyy-MM-ddZZ\");",
        "begin_line": 67,
        "end_line": 68,
        "comment": "\n     * ISO8601-like formatter for date with time zone.\n     * The format used is <tt>yyyy-MM-ddZZ</tt>.\n     * This pattern does not comply with the formal ISO8601 specification\n     * as the standard does not allow a time zone  without a time.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateFormatUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java",
        "signature": "org.apache.commons.lang3.time.DateFormatUtils.ISO_TIME_FORMAT",
        "snippet": "    public static final FastDateFormat ISO_TIME_FORMAT\n            = FastDateFormat.getInstance(\"'T'HH:mm:ss\");",
        "begin_line": 74,
        "end_line": 75,
        "comment": "\n     * ISO8601 formatter for time without time zone.\n     * The format used is <tt>'T'HH:mm:ss</tt>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateFormatUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java",
        "signature": "org.apache.commons.lang3.time.DateFormatUtils.ISO_TIME_TIME_ZONE_FORMAT",
        "snippet": "    public static final FastDateFormat ISO_TIME_TIME_ZONE_FORMAT\n            = FastDateFormat.getInstance(\"'T'HH:mm:ssZZ\");",
        "begin_line": 81,
        "end_line": 82,
        "comment": "\n     * ISO8601 formatter for time with time zone.\n     * The format used is <tt>'T'HH:mm:ssZZ</tt>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateFormatUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java",
        "signature": "org.apache.commons.lang3.time.DateFormatUtils.ISO_TIME_NO_T_FORMAT",
        "snippet": "    public static final FastDateFormat ISO_TIME_NO_T_FORMAT\n            = FastDateFormat.getInstance(\"HH:mm:ss\");",
        "begin_line": 90,
        "end_line": 91,
        "comment": "\n     * ISO8601-like formatter for time without time zone.\n     * The format used is <tt>HH:mm:ss</tt>.\n     * This pattern does not comply with the formal ISO8601 specification\n     * as the standard requires the 'T' prefix for times.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateFormatUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java",
        "signature": "org.apache.commons.lang3.time.DateFormatUtils.ISO_TIME_NO_T_TIME_ZONE_FORMAT",
        "snippet": "    public static final FastDateFormat ISO_TIME_NO_T_TIME_ZONE_FORMAT\n            = FastDateFormat.getInstance(\"HH:mm:ssZZ\");",
        "begin_line": 99,
        "end_line": 100,
        "comment": "\n     * ISO8601-like formatter for time with time zone.\n     * The format used is <tt>HH:mm:ssZZ</tt>.\n     * This pattern does not comply with the formal ISO8601 specification\n     * as the standard requires the 'T' prefix for times.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateFormatUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java",
        "signature": "org.apache.commons.lang3.time.DateFormatUtils.SMTP_DATETIME_FORMAT",
        "snippet": "    public static final FastDateFormat SMTP_DATETIME_FORMAT\n            = FastDateFormat.getInstance(\"EEE, dd MMM yyyy HH:mm:ss Z\", Locale.US);",
        "begin_line": 106,
        "end_line": 107,
        "comment": "\n     * SMTP (and probably other) date headers.\n     * The format used is <tt>EEE, dd MMM yyyy HH:mm:ss Z</tt> in US locale.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DurationFormatUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java",
        "signature": "org.apache.commons.lang3.time.DurationFormatUtils.ISO_EXTENDED_FORMAT_PATTERN",
        "snippet": "    public static final String ISO_EXTENDED_FORMAT_PATTERN = \"'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'\";",
        "begin_line": 63,
        "end_line": 63,
        "comment": "\n     * <p>Pattern used with <code>FastDateFormat</code> and <code>SimpleDateFormat</code>\n     * for the ISO8601 period format used in durations.</p>\n     * \n     * @see org.apache.commons.lang3.time.FastDateFormat\n     * @see java.text.SimpleDateFormat\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DurationFormatUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java",
        "signature": "org.apache.commons.lang3.time.DurationFormatUtils.y",
        "snippet": "    static final Object y = \"y\";",
        "begin_line": 469,
        "end_line": 469,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.DurationFormatUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java",
        "signature": "org.apache.commons.lang3.time.DurationFormatUtils.M",
        "snippet": "    static final Object M = \"M\";",
        "begin_line": 470,
        "end_line": 470,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.DurationFormatUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java",
        "signature": "org.apache.commons.lang3.time.DurationFormatUtils.d",
        "snippet": "    static final Object d = \"d\";",
        "begin_line": 471,
        "end_line": 471,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.DurationFormatUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java",
        "signature": "org.apache.commons.lang3.time.DurationFormatUtils.H",
        "snippet": "    static final Object H = \"H\";",
        "begin_line": 472,
        "end_line": 472,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.DurationFormatUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java",
        "signature": "org.apache.commons.lang3.time.DurationFormatUtils.m",
        "snippet": "    static final Object m = \"m\";",
        "begin_line": 473,
        "end_line": 473,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.DurationFormatUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java",
        "signature": "org.apache.commons.lang3.time.DurationFormatUtils.s",
        "snippet": "    static final Object s = \"s\";",
        "begin_line": 474,
        "end_line": 474,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.DurationFormatUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java",
        "signature": "org.apache.commons.lang3.time.DurationFormatUtils.S",
        "snippet": "    static final Object S = \"S\";",
        "begin_line": 475,
        "end_line": 475,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.Token",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java",
        "signature": "org.apache.commons.lang3.time.Token.value",
        "snippet": "        private Object value;",
        "begin_line": 562,
        "end_line": 562,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.Token",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java",
        "signature": "org.apache.commons.lang3.time.Token.count",
        "snippet": "        private int count;",
        "begin_line": 563,
        "end_line": 563,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "signature": "org.apache.commons.lang3.time.DateUtils.MILLIS_PER_SECOND",
        "snippet": "    public static final long MILLIS_PER_SECOND = 1000;",
        "begin_line": 51,
        "end_line": 51,
        "comment": "\n     * Number of milliseconds in a standard second.\n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "signature": "org.apache.commons.lang3.time.DateUtils.MILLIS_PER_MINUTE",
        "snippet": "    public static final long MILLIS_PER_MINUTE = 60 * MILLIS_PER_SECOND;",
        "begin_line": 56,
        "end_line": 56,
        "comment": "\n     * Number of milliseconds in a standard minute.\n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "signature": "org.apache.commons.lang3.time.DateUtils.MILLIS_PER_HOUR",
        "snippet": "    public static final long MILLIS_PER_HOUR = 60 * MILLIS_PER_MINUTE;",
        "begin_line": 61,
        "end_line": 61,
        "comment": "\n     * Number of milliseconds in a standard hour.\n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "signature": "org.apache.commons.lang3.time.DateUtils.MILLIS_PER_DAY",
        "snippet": "    public static final long MILLIS_PER_DAY = 24 * MILLIS_PER_HOUR;",
        "begin_line": 66,
        "end_line": 66,
        "comment": "\n     * Number of milliseconds in a standard day.\n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "signature": "org.apache.commons.lang3.time.DateUtils.SEMI_MONTH",
        "snippet": "    public static final int SEMI_MONTH = 1001;",
        "begin_line": 72,
        "end_line": 72,
        "comment": "\n     * This is half a month, so this represents whether a date is in the top\n     * or bottom half of the month.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "signature": "org.apache.commons.lang3.time.DateUtils.fields",
        "snippet": "    private static final int[][] fields = {\n            {Calendar.MILLISECOND},\n            {Calendar.SECOND},\n            {Calendar.MINUTE},\n            {Calendar.HOUR_OF_DAY, Calendar.HOUR},\n            {Calendar.DATE, Calendar.DAY_OF_MONTH, Calendar.AM_PM \n                /* Calendar.DAY_OF_YEAR, Calendar.DAY_OF_WEEK, Calendar.DAY_OF_WEEK_IN_MONTH */\n            },\n            {Calendar.MONTH, DateUtils.SEMI_MONTH},\n            {Calendar.YEAR},\n            {Calendar.ERA}};",
        "begin_line": 74,
        "end_line": 84,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "signature": "org.apache.commons.lang3.time.DateUtils.RANGE_WEEK_SUNDAY",
        "snippet": "    public static final int RANGE_WEEK_SUNDAY = 1;",
        "begin_line": 89,
        "end_line": 89,
        "comment": "\n     * A week range, starting on Sunday.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "signature": "org.apache.commons.lang3.time.DateUtils.RANGE_WEEK_MONDAY",
        "snippet": "    public static final int RANGE_WEEK_MONDAY = 2;",
        "begin_line": 93,
        "end_line": 93,
        "comment": "\n     * A week range, starting on Monday.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "signature": "org.apache.commons.lang3.time.DateUtils.RANGE_WEEK_RELATIVE",
        "snippet": "    public static final int RANGE_WEEK_RELATIVE = 3;",
        "begin_line": 97,
        "end_line": 97,
        "comment": "\n     * A week range, starting on the day focused.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "signature": "org.apache.commons.lang3.time.DateUtils.RANGE_WEEK_CENTER",
        "snippet": "    public static final int RANGE_WEEK_CENTER = 4;",
        "begin_line": 101,
        "end_line": 101,
        "comment": "\n     * A week range, centered around the day focused.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "signature": "org.apache.commons.lang3.time.DateUtils.RANGE_MONTH_SUNDAY",
        "snippet": "    public static final int RANGE_MONTH_SUNDAY = 5;",
        "begin_line": 105,
        "end_line": 105,
        "comment": "\n     * A month range, the week starting on Sunday.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "signature": "org.apache.commons.lang3.time.DateUtils.RANGE_MONTH_MONDAY",
        "snippet": "    public static final int RANGE_MONTH_MONDAY = 6;",
        "begin_line": 109,
        "end_line": 109,
        "comment": "\n     * A month range, the week starting on Monday.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "signature": "org.apache.commons.lang3.time.DateUtils.MODIFY_TRUNCATE",
        "snippet": "    private static final int MODIFY_TRUNCATE = 0;",
        "begin_line": 115,
        "end_line": 115,
        "comment": "\n     * Constant marker for truncating.\n     * @since 3.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "signature": "org.apache.commons.lang3.time.DateUtils.MODIFY_ROUND",
        "snippet": "    private static final int MODIFY_ROUND = 1;",
        "begin_line": 120,
        "end_line": 120,
        "comment": "\n     * Constant marker for rounding.\n     * @since 3.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "signature": "org.apache.commons.lang3.time.DateUtils.MODIFY_CEILING",
        "snippet": "    private static final int MODIFY_CEILING = 2;",
        "begin_line": 125,
        "end_line": 125,
        "comment": "\n     * Constant marker for ceiling.\n     * @since 3.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateIterator",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "signature": "org.apache.commons.lang3.time.DateIterator.endFinal",
        "snippet": "        private final Calendar endFinal;",
        "begin_line": 1782,
        "end_line": 1782,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.DateIterator",
        "src_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "signature": "org.apache.commons.lang3.time.DateIterator.spot",
        "snippet": "        private final Calendar spot;",
        "begin_line": 1783,
        "end_line": 1783,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.FastDateFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.FastDateFormat.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1L;",
        "begin_line": 82,
        "end_line": 82,
        "comment": "\n     * Required for serialization support.\n     *\n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.FastDateFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.FastDateFormat.FULL",
        "snippet": "    public static final int FULL = DateFormat.FULL;",
        "begin_line": 87,
        "end_line": 87,
        "comment": "\n     * FULL locale dependent date or time style.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.FastDateFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.FastDateFormat.LONG",
        "snippet": "    public static final int LONG = DateFormat.LONG;",
        "begin_line": 91,
        "end_line": 91,
        "comment": "\n     * LONG locale dependent date or time style.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.FastDateFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.FastDateFormat.MEDIUM",
        "snippet": "    public static final int MEDIUM = DateFormat.MEDIUM;",
        "begin_line": 95,
        "end_line": 95,
        "comment": "\n     * MEDIUM locale dependent date or time style.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.FastDateFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.FastDateFormat.SHORT",
        "snippet": "    public static final int SHORT = DateFormat.SHORT;",
        "begin_line": 99,
        "end_line": 99,
        "comment": "\n     * SHORT locale dependent date or time style.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.FastDateFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.FastDateFormat.cache",
        "snippet": "    private static final FormatCache<FastDateFormat> cache= new FormatCache<FastDateFormat>() {\n        @Override\n        protected FastDateFormat createInstance(String pattern,    TimeZone timeZone, Locale locale) {\n            return new FastDateFormat(pattern, timeZone, locale);\n        }\n    };",
        "begin_line": 101,
        "end_line": 106,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.FastDateFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.FastDateFormat.cTimeZoneDisplayCache",
        "snippet": "    private static ConcurrentMap<TimeZoneDisplayKey, String> cTimeZoneDisplayCache =\n        new ConcurrentHashMap<TimeZoneDisplayKey, String>(7);",
        "begin_line": 108,
        "end_line": 109,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.FastDateFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.FastDateFormat.mPattern",
        "snippet": "    private final String mPattern;",
        "begin_line": 114,
        "end_line": 114,
        "comment": "\n     * The pattern.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.FastDateFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.FastDateFormat.mTimeZone",
        "snippet": "    private final TimeZone mTimeZone;",
        "begin_line": 118,
        "end_line": 118,
        "comment": "\n     * The time zone.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.FastDateFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.FastDateFormat.mLocale",
        "snippet": "    private final Locale mLocale;",
        "begin_line": 122,
        "end_line": 122,
        "comment": "\n     * The locale.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.FastDateFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.FastDateFormat.mRules",
        "snippet": "    private transient Rule[] mRules;",
        "begin_line": 126,
        "end_line": 126,
        "comment": "\n     * The parsed rules.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.FastDateFormat",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.FastDateFormat.mMaxLengthEstimate",
        "snippet": "    private transient int mMaxLengthEstimate;",
        "begin_line": 130,
        "end_line": 130,
        "comment": "\n     * The estimated maximum length.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.CharacterLiteral",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.CharacterLiteral.mValue",
        "snippet": "        private final char mValue;",
        "begin_line": 922,
        "end_line": 922,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.StringLiteral",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.StringLiteral.mValue",
        "snippet": "        private final String mValue;",
        "begin_line": 953,
        "end_line": 953,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.TextField",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.TextField.mField",
        "snippet": "        private final int mField;",
        "begin_line": 984,
        "end_line": 984,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.TextField",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.TextField.mValues",
        "snippet": "        private final String[] mValues;",
        "begin_line": 985,
        "end_line": 985,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.UnpaddedNumberField",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.UnpaddedNumberField.mField",
        "snippet": "        private final int mField;",
        "begin_line": 1025,
        "end_line": 1025,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.UnpaddedMonthField",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.UnpaddedMonthField.INSTANCE",
        "snippet": "        static final UnpaddedMonthField INSTANCE = new UnpaddedMonthField();",
        "begin_line": 1069,
        "end_line": 1069,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.PaddedNumberField",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.PaddedNumberField.mField",
        "snippet": "        private final int mField;",
        "begin_line": 1110,
        "end_line": 1110,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.PaddedNumberField",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.PaddedNumberField.mSize",
        "snippet": "        private final int mSize;",
        "begin_line": 1111,
        "end_line": 1111,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.TwoDigitNumberField",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.TwoDigitNumberField.mField",
        "snippet": "        private final int mField;",
        "begin_line": 1172,
        "end_line": 1172,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.TwoDigitYearField",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.TwoDigitYearField.INSTANCE",
        "snippet": "        static final TwoDigitYearField INSTANCE = new TwoDigitYearField();",
        "begin_line": 1214,
        "end_line": 1214,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.TwoDigitMonthField",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.TwoDigitMonthField.INSTANCE",
        "snippet": "        static final TwoDigitMonthField INSTANCE = new TwoDigitMonthField();",
        "begin_line": 1250,
        "end_line": 1250,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.TwelveHourField",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.TwelveHourField.mRule",
        "snippet": "        private final NumberRule mRule;",
        "begin_line": 1286,
        "end_line": 1286,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.TwentyFourHourField",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.TwentyFourHourField.mRule",
        "snippet": "        private final NumberRule mRule;",
        "begin_line": 1328,
        "end_line": 1328,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.TimeZoneNameRule",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.TimeZoneNameRule.mTimeZone",
        "snippet": "        private final TimeZone mTimeZone;",
        "begin_line": 1370,
        "end_line": 1370,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.TimeZoneNameRule",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.TimeZoneNameRule.mStandard",
        "snippet": "        private final String mStandard;",
        "begin_line": 1371,
        "end_line": 1371,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.TimeZoneNameRule",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.TimeZoneNameRule.mDaylight",
        "snippet": "        private final String mDaylight;",
        "begin_line": 1372,
        "end_line": 1372,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.TimeZoneNumberRule",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.TimeZoneNumberRule.INSTANCE_COLON",
        "snippet": "        static final TimeZoneNumberRule INSTANCE_COLON = new TimeZoneNumberRule(true);",
        "begin_line": 1412,
        "end_line": 1412,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.TimeZoneNumberRule",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.TimeZoneNumberRule.INSTANCE_NO_COLON",
        "snippet": "        static final TimeZoneNumberRule INSTANCE_NO_COLON = new TimeZoneNumberRule(false);",
        "begin_line": 1413,
        "end_line": 1413,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.TimeZoneNumberRule",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.TimeZoneNumberRule.mColon",
        "snippet": "        final boolean mColon;",
        "begin_line": 1415,
        "end_line": 1415,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.TimeZoneDisplayKey",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.TimeZoneDisplayKey.mTimeZone",
        "snippet": "        private final TimeZone mTimeZone;",
        "begin_line": 1465,
        "end_line": 1465,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.TimeZoneDisplayKey",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.TimeZoneDisplayKey.mStyle",
        "snippet": "        private final int mStyle;",
        "begin_line": 1466,
        "end_line": 1466,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.TimeZoneDisplayKey",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang3.time.TimeZoneDisplayKey.mLocale",
        "snippet": "        private final Locale mLocale;",
        "begin_line": 1467,
        "end_line": 1467,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.StopWatch",
        "src_path": "src/main/java/org/apache/commons/lang3/time/StopWatch.java",
        "signature": "org.apache.commons.lang3.time.StopWatch.NANO_2_MILLIS",
        "snippet": "    private static final long NANO_2_MILLIS = 1000000L;",
        "begin_line": 60,
        "end_line": 60,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.StopWatch",
        "src_path": "src/main/java/org/apache/commons/lang3/time/StopWatch.java",
        "signature": "org.apache.commons.lang3.time.StopWatch.STATE_UNSTARTED",
        "snippet": "    private static final int STATE_UNSTARTED = 0;",
        "begin_line": 63,
        "end_line": 63,
        "comment": " running states"
    },
    {
        "class_name": "org.apache.commons.lang3.time.StopWatch",
        "src_path": "src/main/java/org/apache/commons/lang3/time/StopWatch.java",
        "signature": "org.apache.commons.lang3.time.StopWatch.STATE_RUNNING",
        "snippet": "    private static final int STATE_RUNNING = 1;",
        "begin_line": 65,
        "end_line": 65,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.StopWatch",
        "src_path": "src/main/java/org/apache/commons/lang3/time/StopWatch.java",
        "signature": "org.apache.commons.lang3.time.StopWatch.STATE_STOPPED",
        "snippet": "    private static final int STATE_STOPPED = 2;",
        "begin_line": 67,
        "end_line": 67,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.StopWatch",
        "src_path": "src/main/java/org/apache/commons/lang3/time/StopWatch.java",
        "signature": "org.apache.commons.lang3.time.StopWatch.STATE_SUSPENDED",
        "snippet": "    private static final int STATE_SUSPENDED = 3;",
        "begin_line": 69,
        "end_line": 69,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.StopWatch",
        "src_path": "src/main/java/org/apache/commons/lang3/time/StopWatch.java",
        "signature": "org.apache.commons.lang3.time.StopWatch.STATE_UNSPLIT",
        "snippet": "    private static final int STATE_UNSPLIT = 10;",
        "begin_line": 72,
        "end_line": 72,
        "comment": " split state"
    },
    {
        "class_name": "org.apache.commons.lang3.time.StopWatch",
        "src_path": "src/main/java/org/apache/commons/lang3/time/StopWatch.java",
        "signature": "org.apache.commons.lang3.time.StopWatch.STATE_SPLIT",
        "snippet": "    private static final int STATE_SPLIT = 11;",
        "begin_line": 74,
        "end_line": 74,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.StopWatch",
        "src_path": "src/main/java/org/apache/commons/lang3/time/StopWatch.java",
        "signature": "org.apache.commons.lang3.time.StopWatch.runningState",
        "snippet": "    private int runningState = STATE_UNSTARTED;",
        "begin_line": 79,
        "end_line": 79,
        "comment": "\n     * The current running state of the StopWatch.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.StopWatch",
        "src_path": "src/main/java/org/apache/commons/lang3/time/StopWatch.java",
        "signature": "org.apache.commons.lang3.time.StopWatch.splitState",
        "snippet": "    private int splitState = STATE_UNSPLIT;",
        "begin_line": 84,
        "end_line": 84,
        "comment": "\n     * Whether the stopwatch has a split time recorded.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.StopWatch",
        "src_path": "src/main/java/org/apache/commons/lang3/time/StopWatch.java",
        "signature": "org.apache.commons.lang3.time.StopWatch.startTime",
        "snippet": "    private long startTime;",
        "begin_line": 89,
        "end_line": 89,
        "comment": "\n     * The start time.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.StopWatch",
        "src_path": "src/main/java/org/apache/commons/lang3/time/StopWatch.java",
        "signature": "org.apache.commons.lang3.time.StopWatch.startTimeMillis",
        "snippet": "    private long startTimeMillis;",
        "begin_line": 96,
        "end_line": 96,
        "comment": "\n     * The start time in Millis - nanoTime is only for elapsed time so we \n     * need to also store the currentTimeMillis to maintain the old \n     * getStartTime API.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.StopWatch",
        "src_path": "src/main/java/org/apache/commons/lang3/time/StopWatch.java",
        "signature": "org.apache.commons.lang3.time.StopWatch.stopTime",
        "snippet": "    private long stopTime;",
        "begin_line": 101,
        "end_line": 101,
        "comment": "\n     * The stop time.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.FormatCache",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FormatCache.java",
        "signature": "org.apache.commons.lang3.time.FormatCache.NONE",
        "snippet": "    static final int NONE= -1;",
        "begin_line": 39,
        "end_line": 39,
        "comment": "\n     * No date or no time.  Used in same parameters as DateFormat.SHORT or DateFormat.LONG\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.time.FormatCache",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FormatCache.java",
        "signature": "org.apache.commons.lang3.time.FormatCache.cInstanceCache",
        "snippet": "    private final ConcurrentMap<MultipartKey, F> cInstanceCache \n        = new ConcurrentHashMap<MultipartKey, F>(7);",
        "begin_line": 41,
        "end_line": 42,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.FormatCache",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FormatCache.java",
        "signature": "org.apache.commons.lang3.time.FormatCache.cDateTimeInstanceCache",
        "snippet": "    private final ConcurrentMap<MultipartKey, String> cDateTimeInstanceCache \n        = new ConcurrentHashMap<MultipartKey, String>(7);",
        "begin_line": 44,
        "end_line": 45,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.MultipartKey",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FormatCache.java",
        "signature": "org.apache.commons.lang3.time.MultipartKey.keys",
        "snippet": "        private final Object[] keys;",
        "begin_line": 159,
        "end_line": 159,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.time.MultipartKey",
        "src_path": "src/main/java/org/apache/commons/lang3/time/FormatCache.java",
        "signature": "org.apache.commons.lang3.time.MultipartKey.hashCode",
        "snippet": "        private int hashCode;",
        "begin_line": 160,
        "end_line": 160,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ReflectionToStringBuilder",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java",
        "signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder.appendStatics",
        "snippet": "    private boolean appendStatics = false;",
        "begin_line": 357,
        "end_line": 357,
        "comment": "\n     * Whether or not to append static fields.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ReflectionToStringBuilder",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java",
        "signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder.appendTransients",
        "snippet": "    private boolean appendTransients = false;",
        "begin_line": 362,
        "end_line": 362,
        "comment": "\n     * Whether or not to append transient fields.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ReflectionToStringBuilder",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java",
        "signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder.excludeFieldNames",
        "snippet": "    protected String[] excludeFieldNames;",
        "begin_line": 369,
        "end_line": 369,
        "comment": "\n     * Which field names to exclude from output. Intended for fields like <code>\"password\"</code>.\n     *\n     * @since 3.0 this is protected instead of private\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ReflectionToStringBuilder",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java",
        "signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder.upToClass",
        "snippet": "    private Class<?> upToClass = null;",
        "begin_line": 374,
        "end_line": 374,
        "comment": "\n     * The last super class to stop appending fields for.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.EqualsBuilder",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java",
        "signature": "org.apache.commons.lang3.builder.EqualsBuilder.REGISTRY",
        "snippet": "    private static final ThreadLocal<Set<Pair<IDKey, IDKey>>> REGISTRY = new ThreadLocal<Set<Pair<IDKey, IDKey>>>();",
        "begin_line": 92,
        "end_line": 92,
        "comment": "\n     * <p>\n     * A registry of objects used by reflection methods to detect cyclical object references and avoid infinite loops.\n     * </p>\n     *\n     * @since 3.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.EqualsBuilder",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java",
        "signature": "org.apache.commons.lang3.builder.EqualsBuilder.isEquals",
        "snippet": "    private boolean isEquals = true;",
        "begin_line": 214,
        "end_line": 214,
        "comment": "\n     * If the fields tested are equals.\n     * The default value is <code>true</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringBuilder",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringBuilder.java",
        "signature": "org.apache.commons.lang3.builder.ToStringBuilder.defaultStyle",
        "snippet": "    private static volatile ToStringStyle defaultStyle = ToStringStyle.DEFAULT_STYLE;",
        "begin_line": 94,
        "end_line": 94,
        "comment": "\n     * The default style of output to use, not null.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringBuilder",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringBuilder.java",
        "signature": "org.apache.commons.lang3.builder.ToStringBuilder.buffer",
        "snippet": "    private final StringBuffer buffer;",
        "begin_line": 208,
        "end_line": 208,
        "comment": "\n     * Current toString buffer, not null.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringBuilder",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringBuilder.java",
        "signature": "org.apache.commons.lang3.builder.ToStringBuilder.object",
        "snippet": "    private final Object object;",
        "begin_line": 212,
        "end_line": 212,
        "comment": "\n     * The object being output, may be null.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringBuilder",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringBuilder.java",
        "signature": "org.apache.commons.lang3.builder.ToStringBuilder.style",
        "snippet": "    private final ToStringStyle style;",
        "begin_line": 216,
        "end_line": 216,
        "comment": "\n     * The style of output to use, not null.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.HashCodeBuilder",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java",
        "signature": "org.apache.commons.lang3.builder.HashCodeBuilder.REGISTRY",
        "snippet": "    private static final ThreadLocal<Set<IDKey>> REGISTRY = new ThreadLocal<Set<IDKey>>();",
        "begin_line": 108,
        "end_line": 108,
        "comment": "\n     * <p>\n     * A registry of objects used by reflection methods to detect cyclical object references and avoid infinite loops.\n     * </p>\n     *\n     * @since 2.3\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.HashCodeBuilder",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java",
        "signature": "org.apache.commons.lang3.builder.HashCodeBuilder.iConstant",
        "snippet": "    private final int iConstant;",
        "begin_line": 504,
        "end_line": 504,
        "comment": "\n     * Constant to use in building the hashCode.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.HashCodeBuilder",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java",
        "signature": "org.apache.commons.lang3.builder.HashCodeBuilder.iTotal",
        "snippet": "    private int iTotal = 0;",
        "begin_line": 509,
        "end_line": 509,
        "comment": "\n     * Running total of the hashCode.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.CompareToBuilder",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java",
        "signature": "org.apache.commons.lang3.builder.CompareToBuilder.comparison",
        "snippet": "    private int comparison;",
        "begin_line": 93,
        "end_line": 93,
        "comment": "\n     * Current state of the comparison as appended fields are checked.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.StandardToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/StandardToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.StandardToStringStyle.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1L;",
        "begin_line": 38,
        "end_line": 38,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.IDKey",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/IDKey.java",
        "signature": "org.apache.commons.lang3.builder.IDKey.value",
        "snippet": "        private final Object value;",
        "begin_line": 32,
        "end_line": 32,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.builder.IDKey",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/IDKey.java",
        "signature": "org.apache.commons.lang3.builder.IDKey.id",
        "snippet": "        private final int id;",
        "begin_line": 33,
        "end_line": 33,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -2587890625525655916L;",
        "begin_line": 71,
        "end_line": 71,
        "comment": "\n     * Serialization version ID.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.DEFAULT_STYLE",
        "snippet": "    public static final ToStringStyle DEFAULT_STYLE = new DefaultToStringStyle();",
        "begin_line": 81,
        "end_line": 81,
        "comment": "\n     * The default toString style. Using the Using the <code>Person</code>\n     * example from {@link ToStringBuilder}, the output would look like this:\n     *\n     * <pre>\n     * Person@182f0db[name=John Doe,age=33,smoker=false]\n     * </pre>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.MULTI_LINE_STYLE",
        "snippet": "    public static final ToStringStyle MULTI_LINE_STYLE = new MultiLineToStringStyle();",
        "begin_line": 95,
        "end_line": 95,
        "comment": "\n     * The multi line toString style. Using the Using the <code>Person</code>\n     * example from {@link ToStringBuilder}, the output would look like this:\n     *\n     * <pre>\n     * Person@182f0db[\n     *   name=John Doe\n     *   age=33\n     *   smoker=false\n     * ]\n     * </pre>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.NO_FIELD_NAMES_STYLE",
        "snippet": "    public static final ToStringStyle NO_FIELD_NAMES_STYLE = new NoFieldNameToStringStyle();",
        "begin_line": 106,
        "end_line": 106,
        "comment": "\n     * The no field names toString style. Using the Using the\n     * <code>Person</code> example from {@link ToStringBuilder}, the output\n     * would look like this:\n     *\n     * <pre>\n     * Person@182f0db[John Doe,33,false]\n     * </pre>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.SHORT_PREFIX_STYLE",
        "snippet": "    public static final ToStringStyle SHORT_PREFIX_STYLE = new ShortPrefixToStringStyle();",
        "begin_line": 118,
        "end_line": 118,
        "comment": "\n     * The short prefix toString style. Using the <code>Person</code> example\n     * from {@link ToStringBuilder}, the output would look like this:\n     *\n     * <pre>\n     * Person[name=John Doe,age=33,smoker=false]\n     * </pre>\n     *\n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.SIMPLE_STYLE",
        "snippet": "    public static final ToStringStyle SIMPLE_STYLE = new SimpleToStringStyle();",
        "begin_line": 128,
        "end_line": 128,
        "comment": "\n     * The simple toString style. Using the Using the <code>Person</code>\n     * example from {@link ToStringBuilder}, the output would look like this:\n     *\n     * <pre>\n     * John Doe,33,false\n     * </pre>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.REGISTRY",
        "snippet": "    private static final ThreadLocal<WeakHashMap<Object, Object>> REGISTRY =\n        new ThreadLocal<WeakHashMap<Object,Object>>();",
        "begin_line": 136,
        "end_line": 137,
        "comment": "\n     * <p>\n     * A registry of objects used by <code>reflectionToString</code> methods\n     * to detect cyclical object references and avoid infinite loops.\n     * </p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.useFieldNames",
        "snippet": "    private boolean useFieldNames = true;",
        "begin_line": 213,
        "end_line": 213,
        "comment": "\n     * Whether to use the field names, the default is <code>true</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.useClassName",
        "snippet": "    private boolean useClassName = true;",
        "begin_line": 218,
        "end_line": 218,
        "comment": "\n     * Whether to use the class name, the default is <code>true</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.useShortClassName",
        "snippet": "    private boolean useShortClassName = false;",
        "begin_line": 223,
        "end_line": 223,
        "comment": "\n     * Whether to use short class names, the default is <code>false</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.useIdentityHashCode",
        "snippet": "    private boolean useIdentityHashCode = true;",
        "begin_line": 228,
        "end_line": 228,
        "comment": "\n     * Whether to use the identity hash code, the default is <code>true</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.contentStart",
        "snippet": "    private String contentStart = \"[\";",
        "begin_line": 233,
        "end_line": 233,
        "comment": "\n     * The content start <code>'['</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.contentEnd",
        "snippet": "    private String contentEnd = \"]\";",
        "begin_line": 238,
        "end_line": 238,
        "comment": "\n     * The content end <code>']'</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.fieldNameValueSeparator",
        "snippet": "    private String fieldNameValueSeparator = \"=\";",
        "begin_line": 243,
        "end_line": 243,
        "comment": "\n     * The field name value separator <code>'='</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.fieldSeparatorAtStart",
        "snippet": "    private boolean fieldSeparatorAtStart = false;",
        "begin_line": 248,
        "end_line": 248,
        "comment": "\n     * Whether the field separator should be added before any other fields.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.fieldSeparatorAtEnd",
        "snippet": "    private boolean fieldSeparatorAtEnd = false;",
        "begin_line": 253,
        "end_line": 253,
        "comment": "\n     * Whether the field separator should be added after any other fields.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.fieldSeparator",
        "snippet": "    private String fieldSeparator = \",\";",
        "begin_line": 258,
        "end_line": 258,
        "comment": "\n     * The field separator <code>','</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.arrayStart",
        "snippet": "    private String arrayStart = \"{\";",
        "begin_line": 263,
        "end_line": 263,
        "comment": "\n     * The array start <code>'{'</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.arraySeparator",
        "snippet": "    private String arraySeparator = \",\";",
        "begin_line": 268,
        "end_line": 268,
        "comment": "\n     * The array separator <code>','</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.arrayContentDetail",
        "snippet": "    private boolean arrayContentDetail = true;",
        "begin_line": 273,
        "end_line": 273,
        "comment": "\n     * The detail for array content.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.arrayEnd",
        "snippet": "    private String arrayEnd = \"}\";",
        "begin_line": 278,
        "end_line": 278,
        "comment": "\n     * The array end <code>'}'</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.defaultFullDetail",
        "snippet": "    private boolean defaultFullDetail = true;",
        "begin_line": 284,
        "end_line": 284,
        "comment": "\n     * The value to use when fullDetail is <code>null</code>,\n     * the default value is <code>true</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.nullText",
        "snippet": "    private String nullText = \"<null>\";",
        "begin_line": 289,
        "end_line": 289,
        "comment": "\n     * The <code>null</code> text <code>'&lt;null&gt;'</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.sizeStartText",
        "snippet": "    private String sizeStartText = \"<size=\";",
        "begin_line": 294,
        "end_line": 294,
        "comment": "\n     * The summary size text start <code>'<size'</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.sizeEndText",
        "snippet": "    private String sizeEndText = \">\";",
        "begin_line": 299,
        "end_line": 299,
        "comment": "\n     * The summary size text start <code>'&gt;'</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.summaryObjectStartText",
        "snippet": "    private String summaryObjectStartText = \"<\";",
        "begin_line": 304,
        "end_line": 304,
        "comment": "\n     * The summary object text start <code>'&lt;'</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ToStringStyle.summaryObjectEndText",
        "snippet": "    private String summaryObjectEndText = \">\";",
        "begin_line": 309,
        "end_line": 309,
        "comment": "\n     * The summary object text start <code>'&gt;'</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.DefaultToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.DefaultToStringStyle.serialVersionUID",
        "snippet": "        private static final long serialVersionUID = 1L;",
        "begin_line": 2110,
        "end_line": 2110,
        "comment": "\n         * Required for serialization support.\n         *\n         * @see java.io.Serializable\n         "
    },
    {
        "class_name": "org.apache.commons.lang3.builder.NoFieldNameToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.NoFieldNameToStringStyle.serialVersionUID",
        "snippet": "        private static final long serialVersionUID = 1L;",
        "begin_line": 2143,
        "end_line": 2143,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.builder.ShortPrefixToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.ShortPrefixToStringStyle.serialVersionUID",
        "snippet": "        private static final long serialVersionUID = 1L;",
        "begin_line": 2177,
        "end_line": 2177,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.builder.SimpleToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.SimpleToStringStyle.serialVersionUID",
        "snippet": "        private static final long serialVersionUID = 1L;",
        "begin_line": 2209,
        "end_line": 2209,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.builder.MultiLineToStringStyle",
        "src_path": "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang3.builder.MultiLineToStringStyle.serialVersionUID",
        "snippet": "        private static final long serialVersionUID = 1L;",
        "begin_line": 2245,
        "end_line": 2245,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.AtomicSafeInitializer",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializer.java",
        "signature": "org.apache.commons.lang3.concurrent.AtomicSafeInitializer.factory",
        "snippet": "    private final AtomicReference<AtomicSafeInitializer<T>> factory =\n            new AtomicReference<AtomicSafeInitializer<T>>();",
        "begin_line": 59,
        "end_line": 60,
        "comment": " A guard which ensures that initialize() is called only once. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.AtomicSafeInitializer",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializer.java",
        "signature": "org.apache.commons.lang3.concurrent.AtomicSafeInitializer.reference",
        "snippet": "    private final AtomicReference<T> reference = new AtomicReference<T>();",
        "begin_line": 63,
        "end_line": 63,
        "comment": " Holds the reference to the managed object. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.BackgroundInitializer",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java",
        "signature": "org.apache.commons.lang3.concurrent.BackgroundInitializer.externalExecutor",
        "snippet": "    private ExecutorService externalExecutor;",
        "begin_line": 89,
        "end_line": 89,
        "comment": " The external executor service for executing tasks. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.BackgroundInitializer",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java",
        "signature": "org.apache.commons.lang3.concurrent.BackgroundInitializer.executor",
        "snippet": "    private ExecutorService executor;",
        "begin_line": 92,
        "end_line": 92,
        "comment": " A reference to the executor service that is actually used. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.BackgroundInitializer",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java",
        "signature": "org.apache.commons.lang3.concurrent.BackgroundInitializer.future",
        "snippet": "    private Future<T> future;",
        "begin_line": 95,
        "end_line": 95,
        "comment": " Stores the handle to the background task. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.InitializationTask",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java",
        "signature": "org.apache.commons.lang3.concurrent.InitializationTask.execFinally",
        "snippet": "        private final ExecutorService execFinally;",
        "begin_line": 305,
        "end_line": 305,
        "comment": " Stores the executor service to be destroyed at the end. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.ConcurrentException",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentException.java",
        "signature": "org.apache.commons.lang3.concurrent.ConcurrentException.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 6622707671812226130L;",
        "begin_line": 39,
        "end_line": 39,
        "comment": "\n     * The serial version UID.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.BasicThreadFactory",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java",
        "signature": "org.apache.commons.lang3.concurrent.BasicThreadFactory.threadCounter",
        "snippet": "    private final AtomicLong threadCounter;",
        "begin_line": 92,
        "end_line": 92,
        "comment": " A counter for the threads created by this factory. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.BasicThreadFactory",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java",
        "signature": "org.apache.commons.lang3.concurrent.BasicThreadFactory.wrappedFactory",
        "snippet": "    private final ThreadFactory wrappedFactory;",
        "begin_line": 95,
        "end_line": 95,
        "comment": " Stores the wrapped factory. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.BasicThreadFactory",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java",
        "signature": "org.apache.commons.lang3.concurrent.BasicThreadFactory.uncaughtExceptionHandler",
        "snippet": "    private final Thread.UncaughtExceptionHandler uncaughtExceptionHandler;",
        "begin_line": 98,
        "end_line": 98,
        "comment": " Stores the uncaught exception handler. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.BasicThreadFactory",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java",
        "signature": "org.apache.commons.lang3.concurrent.BasicThreadFactory.namingPattern",
        "snippet": "    private final String namingPattern;",
        "begin_line": 101,
        "end_line": 101,
        "comment": " Stores the naming pattern for newly created threads. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.BasicThreadFactory",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java",
        "signature": "org.apache.commons.lang3.concurrent.BasicThreadFactory.priority",
        "snippet": "    private final Integer priority;",
        "begin_line": 104,
        "end_line": 104,
        "comment": " Stores the priority. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.BasicThreadFactory",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java",
        "signature": "org.apache.commons.lang3.concurrent.BasicThreadFactory.daemonFlag",
        "snippet": "    private final Boolean daemonFlag;",
        "begin_line": 107,
        "end_line": 107,
        "comment": " Stores the daemon status flag. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.Builder",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java",
        "signature": "org.apache.commons.lang3.concurrent.Builder.wrappedFactory",
        "snippet": "        private ThreadFactory wrappedFactory;",
        "begin_line": 257,
        "end_line": 257,
        "comment": " The wrapped factory. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.Builder",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java",
        "signature": "org.apache.commons.lang3.concurrent.Builder.exceptionHandler",
        "snippet": "        private Thread.UncaughtExceptionHandler exceptionHandler;",
        "begin_line": 260,
        "end_line": 260,
        "comment": " The uncaught exception handler. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.Builder",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java",
        "signature": "org.apache.commons.lang3.concurrent.Builder.namingPattern",
        "snippet": "        private String namingPattern;",
        "begin_line": 263,
        "end_line": 263,
        "comment": " The naming pattern. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.Builder",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java",
        "signature": "org.apache.commons.lang3.concurrent.Builder.priority",
        "snippet": "        private Integer priority;",
        "begin_line": 266,
        "end_line": 266,
        "comment": " The priority. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.Builder",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java",
        "signature": "org.apache.commons.lang3.concurrent.Builder.daemonFlag",
        "snippet": "        private Boolean daemonFlag;",
        "begin_line": 269,
        "end_line": 269,
        "comment": " The daemon flag. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.ConstantInitializer",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java",
        "signature": "org.apache.commons.lang3.concurrent.ConstantInitializer.FMT_TO_STRING",
        "snippet": "    private static final String FMT_TO_STRING = \"ConstantInitializer@%d [ object = %s ]\";",
        "begin_line": 43,
        "end_line": 43,
        "comment": " Constant for the format of the string representation. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.ConstantInitializer",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java",
        "signature": "org.apache.commons.lang3.concurrent.ConstantInitializer.object",
        "snippet": "    private final T object;",
        "begin_line": 46,
        "end_line": 46,
        "comment": " Stores the managed object. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.CallableBackgroundInitializer",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java",
        "signature": "org.apache.commons.lang3.concurrent.CallableBackgroundInitializer.callable",
        "snippet": "    private final Callable<T> callable;",
        "begin_line": 70,
        "end_line": 70,
        "comment": " The Callable to be executed. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.TimedSemaphore",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java",
        "signature": "org.apache.commons.lang3.concurrent.TimedSemaphore.NO_LIMIT",
        "snippet": "    public static final int NO_LIMIT = 0;",
        "begin_line": 134,
        "end_line": 134,
        "comment": "\n     * Constant for a value representing no limit. If the limit is set to a\n     * value less or equal this constant, the {@code TimedSemaphore} will be\n     * effectively switched off.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.TimedSemaphore",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java",
        "signature": "org.apache.commons.lang3.concurrent.TimedSemaphore.THREAD_POOL_SIZE",
        "snippet": "    private static final int THREAD_POOL_SIZE = 1;",
        "begin_line": 137,
        "end_line": 137,
        "comment": " Constant for the thread pool size for the executor. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.TimedSemaphore",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java",
        "signature": "org.apache.commons.lang3.concurrent.TimedSemaphore.executorService",
        "snippet": "    private final ScheduledExecutorService executorService;",
        "begin_line": 140,
        "end_line": 140,
        "comment": " The executor service for managing the timer thread. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.TimedSemaphore",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java",
        "signature": "org.apache.commons.lang3.concurrent.TimedSemaphore.period",
        "snippet": "    private final long period;",
        "begin_line": 143,
        "end_line": 143,
        "comment": " Stores the period for this timed semaphore. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.TimedSemaphore",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java",
        "signature": "org.apache.commons.lang3.concurrent.TimedSemaphore.unit",
        "snippet": "    private final TimeUnit unit;",
        "begin_line": 146,
        "end_line": 146,
        "comment": " The time unit for the period. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.TimedSemaphore",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java",
        "signature": "org.apache.commons.lang3.concurrent.TimedSemaphore.ownExecutor",
        "snippet": "    private final boolean ownExecutor;",
        "begin_line": 149,
        "end_line": 149,
        "comment": " A flag whether the executor service was created by this object. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.TimedSemaphore",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java",
        "signature": "org.apache.commons.lang3.concurrent.TimedSemaphore.task",
        "snippet": "    private ScheduledFuture<?> task;",
        "begin_line": 152,
        "end_line": 152,
        "comment": " A future object representing the timer task. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.TimedSemaphore",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java",
        "signature": "org.apache.commons.lang3.concurrent.TimedSemaphore.totalAcquireCount",
        "snippet": "    private long totalAcquireCount;",
        "begin_line": 155,
        "end_line": 155,
        "comment": " Stores the total number of invocations of the acquire() method. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.TimedSemaphore",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java",
        "signature": "org.apache.commons.lang3.concurrent.TimedSemaphore.periodCount",
        "snippet": "    private long periodCount;",
        "begin_line": 161,
        "end_line": 161,
        "comment": "\n     * The counter for the periods. This counter is increased every time a\n     * period ends.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.TimedSemaphore",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java",
        "signature": "org.apache.commons.lang3.concurrent.TimedSemaphore.limit",
        "snippet": "    private int limit;",
        "begin_line": 164,
        "end_line": 164,
        "comment": " The limit. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.TimedSemaphore",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java",
        "signature": "org.apache.commons.lang3.concurrent.TimedSemaphore.acquireCount",
        "snippet": "    private int acquireCount;",
        "begin_line": 167,
        "end_line": 167,
        "comment": " The current counter. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.TimedSemaphore",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java",
        "signature": "org.apache.commons.lang3.concurrent.TimedSemaphore.lastCallsPerPeriod",
        "snippet": "    private int lastCallsPerPeriod;",
        "begin_line": 170,
        "end_line": 170,
        "comment": " The number of invocations of acquire() in the last period. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.TimedSemaphore",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java",
        "signature": "org.apache.commons.lang3.concurrent.TimedSemaphore.shutdown",
        "snippet": "    private boolean shutdown;",
        "begin_line": 173,
        "end_line": 173,
        "comment": " A flag whether shutdown() was called. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.LazyInitializer",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/LazyInitializer.java",
        "signature": "org.apache.commons.lang3.concurrent.LazyInitializer.object",
        "snippet": "    private volatile T object;",
        "begin_line": 81,
        "end_line": 81,
        "comment": " Stores the managed object. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.ConcurrentRuntimeException",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.java",
        "signature": "org.apache.commons.lang3.concurrent.ConcurrentRuntimeException.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -6582182735562919670L;",
        "begin_line": 40,
        "end_line": 40,
        "comment": "\n     * The serial version UID.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.ConstantFuture",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java",
        "signature": "org.apache.commons.lang3.concurrent.ConstantFuture.value",
        "snippet": "        private final T value;",
        "begin_line": 333,
        "end_line": 333,
        "comment": " The constant value. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.AtomicInitializer",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/AtomicInitializer.java",
        "signature": "org.apache.commons.lang3.concurrent.AtomicInitializer.reference",
        "snippet": "    private final AtomicReference<T> reference = new AtomicReference<T>();",
        "begin_line": 69,
        "end_line": 69,
        "comment": " Holds the reference to the managed object. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java",
        "signature": "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.childInitializers",
        "snippet": "    private final Map<String, BackgroundInitializer<?>> childInitializers =\n        new HashMap<String, BackgroundInitializer<?>>();",
        "begin_line": 101,
        "end_line": 102,
        "comment": " A map with the child initializers. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.MultiBackgroundInitializerResults",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java",
        "signature": "org.apache.commons.lang3.concurrent.MultiBackgroundInitializerResults.initializers",
        "snippet": "        private final Map<String, BackgroundInitializer<?>> initializers;",
        "begin_line": 229,
        "end_line": 229,
        "comment": " A map with the child initializers. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.MultiBackgroundInitializerResults",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java",
        "signature": "org.apache.commons.lang3.concurrent.MultiBackgroundInitializerResults.resultObjects",
        "snippet": "        private final Map<String, Object> resultObjects;",
        "begin_line": 232,
        "end_line": 232,
        "comment": " A map with the result objects. "
    },
    {
        "class_name": "org.apache.commons.lang3.concurrent.MultiBackgroundInitializerResults",
        "src_path": "src/main/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java",
        "signature": "org.apache.commons.lang3.concurrent.MultiBackgroundInitializerResults.exceptions",
        "snippet": "        private final Map<String, ConcurrentException> exceptions;",
        "begin_line": 235,
        "end_line": 235,
        "comment": " A map with the exceptions. "
    },
    {
        "class_name": "org.apache.commons.lang3.reflect.MemberUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java",
        "signature": "org.apache.commons.lang3.reflect.MemberUtils.ACCESS_TEST",
        "snippet": "    private static final int ACCESS_TEST = Modifier.PUBLIC | Modifier.PROTECTED | Modifier.PRIVATE;",
        "begin_line": 36,
        "end_line": 36,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.reflect.MemberUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java",
        "signature": "org.apache.commons.lang3.reflect.MemberUtils.ORDERED_PRIMITIVE_TYPES",
        "snippet": "    private static final Class<?>[] ORDERED_PRIMITIVE_TYPES = { Byte.TYPE, Short.TYPE,\n            Character.TYPE, Integer.TYPE, Long.TYPE, Float.TYPE, Double.TYPE };",
        "begin_line": 39,
        "end_line": 40,
        "comment": " Array of primitive number types ordered by \"promotability\" "
    },
    {
        "class_name": "org.apache.commons.lang3.event.EventBindingInvocationHandler",
        "src_path": "src/main/java/org/apache/commons/lang3/event/EventUtils.java",
        "signature": "org.apache.commons.lang3.event.EventBindingInvocationHandler.target",
        "snippet": "        private final Object target;",
        "begin_line": 83,
        "end_line": 83,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.event.EventBindingInvocationHandler",
        "src_path": "src/main/java/org/apache/commons/lang3/event/EventUtils.java",
        "signature": "org.apache.commons.lang3.event.EventBindingInvocationHandler.methodName",
        "snippet": "        private final String methodName;",
        "begin_line": 84,
        "end_line": 84,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.event.EventBindingInvocationHandler",
        "src_path": "src/main/java/org/apache/commons/lang3/event/EventUtils.java",
        "signature": "org.apache.commons.lang3.event.EventBindingInvocationHandler.eventTypes",
        "snippet": "        private final Set<String> eventTypes;",
        "begin_line": 85,
        "end_line": 85,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang3.event.EventListenerSupport",
        "src_path": "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java",
        "signature": "org.apache.commons.lang3.event.EventListenerSupport.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 3593265990380473632L;",
        "begin_line": 69,
        "end_line": 69,
        "comment": " Serialization version "
    },
    {
        "class_name": "org.apache.commons.lang3.event.EventListenerSupport",
        "src_path": "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java",
        "signature": "org.apache.commons.lang3.event.EventListenerSupport.listeners",
        "snippet": "    private List<L> listeners = new CopyOnWriteArrayList<L>();",
        "begin_line": 76,
        "end_line": 76,
        "comment": "\n     * The list used to hold the registered listeners. This list is\n     * intentionally a thread-safe copy-on-write-array so that traversals over\n     * the list of listeners will be atomic.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.event.EventListenerSupport",
        "src_path": "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java",
        "signature": "org.apache.commons.lang3.event.EventListenerSupport.proxy",
        "snippet": "    private transient L proxy;",
        "begin_line": 82,
        "end_line": 82,
        "comment": "\n     * The proxy representing the collection of listeners. Calls to this proxy\n     * object will sent to all registered listeners.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.event.EventListenerSupport",
        "src_path": "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java",
        "signature": "org.apache.commons.lang3.event.EventListenerSupport.prototypeArray",
        "snippet": "    private transient L[] prototypeArray;",
        "begin_line": 87,
        "end_line": 87,
        "comment": "\n     * Empty typed array for #getListeners().\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.event.ProxyInvocationHandler",
        "src_path": "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java",
        "signature": "org.apache.commons.lang3.event.ProxyInvocationHandler.serialVersionUID",
        "snippet": "        private static final long serialVersionUID = 1L;",
        "begin_line": 295,
        "end_line": 295,
        "comment": " Serialization version "
    },
    {
        "class_name": "org.apache.commons.lang3.mutable.MutableLong",
        "src_path": "src/main/java/org/apache/commons/lang3/mutable/MutableLong.java",
        "signature": "org.apache.commons.lang3.mutable.MutableLong.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 62986528375L;",
        "begin_line": 33,
        "end_line": 33,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.mutable.MutableLong",
        "src_path": "src/main/java/org/apache/commons/lang3/mutable/MutableLong.java",
        "signature": "org.apache.commons.lang3.mutable.MutableLong.value",
        "snippet": "    private long value;",
        "begin_line": 36,
        "end_line": 36,
        "comment": " The mutable value. "
    },
    {
        "class_name": "org.apache.commons.lang3.mutable.MutableObject",
        "src_path": "src/main/java/org/apache/commons/lang3/mutable/MutableObject.java",
        "signature": "org.apache.commons.lang3.mutable.MutableObject.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 86241875189L;",
        "begin_line": 35,
        "end_line": 35,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.mutable.MutableObject",
        "src_path": "src/main/java/org/apache/commons/lang3/mutable/MutableObject.java",
        "signature": "org.apache.commons.lang3.mutable.MutableObject.value",
        "snippet": "    private T value;",
        "begin_line": 38,
        "end_line": 38,
        "comment": " The mutable value. "
    },
    {
        "class_name": "org.apache.commons.lang3.mutable.MutableShort",
        "src_path": "src/main/java/org/apache/commons/lang3/mutable/MutableShort.java",
        "signature": "org.apache.commons.lang3.mutable.MutableShort.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -2135791679L;",
        "begin_line": 33,
        "end_line": 33,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.mutable.MutableShort",
        "src_path": "src/main/java/org/apache/commons/lang3/mutable/MutableShort.java",
        "signature": "org.apache.commons.lang3.mutable.MutableShort.value",
        "snippet": "    private short value;",
        "begin_line": 36,
        "end_line": 36,
        "comment": " The mutable value. "
    },
    {
        "class_name": "org.apache.commons.lang3.mutable.MutableByte",
        "src_path": "src/main/java/org/apache/commons/lang3/mutable/MutableByte.java",
        "signature": "org.apache.commons.lang3.mutable.MutableByte.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -1585823265L;",
        "begin_line": 33,
        "end_line": 33,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.mutable.MutableByte",
        "src_path": "src/main/java/org/apache/commons/lang3/mutable/MutableByte.java",
        "signature": "org.apache.commons.lang3.mutable.MutableByte.value",
        "snippet": "    private byte value;",
        "begin_line": 36,
        "end_line": 36,
        "comment": " The mutable value. "
    },
    {
        "class_name": "org.apache.commons.lang3.mutable.MutableFloat",
        "src_path": "src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java",
        "signature": "org.apache.commons.lang3.mutable.MutableFloat.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 5787169186L;",
        "begin_line": 33,
        "end_line": 33,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.mutable.MutableFloat",
        "src_path": "src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java",
        "signature": "org.apache.commons.lang3.mutable.MutableFloat.value",
        "snippet": "    private float value;",
        "begin_line": 36,
        "end_line": 36,
        "comment": " The mutable value. "
    },
    {
        "class_name": "org.apache.commons.lang3.mutable.MutableDouble",
        "src_path": "src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java",
        "signature": "org.apache.commons.lang3.mutable.MutableDouble.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1587163916L;",
        "begin_line": 33,
        "end_line": 33,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.mutable.MutableDouble",
        "src_path": "src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java",
        "signature": "org.apache.commons.lang3.mutable.MutableDouble.value",
        "snippet": "    private double value;",
        "begin_line": 36,
        "end_line": 36,
        "comment": " The mutable value. "
    },
    {
        "class_name": "org.apache.commons.lang3.mutable.MutableInt",
        "src_path": "src/main/java/org/apache/commons/lang3/mutable/MutableInt.java",
        "signature": "org.apache.commons.lang3.mutable.MutableInt.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 512176391864L;",
        "begin_line": 33,
        "end_line": 33,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.mutable.MutableInt",
        "src_path": "src/main/java/org/apache/commons/lang3/mutable/MutableInt.java",
        "signature": "org.apache.commons.lang3.mutable.MutableInt.value",
        "snippet": "    private int value;",
        "begin_line": 36,
        "end_line": 36,
        "comment": " The mutable value. "
    },
    {
        "class_name": "org.apache.commons.lang3.mutable.MutableBoolean",
        "src_path": "src/main/java/org/apache/commons/lang3/mutable/MutableBoolean.java",
        "signature": "org.apache.commons.lang3.mutable.MutableBoolean.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -4830728138360036487L;",
        "begin_line": 36,
        "end_line": 36,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.mutable.MutableBoolean",
        "src_path": "src/main/java/org/apache/commons/lang3/mutable/MutableBoolean.java",
        "signature": "org.apache.commons.lang3.mutable.MutableBoolean.value",
        "snippet": "    private boolean value;",
        "begin_line": 39,
        "end_line": 39,
        "comment": " The mutable value. "
    },
    {
        "class_name": "org.apache.commons.lang3.math.Fraction",
        "src_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "signature": "org.apache.commons.lang3.math.Fraction.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 65382027393090L;",
        "begin_line": 42,
        "end_line": 42,
        "comment": "\n     * Required for serialization support. Lang version 2.0.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.math.Fraction",
        "src_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "signature": "org.apache.commons.lang3.math.Fraction.ZERO",
        "snippet": "    public static final Fraction ZERO = new Fraction(0, 1);",
        "begin_line": 47,
        "end_line": 47,
        "comment": "\n     * <code>Fraction</code> representation of 0.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.math.Fraction",
        "src_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "signature": "org.apache.commons.lang3.math.Fraction.ONE",
        "snippet": "    public static final Fraction ONE = new Fraction(1, 1);",
        "begin_line": 51,
        "end_line": 51,
        "comment": "\n     * <code>Fraction</code> representation of 1.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.math.Fraction",
        "src_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "signature": "org.apache.commons.lang3.math.Fraction.ONE_HALF",
        "snippet": "    public static final Fraction ONE_HALF = new Fraction(1, 2);",
        "begin_line": 55,
        "end_line": 55,
        "comment": "\n     * <code>Fraction</code> representation of 1/2.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.math.Fraction",
        "src_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "signature": "org.apache.commons.lang3.math.Fraction.ONE_THIRD",
        "snippet": "    public static final Fraction ONE_THIRD = new Fraction(1, 3);",
        "begin_line": 59,
        "end_line": 59,
        "comment": "\n     * <code>Fraction</code> representation of 1/3.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.math.Fraction",
        "src_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "signature": "org.apache.commons.lang3.math.Fraction.TWO_THIRDS",
        "snippet": "    public static final Fraction TWO_THIRDS = new Fraction(2, 3);",
        "begin_line": 63,
        "end_line": 63,
        "comment": "\n     * <code>Fraction</code> representation of 2/3.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.math.Fraction",
        "src_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "signature": "org.apache.commons.lang3.math.Fraction.ONE_QUARTER",
        "snippet": "    public static final Fraction ONE_QUARTER = new Fraction(1, 4);",
        "begin_line": 67,
        "end_line": 67,
        "comment": "\n     * <code>Fraction</code> representation of 1/4.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.math.Fraction",
        "src_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "signature": "org.apache.commons.lang3.math.Fraction.TWO_QUARTERS",
        "snippet": "    public static final Fraction TWO_QUARTERS = new Fraction(2, 4);",
        "begin_line": 71,
        "end_line": 71,
        "comment": "\n     * <code>Fraction</code> representation of 2/4.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.math.Fraction",
        "src_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "signature": "org.apache.commons.lang3.math.Fraction.THREE_QUARTERS",
        "snippet": "    public static final Fraction THREE_QUARTERS = new Fraction(3, 4);",
        "begin_line": 75,
        "end_line": 75,
        "comment": "\n     * <code>Fraction</code> representation of 3/4.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.math.Fraction",
        "src_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "signature": "org.apache.commons.lang3.math.Fraction.ONE_FIFTH",
        "snippet": "    public static final Fraction ONE_FIFTH = new Fraction(1, 5);",
        "begin_line": 79,
        "end_line": 79,
        "comment": "\n     * <code>Fraction</code> representation of 1/5.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.math.Fraction",
        "src_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "signature": "org.apache.commons.lang3.math.Fraction.TWO_FIFTHS",
        "snippet": "    public static final Fraction TWO_FIFTHS = new Fraction(2, 5);",
        "begin_line": 83,
        "end_line": 83,
        "comment": "\n     * <code>Fraction</code> representation of 2/5.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.math.Fraction",
        "src_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "signature": "org.apache.commons.lang3.math.Fraction.THREE_FIFTHS",
        "snippet": "    public static final Fraction THREE_FIFTHS = new Fraction(3, 5);",
        "begin_line": 87,
        "end_line": 87,
        "comment": "\n     * <code>Fraction</code> representation of 3/5.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.math.Fraction",
        "src_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "signature": "org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS",
        "snippet": "    public static final Fraction FOUR_FIFTHS = new Fraction(4, 5);",
        "begin_line": 91,
        "end_line": 91,
        "comment": "\n     * <code>Fraction</code> representation of 4/5.\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.math.Fraction",
        "src_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "signature": "org.apache.commons.lang3.math.Fraction.numerator",
        "snippet": "    private final int numerator;",
        "begin_line": 97,
        "end_line": 97,
        "comment": "\n     * The numerator number part of the fraction (the three in three sevenths).\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.math.Fraction",
        "src_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "signature": "org.apache.commons.lang3.math.Fraction.denominator",
        "snippet": "    private final int denominator;",
        "begin_line": 101,
        "end_line": 101,
        "comment": "\n     * The denominator number part of the fraction (the seven in three sevenths).\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.math.Fraction",
        "src_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "signature": "org.apache.commons.lang3.math.Fraction.hashCode",
        "snippet": "    private transient int hashCode = 0;",
        "begin_line": 106,
        "end_line": 106,
        "comment": "\n     * Cached output hashCode (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.math.Fraction",
        "src_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "signature": "org.apache.commons.lang3.math.Fraction.toString",
        "snippet": "    private transient String toString = null;",
        "begin_line": 110,
        "end_line": 110,
        "comment": "\n     * Cached output toString (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.math.Fraction",
        "src_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "signature": "org.apache.commons.lang3.math.Fraction.toProperString",
        "snippet": "    private transient String toProperString = null;",
        "begin_line": 114,
        "end_line": 114,
        "comment": "\n     * Cached output toProperString (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang3.math.NumberUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "signature": "org.apache.commons.lang3.math.NumberUtils.LONG_ZERO",
        "snippet": "    public static final Long LONG_ZERO = new Long(0L);",
        "begin_line": 33,
        "end_line": 33,
        "comment": " Reusable Long constant for zero. "
    },
    {
        "class_name": "org.apache.commons.lang3.math.NumberUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "signature": "org.apache.commons.lang3.math.NumberUtils.LONG_ONE",
        "snippet": "    public static final Long LONG_ONE = new Long(1L);",
        "begin_line": 35,
        "end_line": 35,
        "comment": " Reusable Long constant for one. "
    },
    {
        "class_name": "org.apache.commons.lang3.math.NumberUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "signature": "org.apache.commons.lang3.math.NumberUtils.LONG_MINUS_ONE",
        "snippet": "    public static final Long LONG_MINUS_ONE = new Long(-1L);",
        "begin_line": 37,
        "end_line": 37,
        "comment": " Reusable Long constant for minus one. "
    },
    {
        "class_name": "org.apache.commons.lang3.math.NumberUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "signature": "org.apache.commons.lang3.math.NumberUtils.INTEGER_ZERO",
        "snippet": "    public static final Integer INTEGER_ZERO = new Integer(0);",
        "begin_line": 39,
        "end_line": 39,
        "comment": " Reusable Integer constant for zero. "
    },
    {
        "class_name": "org.apache.commons.lang3.math.NumberUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "signature": "org.apache.commons.lang3.math.NumberUtils.INTEGER_ONE",
        "snippet": "    public static final Integer INTEGER_ONE = new Integer(1);",
        "begin_line": 41,
        "end_line": 41,
        "comment": " Reusable Integer constant for one. "
    },
    {
        "class_name": "org.apache.commons.lang3.math.NumberUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "signature": "org.apache.commons.lang3.math.NumberUtils.INTEGER_MINUS_ONE",
        "snippet": "    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);",
        "begin_line": 43,
        "end_line": 43,
        "comment": " Reusable Integer constant for minus one. "
    },
    {
        "class_name": "org.apache.commons.lang3.math.NumberUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "signature": "org.apache.commons.lang3.math.NumberUtils.SHORT_ZERO",
        "snippet": "    public static final Short SHORT_ZERO = new Short((short) 0);",
        "begin_line": 45,
        "end_line": 45,
        "comment": " Reusable Short constant for zero. "
    },
    {
        "class_name": "org.apache.commons.lang3.math.NumberUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "signature": "org.apache.commons.lang3.math.NumberUtils.SHORT_ONE",
        "snippet": "    public static final Short SHORT_ONE = new Short((short) 1);",
        "begin_line": 47,
        "end_line": 47,
        "comment": " Reusable Short constant for one. "
    },
    {
        "class_name": "org.apache.commons.lang3.math.NumberUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "signature": "org.apache.commons.lang3.math.NumberUtils.SHORT_MINUS_ONE",
        "snippet": "    public static final Short SHORT_MINUS_ONE = new Short((short) -1);",
        "begin_line": 49,
        "end_line": 49,
        "comment": " Reusable Short constant for minus one. "
    },
    {
        "class_name": "org.apache.commons.lang3.math.NumberUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "signature": "org.apache.commons.lang3.math.NumberUtils.BYTE_ZERO",
        "snippet": "    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);",
        "begin_line": 51,
        "end_line": 51,
        "comment": " Reusable Byte constant for zero. "
    },
    {
        "class_name": "org.apache.commons.lang3.math.NumberUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "signature": "org.apache.commons.lang3.math.NumberUtils.BYTE_ONE",
        "snippet": "    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);",
        "begin_line": 53,
        "end_line": 53,
        "comment": " Reusable Byte constant for one. "
    },
    {
        "class_name": "org.apache.commons.lang3.math.NumberUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "signature": "org.apache.commons.lang3.math.NumberUtils.BYTE_MINUS_ONE",
        "snippet": "    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);",
        "begin_line": 55,
        "end_line": 55,
        "comment": " Reusable Byte constant for minus one. "
    },
    {
        "class_name": "org.apache.commons.lang3.math.NumberUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "signature": "org.apache.commons.lang3.math.NumberUtils.DOUBLE_ZERO",
        "snippet": "    public static final Double DOUBLE_ZERO = new Double(0.0d);",
        "begin_line": 57,
        "end_line": 57,
        "comment": " Reusable Double constant for zero. "
    },
    {
        "class_name": "org.apache.commons.lang3.math.NumberUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "signature": "org.apache.commons.lang3.math.NumberUtils.DOUBLE_ONE",
        "snippet": "    public static final Double DOUBLE_ONE = new Double(1.0d);",
        "begin_line": 59,
        "end_line": 59,
        "comment": " Reusable Double constant for one. "
    },
    {
        "class_name": "org.apache.commons.lang3.math.NumberUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "signature": "org.apache.commons.lang3.math.NumberUtils.DOUBLE_MINUS_ONE",
        "snippet": "    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);",
        "begin_line": 61,
        "end_line": 61,
        "comment": " Reusable Double constant for minus one. "
    },
    {
        "class_name": "org.apache.commons.lang3.math.NumberUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "signature": "org.apache.commons.lang3.math.NumberUtils.FLOAT_ZERO",
        "snippet": "    public static final Float FLOAT_ZERO = new Float(0.0f);",
        "begin_line": 63,
        "end_line": 63,
        "comment": " Reusable Float constant for zero. "
    },
    {
        "class_name": "org.apache.commons.lang3.math.NumberUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "signature": "org.apache.commons.lang3.math.NumberUtils.FLOAT_ONE",
        "snippet": "    public static final Float FLOAT_ONE = new Float(1.0f);",
        "begin_line": 65,
        "end_line": 65,
        "comment": " Reusable Float constant for one. "
    },
    {
        "class_name": "org.apache.commons.lang3.math.NumberUtils",
        "src_path": "src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "signature": "org.apache.commons.lang3.math.NumberUtils.FLOAT_MINUS_ONE",
        "snippet": "    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);",
        "begin_line": 67,
        "end_line": 67,
        "comment": " Reusable Float constant for minus one. "
    },
    {
        "class_name": "org.apache.commons.lang3.tuple.ImmutablePair",
        "src_path": "src/main/java/org/apache/commons/lang3/tuple/ImmutablePair.java",
        "signature": "org.apache.commons.lang3.tuple.ImmutablePair.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 4954918890077093841L;",
        "begin_line": 38,
        "end_line": 38,
        "comment": " Serialization version "
    },
    {
        "class_name": "org.apache.commons.lang3.tuple.ImmutablePair",
        "src_path": "src/main/java/org/apache/commons/lang3/tuple/ImmutablePair.java",
        "signature": "org.apache.commons.lang3.tuple.ImmutablePair.left",
        "snippet": "    public final L left;",
        "begin_line": 41,
        "end_line": 41,
        "comment": " Left object "
    },
    {
        "class_name": "org.apache.commons.lang3.tuple.ImmutablePair",
        "src_path": "src/main/java/org/apache/commons/lang3/tuple/ImmutablePair.java",
        "signature": "org.apache.commons.lang3.tuple.ImmutablePair.right",
        "snippet": "    public final R right;",
        "begin_line": 43,
        "end_line": 43,
        "comment": " Right object "
    },
    {
        "class_name": "org.apache.commons.lang3.tuple.MutablePair",
        "src_path": "src/main/java/org/apache/commons/lang3/tuple/MutablePair.java",
        "signature": "org.apache.commons.lang3.tuple.MutablePair.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 4954918890077093841L;",
        "begin_line": 33,
        "end_line": 33,
        "comment": " Serialization version "
    },
    {
        "class_name": "org.apache.commons.lang3.tuple.MutablePair",
        "src_path": "src/main/java/org/apache/commons/lang3/tuple/MutablePair.java",
        "signature": "org.apache.commons.lang3.tuple.MutablePair.left",
        "snippet": "    public L left;",
        "begin_line": 36,
        "end_line": 36,
        "comment": " Left object "
    },
    {
        "class_name": "org.apache.commons.lang3.tuple.MutablePair",
        "src_path": "src/main/java/org/apache/commons/lang3/tuple/MutablePair.java",
        "signature": "org.apache.commons.lang3.tuple.MutablePair.right",
        "snippet": "    public R right;",
        "begin_line": 38,
        "end_line": 38,
        "comment": " Right object "
    },
    {
        "class_name": "org.apache.commons.lang3.tuple.Pair",
        "src_path": "src/main/java/org/apache/commons/lang3/tuple/Pair.java",
        "signature": "org.apache.commons.lang3.tuple.Pair.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 4954918890077093841L;",
        "begin_line": 46,
        "end_line": 46,
        "comment": " Serialization version "
    }
]