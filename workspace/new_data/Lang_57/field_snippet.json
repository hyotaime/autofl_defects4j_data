[
    {
        "class_name": "org.apache.commons.lang.NotImplementedException",
        "src_path": "src/java/org/apache/commons/lang/NotImplementedException.java",
        "signature": "org.apache.commons.lang.NotImplementedException.DEFAULT_MESSAGE",
        "snippet": "    private static final String DEFAULT_MESSAGE = \"Code is not implemented\";",
        "begin_line": 55,
        "end_line": 55,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.NotImplementedException",
        "src_path": "src/java/org/apache/commons/lang/NotImplementedException.java",
        "signature": "org.apache.commons.lang.NotImplementedException.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -6894122266938754088L;",
        "begin_line": 62,
        "end_line": 62,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.NotImplementedException",
        "src_path": "src/java/org/apache/commons/lang/NotImplementedException.java",
        "signature": "org.apache.commons.lang.NotImplementedException.delegate",
        "snippet": "    private NestableDelegate delegate = new NestableDelegate(this);",
        "begin_line": 67,
        "end_line": 67,
        "comment": "\n     * The exception helper to delegate nested exception handling to.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.NotImplementedException",
        "src_path": "src/java/org/apache/commons/lang/NotImplementedException.java",
        "signature": "org.apache.commons.lang.NotImplementedException.cause",
        "snippet": "    private Throwable cause;",
        "begin_line": 73,
        "end_line": 73,
        "comment": "\n     * Holds the reference to the exception or error that caused\n     * this exception to be thrown.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ArrayUtils",
        "src_path": "src/java/org/apache/commons/lang/ArrayUtils.java",
        "signature": "org.apache.commons.lang.ArrayUtils.EMPTY_OBJECT_ARRAY",
        "snippet": "    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];",
        "begin_line": 55,
        "end_line": 55,
        "comment": "\n     * An empty immutable <code>Object</code> array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ArrayUtils",
        "src_path": "src/java/org/apache/commons/lang/ArrayUtils.java",
        "signature": "org.apache.commons.lang.ArrayUtils.EMPTY_CLASS_ARRAY",
        "snippet": "    public static final Class[] EMPTY_CLASS_ARRAY = new Class[0];",
        "begin_line": 59,
        "end_line": 59,
        "comment": "\n     * An empty immutable <code>Class</code> array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ArrayUtils",
        "src_path": "src/java/org/apache/commons/lang/ArrayUtils.java",
        "signature": "org.apache.commons.lang.ArrayUtils.EMPTY_STRING_ARRAY",
        "snippet": "    public static final String[] EMPTY_STRING_ARRAY = new String[0];",
        "begin_line": 63,
        "end_line": 63,
        "comment": "\n     * An empty immutable <code>String</code> array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ArrayUtils",
        "src_path": "src/java/org/apache/commons/lang/ArrayUtils.java",
        "signature": "org.apache.commons.lang.ArrayUtils.EMPTY_LONG_ARRAY",
        "snippet": "    public static final long[] EMPTY_LONG_ARRAY = new long[0];",
        "begin_line": 67,
        "end_line": 67,
        "comment": "\n     * An empty immutable <code>long</code> array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ArrayUtils",
        "src_path": "src/java/org/apache/commons/lang/ArrayUtils.java",
        "signature": "org.apache.commons.lang.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY",
        "snippet": "    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];",
        "begin_line": 71,
        "end_line": 71,
        "comment": "\n     * An empty immutable <code>Long</code> array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ArrayUtils",
        "src_path": "src/java/org/apache/commons/lang/ArrayUtils.java",
        "signature": "org.apache.commons.lang.ArrayUtils.EMPTY_INT_ARRAY",
        "snippet": "    public static final int[] EMPTY_INT_ARRAY = new int[0];",
        "begin_line": 75,
        "end_line": 75,
        "comment": "\n     * An empty immutable <code>int</code> array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ArrayUtils",
        "src_path": "src/java/org/apache/commons/lang/ArrayUtils.java",
        "signature": "org.apache.commons.lang.ArrayUtils.EMPTY_INTEGER_OBJECT_ARRAY",
        "snippet": "    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];",
        "begin_line": 79,
        "end_line": 79,
        "comment": "\n     * An empty immutable <code>Integer</code> array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ArrayUtils",
        "src_path": "src/java/org/apache/commons/lang/ArrayUtils.java",
        "signature": "org.apache.commons.lang.ArrayUtils.EMPTY_SHORT_ARRAY",
        "snippet": "    public static final short[] EMPTY_SHORT_ARRAY = new short[0];",
        "begin_line": 83,
        "end_line": 83,
        "comment": "\n     * An empty immutable <code>short</code> array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ArrayUtils",
        "src_path": "src/java/org/apache/commons/lang/ArrayUtils.java",
        "signature": "org.apache.commons.lang.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY",
        "snippet": "    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];",
        "begin_line": 87,
        "end_line": 87,
        "comment": "\n     * An empty immutable <code>Short</code> array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ArrayUtils",
        "src_path": "src/java/org/apache/commons/lang/ArrayUtils.java",
        "signature": "org.apache.commons.lang.ArrayUtils.EMPTY_BYTE_ARRAY",
        "snippet": "    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];",
        "begin_line": 91,
        "end_line": 91,
        "comment": "\n     * An empty immutable <code>byte</code> array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ArrayUtils",
        "src_path": "src/java/org/apache/commons/lang/ArrayUtils.java",
        "signature": "org.apache.commons.lang.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY",
        "snippet": "    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];",
        "begin_line": 95,
        "end_line": 95,
        "comment": "\n     * An empty immutable <code>Byte</code> array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ArrayUtils",
        "src_path": "src/java/org/apache/commons/lang/ArrayUtils.java",
        "signature": "org.apache.commons.lang.ArrayUtils.EMPTY_DOUBLE_ARRAY",
        "snippet": "    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];",
        "begin_line": 99,
        "end_line": 99,
        "comment": "\n     * An empty immutable <code>double</code> array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ArrayUtils",
        "src_path": "src/java/org/apache/commons/lang/ArrayUtils.java",
        "signature": "org.apache.commons.lang.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY",
        "snippet": "    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];",
        "begin_line": 103,
        "end_line": 103,
        "comment": "\n     * An empty immutable <code>Double</code> array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ArrayUtils",
        "src_path": "src/java/org/apache/commons/lang/ArrayUtils.java",
        "signature": "org.apache.commons.lang.ArrayUtils.EMPTY_FLOAT_ARRAY",
        "snippet": "    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];",
        "begin_line": 107,
        "end_line": 107,
        "comment": "\n     * An empty immutable <code>float</code> array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ArrayUtils",
        "src_path": "src/java/org/apache/commons/lang/ArrayUtils.java",
        "signature": "org.apache.commons.lang.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY",
        "snippet": "    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];",
        "begin_line": 111,
        "end_line": 111,
        "comment": "\n     * An empty immutable <code>Float</code> array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ArrayUtils",
        "src_path": "src/java/org/apache/commons/lang/ArrayUtils.java",
        "signature": "org.apache.commons.lang.ArrayUtils.EMPTY_BOOLEAN_ARRAY",
        "snippet": "    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];",
        "begin_line": 115,
        "end_line": 115,
        "comment": "\n     * An empty immutable <code>boolean</code> array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ArrayUtils",
        "src_path": "src/java/org/apache/commons/lang/ArrayUtils.java",
        "signature": "org.apache.commons.lang.ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY",
        "snippet": "    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];",
        "begin_line": 119,
        "end_line": 119,
        "comment": "\n     * An empty immutable <code>Boolean</code> array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ArrayUtils",
        "src_path": "src/java/org/apache/commons/lang/ArrayUtils.java",
        "signature": "org.apache.commons.lang.ArrayUtils.EMPTY_CHAR_ARRAY",
        "snippet": "    public static final char[] EMPTY_CHAR_ARRAY = new char[0];",
        "begin_line": 123,
        "end_line": 123,
        "comment": "\n     * An empty immutable <code>char</code> array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ArrayUtils",
        "src_path": "src/java/org/apache/commons/lang/ArrayUtils.java",
        "signature": "org.apache.commons.lang.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY",
        "snippet": "    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];",
        "begin_line": 127,
        "end_line": 127,
        "comment": "\n     * An empty immutable <code>Character</code> array.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ArrayUtils",
        "src_path": "src/java/org/apache/commons/lang/ArrayUtils.java",
        "signature": "org.apache.commons.lang.ArrayUtils.INDEX_NOT_FOUND",
        "snippet": "    public static final int INDEX_NOT_FOUND = -1;",
        "begin_line": 134,
        "end_line": 134,
        "comment": "\n     * The index value when an element is not found in a list or array: <code>-1</code>.\n     * This value is returned by methods in this class and can also be used in comparisons with values returned by\n     * various method from {@link java.util.List}.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SerializationException",
        "src_path": "src/java/org/apache/commons/lang/SerializationException.java",
        "signature": "org.apache.commons.lang.SerializationException.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 4029025366392702726L;",
        "begin_line": 37,
        "end_line": 37,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.StringUtils",
        "src_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "signature": "org.apache.commons.lang.StringUtils.EMPTY",
        "snippet": "    public static final String EMPTY = \"\";",
        "begin_line": 139,
        "end_line": 139,
        "comment": "\n     * The empty String <code>\"\"</code>.\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.StringUtils",
        "src_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "signature": "org.apache.commons.lang.StringUtils.INDEX_NOT_FOUND",
        "snippet": "    public static final int INDEX_NOT_FOUND = -1;",
        "begin_line": 145,
        "end_line": 145,
        "comment": "\n     * Represents a failed index search.\n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.StringUtils",
        "src_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "signature": "org.apache.commons.lang.StringUtils.PAD_LIMIT",
        "snippet": "    private static final int PAD_LIMIT = 8192;",
        "begin_line": 150,
        "end_line": 150,
        "comment": "\n     * <p>The maximum size to which the padding constant(s) can expand.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.Entities",
        "src_path": "src/java/org/apache/commons/lang/Entities.java",
        "signature": "org.apache.commons.lang.Entities.BASIC_ARRAY",
        "snippet": "    private static final String[][] BASIC_ARRAY = {\n        {\"quot\", \"34\"}, // \" - double-quote\n        {\"amp\", \"38\"}, // & - ampersand\n        {\"lt\", \"60\"}, // < - less-than\n        {\"gt\", \"62\"}, // > - greater-than\n    };",
        "begin_line": 41,
        "end_line": 46,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.Entities",
        "src_path": "src/java/org/apache/commons/lang/Entities.java",
        "signature": "org.apache.commons.lang.Entities.APOS_ARRAY",
        "snippet": "    private static final String[][] APOS_ARRAY = {\n        {\"apos\", \"39\"}, // XML apostrophe\n    };",
        "begin_line": 48,
        "end_line": 50,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.Entities",
        "src_path": "src/java/org/apache/commons/lang/Entities.java",
        "signature": "org.apache.commons.lang.Entities.ISO8859_1_ARRAY",
        "snippet": "    static final String[][] ISO8859_1_ARRAY = {\n        {\"nbsp\", \"160\"}, // non-breaking space\n        {\"iexcl\", \"161\"}, //inverted exclamation mark\n        {\"cent\", \"162\"}, //cent sign\n        {\"pound\", \"163\"}, //pound sign\n        {\"curren\", \"164\"}, //currency sign\n        {\"yen\", \"165\"}, //yen sign = yuan sign\n        {\"brvbar\", \"166\"}, //broken bar = broken vertical bar\n        {\"sect\", \"167\"}, //section sign\n        {\"uml\", \"168\"}, //diaeresis = spacing diaeresis\n        {\"copy\", \"169\"}, // \\xa9 - copyright sign\n        {\"ordf\", \"170\"}, //feminine ordinal indicator\n        {\"laquo\", \"171\"}, //left-pointing double angle quotation mark = left pointing guillemet\n        {\"not\", \"172\"}, //not sign\n        {\"shy\", \"173\"}, //soft hyphen = discretionary hyphen\n        {\"reg\", \"174\"}, // \\xae - registered trademark sign\n        {\"macr\", \"175\"}, //macron = spacing macron = overline = APL overbar\n        {\"deg\", \"176\"}, //degree sign\n        {\"plusmn\", \"177\"}, //plus-minus sign = plus-or-minus sign\n        {\"sup2\", \"178\"}, //superscript two = superscript digit two = squared\n        {\"sup3\", \"179\"}, //superscript three = superscript digit three = cubed\n        {\"acute\", \"180\"}, //acute accent = spacing acute\n        {\"micro\", \"181\"}, //micro sign\n        {\"para\", \"182\"}, //pilcrow sign = paragraph sign\n        {\"middot\", \"183\"}, //middle dot = Georgian comma = Greek middle dot\n        {\"cedil\", \"184\"}, //cedilla = spacing cedilla\n        {\"sup1\", \"185\"}, //superscript one = superscript digit one\n        {\"ordm\", \"186\"}, //masculine ordinal indicator\n        {\"raquo\", \"187\"}, //right-pointing double angle quotation mark = right pointing guillemet\n        {\"frac14\", \"188\"}, //vulgar fraction one quarter = fraction one quarter\n        {\"frac12\", \"189\"}, //vulgar fraction one half = fraction one half\n        {\"frac34\", \"190\"}, //vulgar fraction three quarters = fraction three quarters\n        {\"iquest\", \"191\"}, //inverted question mark = turned question mark\n        {\"Agrave\", \"192\"}, // \\xc0 - uppercase A, grave accent\n        {\"Aacute\", \"193\"}, // \\xc1 - uppercase A, acute accent\n        {\"Acirc\", \"194\"}, // \\xc2 - uppercase A, circumflex accent\n        {\"Atilde\", \"195\"}, // \\xc3 - uppercase A, tilde\n        {\"Auml\", \"196\"}, // \\xc4 - uppercase A, umlaut\n        {\"Aring\", \"197\"}, // \\xc5 - uppercase A, ring\n        {\"AElig\", \"198\"}, // \\xc6 - uppercase AE\n        {\"Ccedil\", \"199\"}, // \\xc7 - uppercase C, cedilla\n        {\"Egrave\", \"200\"}, // \\xc8 - uppercase E, grave accent\n        {\"Eacute\", \"201\"}, // \\xc9 - uppercase E, acute accent\n        {\"Ecirc\", \"202\"}, // \\xca - uppercase E, circumflex accent\n        {\"Euml\", \"203\"}, // \\xcb - uppercase E, umlaut\n        {\"Igrave\", \"204\"}, // \\xcc - uppercase I, grave accent\n        {\"Iacute\", \"205\"}, // \\xcd - uppercase I, acute accent\n        {\"Icirc\", \"206\"}, // \\xce - uppercase I, circumflex accent\n        {\"Iuml\", \"207\"}, // \\xcf - uppercase I, umlaut\n        {\"ETH\", \"208\"}, // \\xd0 - uppercase Eth, Icelandic\n        {\"Ntilde\", \"209\"}, // \\xd1 - uppercase N, tilde\n        {\"Ograve\", \"210\"}, // \\xd2 - uppercase O, grave accent\n        {\"Oacute\", \"211\"}, // \\xd3 - uppercase O, acute accent\n        {\"Ocirc\", \"212\"}, // \\xd4 - uppercase O, circumflex accent\n        {\"Otilde\", \"213\"}, // \\xd5 - uppercase O, tilde\n        {\"Ouml\", \"214\"}, // \\xd6 - uppercase O, umlaut\n        {\"times\", \"215\"}, //multiplication sign\n        {\"Oslash\", \"216\"}, // \\xd8 - uppercase O, slash\n        {\"Ugrave\", \"217\"}, // \\xd9 - uppercase U, grave accent\n        {\"Uacute\", \"218\"}, // \\xda - uppercase U, acute accent\n        {\"Ucirc\", \"219\"}, // \\xdb - uppercase U, circumflex accent\n        {\"Uuml\", \"220\"}, // \\xdc - uppercase U, umlaut\n        {\"Yacute\", \"221\"}, // \\xdd - uppercase Y, acute accent\n        {\"THORN\", \"222\"}, // \\xde - uppercase THORN, Icelandic\n        {\"szlig\", \"223\"}, // \\xdf - lowercase sharps, German\n        {\"agrave\", \"224\"}, // \\xe0 - lowercase a, grave accent\n        {\"aacute\", \"225\"}, // \\xe1 - lowercase a, acute accent\n        {\"acirc\", \"226\"}, // \\xe2 - lowercase a, circumflex accent\n        {\"atilde\", \"227\"}, // \\xe3 - lowercase a, tilde\n        {\"auml\", \"228\"}, // \\xe4 - lowercase a, umlaut\n        {\"aring\", \"229\"}, // \\xe5 - lowercase a, ring\n        {\"aelig\", \"230\"}, // \\xe6 - lowercase ae\n        {\"ccedil\", \"231\"}, // \\xe7 - lowercase c, cedilla\n        {\"egrave\", \"232\"}, // \\xe8 - lowercase e, grave accent\n        {\"eacute\", \"233\"}, // \\xe9 - lowercase e, acute accent\n        {\"ecirc\", \"234\"}, // \\xea - lowercase e, circumflex accent\n        {\"euml\", \"235\"}, // \\xeb - lowercase e, umlaut\n        {\"igrave\", \"236\"}, // \\xec - lowercase i, grave accent\n        {\"iacute\", \"237\"}, // \\xed - lowercase i, acute accent\n        {\"icirc\", \"238\"}, // \\xee - lowercase i, circumflex accent\n        {\"iuml\", \"239\"}, // \\xef - lowercase i, umlaut\n        {\"eth\", \"240\"}, // \\xf0 - lowercase eth, Icelandic\n        {\"ntilde\", \"241\"}, // \\xf1 - lowercase n, tilde\n        {\"ograve\", \"242\"}, // \\xf2 - lowercase o, grave accent\n        {\"oacute\", \"243\"}, // \\xf3 - lowercase o, acute accent\n        {\"ocirc\", \"244\"}, // \\xf4 - lowercase o, circumflex accent\n        {\"otilde\", \"245\"}, // \\xf5 - lowercase o, tilde\n        {\"ouml\", \"246\"}, // \\xf6 - lowercase o, umlaut\n        {\"divide\", \"247\"}, // division sign\n        {\"oslash\", \"248\"}, // \\xf8 - lowercase o, slash\n        {\"ugrave\", \"249\"}, // \\xf9 - lowercase u, grave accent\n        {\"uacute\", \"250\"}, // \\xfa - lowercase u, acute accent\n        {\"ucirc\", \"251\"}, // \\xfb - lowercase u, circumflex accent\n        {\"uuml\", \"252\"}, // \\xfc - lowercase u, umlaut\n        {\"yacute\", \"253\"}, // \\xfd - lowercase y, acute accent\n        {\"thorn\", \"254\"}, // \\xfe - lowercase thorn, Icelandic\n        {\"yuml\", \"255\"}, // \\xff - lowercase y, umlaut\n    };",
        "begin_line": 53,
        "end_line": 150,
        "comment": " package scoped for testing"
    },
    {
        "class_name": "org.apache.commons.lang.Entities",
        "src_path": "src/java/org/apache/commons/lang/Entities.java",
        "signature": "org.apache.commons.lang.Entities.HTML40_ARRAY",
        "snippet": "    static final String[][] HTML40_ARRAY = {\n// <!-- Latin Extended-B -->\n        {\"fnof\", \"402\"}, //latin small f with hook = function= florin, U+0192 ISOtech -->\n// <!-- Greek -->\n        {\"Alpha\", \"913\"}, //greek capital letter alpha, U+0391 -->\n        {\"Beta\", \"914\"}, //greek capital letter beta, U+0392 -->\n        {\"Gamma\", \"915\"}, //greek capital letter gamma,U+0393 ISOgrk3 -->\n        {\"Delta\", \"916\"}, //greek capital letter delta,U+0394 ISOgrk3 -->\n        {\"Epsilon\", \"917\"}, //greek capital letter epsilon, U+0395 -->\n        {\"Zeta\", \"918\"}, //greek capital letter zeta, U+0396 -->\n        {\"Eta\", \"919\"}, //greek capital letter eta, U+0397 -->\n        {\"Theta\", \"920\"}, //greek capital letter theta,U+0398 ISOgrk3 -->\n        {\"Iota\", \"921\"}, //greek capital letter iota, U+0399 -->\n        {\"Kappa\", \"922\"}, //greek capital letter kappa, U+039A -->\n        {\"Lambda\", \"923\"}, //greek capital letter lambda,U+039B ISOgrk3 -->\n        {\"Mu\", \"924\"}, //greek capital letter mu, U+039C -->\n        {\"Nu\", \"925\"}, //greek capital letter nu, U+039D -->\n        {\"Xi\", \"926\"}, //greek capital letter xi, U+039E ISOgrk3 -->\n        {\"Omicron\", \"927\"}, //greek capital letter omicron, U+039F -->\n        {\"Pi\", \"928\"}, //greek capital letter pi, U+03A0 ISOgrk3 -->\n        {\"Rho\", \"929\"}, //greek capital letter rho, U+03A1 -->\n// <!-- there is no Sigmaf, and no U+03A2 character either -->\n        {\"Sigma\", \"931\"}, //greek capital letter sigma,U+03A3 ISOgrk3 -->\n        {\"Tau\", \"932\"}, //greek capital letter tau, U+03A4 -->\n        {\"Upsilon\", \"933\"}, //greek capital letter upsilon,U+03A5 ISOgrk3 -->\n        {\"Phi\", \"934\"}, //greek capital letter phi,U+03A6 ISOgrk3 -->\n        {\"Chi\", \"935\"}, //greek capital letter chi, U+03A7 -->\n        {\"Psi\", \"936\"}, //greek capital letter psi,U+03A8 ISOgrk3 -->\n        {\"Omega\", \"937\"}, //greek capital letter omega,U+03A9 ISOgrk3 -->\n        {\"alpha\", \"945\"}, //greek small letter alpha,U+03B1 ISOgrk3 -->\n        {\"beta\", \"946\"}, //greek small letter beta, U+03B2 ISOgrk3 -->\n        {\"gamma\", \"947\"}, //greek small letter gamma,U+03B3 ISOgrk3 -->\n        {\"delta\", \"948\"}, //greek small letter delta,U+03B4 ISOgrk3 -->\n        {\"epsilon\", \"949\"}, //greek small letter epsilon,U+03B5 ISOgrk3 -->\n        {\"zeta\", \"950\"}, //greek small letter zeta, U+03B6 ISOgrk3 -->\n        {\"eta\", \"951\"}, //greek small letter eta, U+03B7 ISOgrk3 -->\n        {\"theta\", \"952\"}, //greek small letter theta,U+03B8 ISOgrk3 -->\n        {\"iota\", \"953\"}, //greek small letter iota, U+03B9 ISOgrk3 -->\n        {\"kappa\", \"954\"}, //greek small letter kappa,U+03BA ISOgrk3 -->\n        {\"lambda\", \"955\"}, //greek small letter lambda,U+03BB ISOgrk3 -->\n        {\"mu\", \"956\"}, //greek small letter mu, U+03BC ISOgrk3 -->\n        {\"nu\", \"957\"}, //greek small letter nu, U+03BD ISOgrk3 -->\n        {\"xi\", \"958\"}, //greek small letter xi, U+03BE ISOgrk3 -->\n        {\"omicron\", \"959\"}, //greek small letter omicron, U+03BF NEW -->\n        {\"pi\", \"960\"}, //greek small letter pi, U+03C0 ISOgrk3 -->\n        {\"rho\", \"961\"}, //greek small letter rho, U+03C1 ISOgrk3 -->\n        {\"sigmaf\", \"962\"}, //greek small letter final sigma,U+03C2 ISOgrk3 -->\n        {\"sigma\", \"963\"}, //greek small letter sigma,U+03C3 ISOgrk3 -->\n        {\"tau\", \"964\"}, //greek small letter tau, U+03C4 ISOgrk3 -->\n        {\"upsilon\", \"965\"}, //greek small letter upsilon,U+03C5 ISOgrk3 -->\n        {\"phi\", \"966\"}, //greek small letter phi, U+03C6 ISOgrk3 -->\n        {\"chi\", \"967\"}, //greek small letter chi, U+03C7 ISOgrk3 -->\n        {\"psi\", \"968\"}, //greek small letter psi, U+03C8 ISOgrk3 -->\n        {\"omega\", \"969\"}, //greek small letter omega,U+03C9 ISOgrk3 -->\n        {\"thetasym\", \"977\"}, //greek small letter theta symbol,U+03D1 NEW -->\n        {\"upsih\", \"978\"}, //greek upsilon with hook symbol,U+03D2 NEW -->\n        {\"piv\", \"982\"}, //greek pi symbol, U+03D6 ISOgrk3 -->\n// <!-- General Punctuation -->\n        {\"bull\", \"8226\"}, //bullet = black small circle,U+2022 ISOpub  -->\n// <!-- bullet is NOT the same as bullet operator, U+2219 -->\n        {\"hellip\", \"8230\"}, //horizontal ellipsis = three dot leader,U+2026 ISOpub  -->\n        {\"prime\", \"8242\"}, //prime = minutes = feet, U+2032 ISOtech -->\n        {\"Prime\", \"8243\"}, //double prime = seconds = inches,U+2033 ISOtech -->\n        {\"oline\", \"8254\"}, //overline = spacing overscore,U+203E NEW -->\n        {\"frasl\", \"8260\"}, //fraction slash, U+2044 NEW -->\n// <!-- Letterlike Symbols -->\n        {\"weierp\", \"8472\"}, //script capital P = power set= Weierstrass p, U+2118 ISOamso -->\n        {\"image\", \"8465\"}, //blackletter capital I = imaginary part,U+2111 ISOamso -->\n        {\"real\", \"8476\"}, //blackletter capital R = real part symbol,U+211C ISOamso -->\n        {\"trade\", \"8482\"}, //trade mark sign, U+2122 ISOnum -->\n        {\"alefsym\", \"8501\"}, //alef symbol = first transfinite cardinal,U+2135 NEW -->\n// <!-- alef symbol is NOT the same as hebrew letter alef,U+05D0 although the \n//      same glyph could be used to depict both characters -->\n// <!-- Arrows -->\n        {\"larr\", \"8592\"}, //leftwards arrow, U+2190 ISOnum -->\n        {\"uarr\", \"8593\"}, //upwards arrow, U+2191 ISOnum-->\n        {\"rarr\", \"8594\"}, //rightwards arrow, U+2192 ISOnum -->\n        {\"darr\", \"8595\"}, //downwards arrow, U+2193 ISOnum -->\n        {\"harr\", \"8596\"}, //left right arrow, U+2194 ISOamsa -->\n        {\"crarr\", \"8629\"}, //downwards arrow with corner leftwards= carriage return, U+21B5 NEW -->\n        {\"lArr\", \"8656\"}, //leftwards double arrow, U+21D0 ISOtech -->\n// <!-- ISO 10646 does not say that lArr is the same as the 'is implied by' \n//      arrow but also does not have any other character for that function. \n//      So ? lArr canbe used for 'is implied by' as ISOtech suggests -->\n        {\"uArr\", \"8657\"}, //upwards double arrow, U+21D1 ISOamsa -->\n        {\"rArr\", \"8658\"}, //rightwards double arrow,U+21D2 ISOtech -->\n// <!-- ISO 10646 does not say this is the 'implies' character but does not\n//      have another character with this function so ?rArr can be used for\n//      'implies' as ISOtech suggests -->\n        {\"dArr\", \"8659\"}, //downwards double arrow, U+21D3 ISOamsa -->\n        {\"hArr\", \"8660\"}, //left right double arrow,U+21D4 ISOamsa -->\n// <!-- Mathematical Operators -->\n        {\"forall\", \"8704\"}, //for all, U+2200 ISOtech -->\n        {\"part\", \"8706\"}, //partial differential, U+2202 ISOtech  -->\n        {\"exist\", \"8707\"}, //there exists, U+2203 ISOtech -->\n        {\"empty\", \"8709\"}, //empty set = null set = diameter,U+2205 ISOamso -->\n        {\"nabla\", \"8711\"}, //nabla = backward difference,U+2207 ISOtech -->\n        {\"isin\", \"8712\"}, //element of, U+2208 ISOtech -->\n        {\"notin\", \"8713\"}, //not an element of, U+2209 ISOtech -->\n        {\"ni\", \"8715\"}, //contains as member, U+220B ISOtech -->\n// <!-- should there be a more memorable name than 'ni'? -->\n        {\"prod\", \"8719\"}, //n-ary product = product sign,U+220F ISOamsb -->\n// <!-- prod is NOT the same character as U+03A0 'greek capital letter pi' \n//      though the same glyph might be used for both -->\n        {\"sum\", \"8721\"}, //n-ary summation, U+2211 ISOamsb -->\n// <!-- sum is NOT the same character as U+03A3 'greek capital letter sigma'\n//      though the same glyph might be used for both -->\n        {\"minus\", \"8722\"}, //minus sign, U+2212 ISOtech -->\n        {\"lowast\", \"8727\"}, //asterisk operator, U+2217 ISOtech -->\n        {\"radic\", \"8730\"}, //square root = radical sign,U+221A ISOtech -->\n        {\"prop\", \"8733\"}, //proportional to, U+221D ISOtech -->\n        {\"infin\", \"8734\"}, //infinity, U+221E ISOtech -->\n        {\"ang\", \"8736\"}, //angle, U+2220 ISOamso -->\n        {\"and\", \"8743\"}, //logical and = wedge, U+2227 ISOtech -->\n        {\"or\", \"8744\"}, //logical or = vee, U+2228 ISOtech -->\n        {\"cap\", \"8745\"}, //intersection = cap, U+2229 ISOtech -->\n        {\"cup\", \"8746\"}, //union = cup, U+222A ISOtech -->\n        {\"int\", \"8747\"}, //integral, U+222B ISOtech -->\n        {\"there4\", \"8756\"}, //therefore, U+2234 ISOtech -->\n        {\"sim\", \"8764\"}, //tilde operator = varies with = similar to,U+223C ISOtech -->\n// <!-- tilde operator is NOT the same character as the tilde, U+007E,although\n//      the same glyph might be used to represent both  -->\n        {\"cong\", \"8773\"}, //approximately equal to, U+2245 ISOtech -->\n        {\"asymp\", \"8776\"}, //almost equal to = asymptotic to,U+2248 ISOamsr -->\n        {\"ne\", \"8800\"}, //not equal to, U+2260 ISOtech -->\n        {\"equiv\", \"8801\"}, //identical to, U+2261 ISOtech -->\n        {\"le\", \"8804\"}, //less-than or equal to, U+2264 ISOtech -->\n        {\"ge\", \"8805\"}, //greater-than or equal to,U+2265 ISOtech -->\n        {\"sub\", \"8834\"}, //subset of, U+2282 ISOtech -->\n        {\"sup\", \"8835\"}, //superset of, U+2283 ISOtech -->\n// <!-- note that nsup, 'not a superset of, U+2283' is not covered by the\n//      Symbol font encoding and is not included. Should it be, for symmetry?\n//      It is in ISOamsn  --> <!ENTITY nsub\", \"8836\"},  \n//      not a subset of, U+2284 ISOamsn -->\n        {\"sube\", \"8838\"}, //subset of or equal to, U+2286 ISOtech -->\n        {\"supe\", \"8839\"}, //superset of or equal to,U+2287 ISOtech -->\n        {\"oplus\", \"8853\"}, //circled plus = direct sum,U+2295 ISOamsb -->\n        {\"otimes\", \"8855\"}, //circled times = vector product,U+2297 ISOamsb -->\n        {\"perp\", \"8869\"}, //up tack = orthogonal to = perpendicular,U+22A5 ISOtech -->\n        {\"sdot\", \"8901\"}, //dot operator, U+22C5 ISOamsb -->\n// <!-- dot operator is NOT the same character as U+00B7 middle dot -->\n// <!-- Miscellaneous Technical -->\n        {\"lceil\", \"8968\"}, //left ceiling = apl upstile,U+2308 ISOamsc  -->\n        {\"rceil\", \"8969\"}, //right ceiling, U+2309 ISOamsc  -->\n        {\"lfloor\", \"8970\"}, //left floor = apl downstile,U+230A ISOamsc  -->\n        {\"rfloor\", \"8971\"}, //right floor, U+230B ISOamsc  -->\n        {\"lang\", \"9001\"}, //left-pointing angle bracket = bra,U+2329 ISOtech -->\n// <!-- lang is NOT the same character as U+003C 'less than' or U+2039 'single left-pointing angle quotation mark' -->\n        {\"rang\", \"9002\"}, //right-pointing angle bracket = ket,U+232A ISOtech -->\n// <!-- rang is NOT the same character as U+003E 'greater than' or U+203A \n//      'single right-pointing angle quotation mark' -->\n// <!-- Geometric Shapes -->\n        {\"loz\", \"9674\"}, //lozenge, U+25CA ISOpub -->\n// <!-- Miscellaneous Symbols -->\n        {\"spades\", \"9824\"}, //black spade suit, U+2660 ISOpub -->\n// <!-- black here seems to mean filled as opposed to hollow -->\n        {\"clubs\", \"9827\"}, //black club suit = shamrock,U+2663 ISOpub -->\n        {\"hearts\", \"9829\"}, //black heart suit = valentine,U+2665 ISOpub -->\n        {\"diams\", \"9830\"}, //black diamond suit, U+2666 ISOpub -->\n\n// <!-- Latin Extended-A -->\n        {\"OElig\", \"338\"}, //  -- latin capital ligature OE,U+0152 ISOlat2 -->\n        {\"oelig\", \"339\"}, //  -- latin small ligature oe, U+0153 ISOlat2 -->\n// <!-- ligature is a misnomer, this is a separate character in some languages -->\n        {\"Scaron\", \"352\"}, //  -- latin capital letter S with caron,U+0160 ISOlat2 -->\n        {\"scaron\", \"353\"}, //  -- latin small letter s with caron,U+0161 ISOlat2 -->\n        {\"Yuml\", \"376\"}, //  -- latin capital letter Y with diaeresis,U+0178 ISOlat2 -->\n// <!-- Spacing Modifier Letters -->\n        {\"circ\", \"710\"}, //  -- modifier letter circumflex accent,U+02C6 ISOpub -->\n        {\"tilde\", \"732\"}, //small tilde, U+02DC ISOdia -->\n// <!-- General Punctuation -->\n        {\"ensp\", \"8194\"}, //en space, U+2002 ISOpub -->\n        {\"emsp\", \"8195\"}, //em space, U+2003 ISOpub -->\n        {\"thinsp\", \"8201\"}, //thin space, U+2009 ISOpub -->\n        {\"zwnj\", \"8204\"}, //zero width non-joiner,U+200C NEW RFC 2070 -->\n        {\"zwj\", \"8205\"}, //zero width joiner, U+200D NEW RFC 2070 -->\n        {\"lrm\", \"8206\"}, //left-to-right mark, U+200E NEW RFC 2070 -->\n        {\"rlm\", \"8207\"}, //right-to-left mark, U+200F NEW RFC 2070 -->\n        {\"ndash\", \"8211\"}, //en dash, U+2013 ISOpub -->\n        {\"mdash\", \"8212\"}, //em dash, U+2014 ISOpub -->\n        {\"lsquo\", \"8216\"}, //left single quotation mark,U+2018 ISOnum -->\n        {\"rsquo\", \"8217\"}, //right single quotation mark,U+2019 ISOnum -->\n        {\"sbquo\", \"8218\"}, //single low-9 quotation mark, U+201A NEW -->\n        {\"ldquo\", \"8220\"}, //left double quotation mark,U+201C ISOnum -->\n        {\"rdquo\", \"8221\"}, //right double quotation mark,U+201D ISOnum -->\n        {\"bdquo\", \"8222\"}, //double low-9 quotation mark, U+201E NEW -->\n        {\"dagger\", \"8224\"}, //dagger, U+2020 ISOpub -->\n        {\"Dagger\", \"8225\"}, //double dagger, U+2021 ISOpub -->\n        {\"permil\", \"8240\"}, //per mille sign, U+2030 ISOtech -->\n        {\"lsaquo\", \"8249\"}, //single left-pointing angle quotation mark,U+2039 ISO proposed -->\n// <!-- lsaquo is proposed but not yet ISO standardized -->\n        {\"rsaquo\", \"8250\"}, //single right-pointing angle quotation mark,U+203A ISO proposed -->\n// <!-- rsaquo is proposed but not yet ISO standardized -->\n        {\"euro\", \"8364\"}, //  -- euro sign, U+20AC NEW -->\n    };",
        "begin_line": 154,
        "end_line": 348,
        "comment": " package scoped for testing"
    },
    {
        "class_name": "org.apache.commons.lang.Entities",
        "src_path": "src/java/org/apache/commons/lang/Entities.java",
        "signature": "org.apache.commons.lang.Entities.XML",
        "snippet": "    public static final Entities XML;",
        "begin_line": 353,
        "end_line": 353,
        "comment": "\n     * <p>The set of entities supported by standard XML.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.Entities",
        "src_path": "src/java/org/apache/commons/lang/Entities.java",
        "signature": "org.apache.commons.lang.Entities.HTML32",
        "snippet": "    public static final Entities HTML32;",
        "begin_line": 358,
        "end_line": 358,
        "comment": "\n     * <p>The set of entities supported by HTML 3.2.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.Entities",
        "src_path": "src/java/org/apache/commons/lang/Entities.java",
        "signature": "org.apache.commons.lang.Entities.HTML40",
        "snippet": "    public static final Entities HTML40;",
        "begin_line": 363,
        "end_line": 363,
        "comment": "\n     * <p>The set of entities supported by HTML 4.0.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.PrimitiveEntityMap",
        "src_path": "src/java/org/apache/commons/lang/Entities.java",
        "signature": "org.apache.commons.lang.PrimitiveEntityMap.mapNameToValue",
        "snippet": "        private Map mapNameToValue = new HashMap();",
        "begin_line": 420,
        "end_line": 420,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.PrimitiveEntityMap",
        "src_path": "src/java/org/apache/commons/lang/Entities.java",
        "signature": "org.apache.commons.lang.PrimitiveEntityMap.mapValueToName",
        "snippet": "        private IntHashMap mapValueToName = new IntHashMap();",
        "begin_line": 421,
        "end_line": 421,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.MapIntMap",
        "src_path": "src/java/org/apache/commons/lang/Entities.java",
        "signature": "org.apache.commons.lang.MapIntMap.mapNameToValue",
        "snippet": "        protected Map mapNameToValue;",
        "begin_line": 452,
        "end_line": 452,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.MapIntMap",
        "src_path": "src/java/org/apache/commons/lang/Entities.java",
        "signature": "org.apache.commons.lang.MapIntMap.mapValueToName",
        "snippet": "        protected Map mapValueToName;",
        "begin_line": 453,
        "end_line": 453,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.LookupEntityMap",
        "src_path": "src/java/org/apache/commons/lang/Entities.java",
        "signature": "org.apache.commons.lang.LookupEntityMap.lookupTable",
        "snippet": "        private String[] lookupTable;",
        "begin_line": 503,
        "end_line": 503,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.LookupEntityMap",
        "src_path": "src/java/org/apache/commons/lang/Entities.java",
        "signature": "org.apache.commons.lang.LookupEntityMap.LOOKUP_TABLE_SIZE",
        "snippet": "        private int LOOKUP_TABLE_SIZE = 256;",
        "begin_line": 504,
        "end_line": 504,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.ArrayEntityMap",
        "src_path": "src/java/org/apache/commons/lang/Entities.java",
        "signature": "org.apache.commons.lang.ArrayEntityMap.growBy",
        "snippet": "        protected int growBy = 100;",
        "begin_line": 541,
        "end_line": 541,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.ArrayEntityMap",
        "src_path": "src/java/org/apache/commons/lang/Entities.java",
        "signature": "org.apache.commons.lang.ArrayEntityMap.size",
        "snippet": "        protected int size = 0;",
        "begin_line": 542,
        "end_line": 542,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.ArrayEntityMap",
        "src_path": "src/java/org/apache/commons/lang/Entities.java",
        "signature": "org.apache.commons.lang.ArrayEntityMap.names",
        "snippet": "        protected String[] names;",
        "begin_line": 543,
        "end_line": 543,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.ArrayEntityMap",
        "src_path": "src/java/org/apache/commons/lang/Entities.java",
        "signature": "org.apache.commons.lang.ArrayEntityMap.values",
        "snippet": "        protected int[] values;",
        "begin_line": 544,
        "end_line": 544,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.Entities",
        "src_path": "src/java/org/apache/commons/lang/Entities.java",
        "signature": "org.apache.commons.lang.Entities.map",
        "snippet": "    EntityMap map = new Entities.LookupEntityMap();",
        "begin_line": 693,
        "end_line": 693,
        "comment": " package scoped for testing"
    },
    {
        "class_name": "org.apache.commons.lang.BitField",
        "src_path": "src/java/org/apache/commons/lang/BitField.java",
        "signature": "org.apache.commons.lang.BitField._mask",
        "snippet": "    private final int _mask;",
        "begin_line": 34,
        "end_line": 34,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.BitField",
        "src_path": "src/java/org/apache/commons/lang/BitField.java",
        "signature": "org.apache.commons.lang.BitField._shift_count",
        "snippet": "    private final int _shift_count;",
        "begin_line": 35,
        "end_line": 35,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.RandomStringUtils",
        "src_path": "src/java/org/apache/commons/lang/RandomStringUtils.java",
        "signature": "org.apache.commons.lang.RandomStringUtils.RANDOM",
        "snippet": "    private static final Random RANDOM = new Random();",
        "begin_line": 45,
        "end_line": 45,
        "comment": "\n     * <p>Random object used by random method. This has to be not local\n     * to the random method so as to not return the same value in the \n     * same millisecond.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ObjectUtils",
        "src_path": "src/java/org/apache/commons/lang/ObjectUtils.java",
        "signature": "org.apache.commons.lang.ObjectUtils.NULL",
        "snippet": "    public static final Null NULL = new Null();",
        "begin_line": 56,
        "end_line": 56,
        "comment": "\n     * <p>Singleton used as a <code>null</code> placeholder where\n     * <code>null</code> has another meaning.</p>\n     *\n     * <p>For example, in a <code>HashMap</code> the\n     * {@link java.util.HashMap#get(java.lang.Object)} method returns\n     * <code>null</code> if the <code>Map</code> contains\n     * <code>null</code> or if there is no matching key. The\n     * <code>Null</code> placeholder can be used to distinguish between\n     * these two cases.</p>\n     *\n     * <p>Another example is <code>Hashtable</code>, where <code>null</code>\n     * cannot be stored.</p>\n     *\n     * <p>This instance is Serializable.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.Null",
        "src_path": "src/java/org/apache/commons/lang/ObjectUtils.java",
        "signature": "org.apache.commons.lang.Null.serialVersionUID",
        "snippet": "        private static final long serialVersionUID = 7092611880189329093L;",
        "begin_line": 262,
        "end_line": 262,
        "comment": "\n         * Required for serialization support. Declare serialization compatibility with Commons Lang 1.0\n         * \n         * @see java.io.Serializable\n         "
    },
    {
        "class_name": "org.apache.commons.lang.UnhandledException",
        "src_path": "src/java/org/apache/commons/lang/UnhandledException.java",
        "signature": "org.apache.commons.lang.UnhandledException.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1832101364842773720L;",
        "begin_line": 52,
        "end_line": 52,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.NumberRange",
        "src_path": "src/java/org/apache/commons/lang/NumberRange.java",
        "signature": "org.apache.commons.lang.NumberRange.min",
        "snippet": "    private final Number min;",
        "begin_line": 38,
        "end_line": 38,
        "comment": " The minimum number in this range. "
    },
    {
        "class_name": "org.apache.commons.lang.NumberRange",
        "src_path": "src/java/org/apache/commons/lang/NumberRange.java",
        "signature": "org.apache.commons.lang.NumberRange.max",
        "snippet": "    private final Number max;",
        "begin_line": 41,
        "end_line": 41,
        "comment": " The maximum number in this range. "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberRange",
        "src_path": "src/java/org/apache/commons/lang/math/NumberRange.java",
        "signature": "org.apache.commons.lang.math.NumberRange.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 71849363892710L;",
        "begin_line": 37,
        "end_line": 37,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberRange",
        "src_path": "src/java/org/apache/commons/lang/math/NumberRange.java",
        "signature": "org.apache.commons.lang.math.NumberRange.min",
        "snippet": "    private final Number min;",
        "begin_line": 42,
        "end_line": 42,
        "comment": "\n     * The minimum number in this range.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberRange",
        "src_path": "src/java/org/apache/commons/lang/math/NumberRange.java",
        "signature": "org.apache.commons.lang.math.NumberRange.max",
        "snippet": "    private final Number max;",
        "begin_line": 46,
        "end_line": 46,
        "comment": "\n     * The maximum number in this range.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberRange",
        "src_path": "src/java/org/apache/commons/lang/math/NumberRange.java",
        "signature": "org.apache.commons.lang.math.NumberRange.hashCode",
        "snippet": "    private transient int hashCode = 0;",
        "begin_line": 51,
        "end_line": 51,
        "comment": "\n     * Cached output hashCode (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberRange",
        "src_path": "src/java/org/apache/commons/lang/math/NumberRange.java",
        "signature": "org.apache.commons.lang.math.NumberRange.toString",
        "snippet": "    private transient String toString = null;",
        "begin_line": 55,
        "end_line": 55,
        "comment": "\n     * Cached output toString (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.IntHashMap",
        "src_path": "src/java/org/apache/commons/lang/IntHashMap.java",
        "signature": "org.apache.commons.lang.IntHashMap.table",
        "snippet": "    private transient Entry table[];",
        "begin_line": 43,
        "end_line": 43,
        "comment": "\n     * The hash table data.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.IntHashMap",
        "src_path": "src/java/org/apache/commons/lang/IntHashMap.java",
        "signature": "org.apache.commons.lang.IntHashMap.count",
        "snippet": "    private transient int count;",
        "begin_line": 48,
        "end_line": 48,
        "comment": "\n     * The total number of entries in the hash table.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.IntHashMap",
        "src_path": "src/java/org/apache/commons/lang/IntHashMap.java",
        "signature": "org.apache.commons.lang.IntHashMap.threshold",
        "snippet": "    private int threshold;",
        "begin_line": 56,
        "end_line": 56,
        "comment": "\n     * The table is rehashed when its size exceeds this threshold.  (The\n     * value of this field is (int)(capacity * loadFactor).)\n     *\n     * @serial\n     "
    },
    {
        "class_name": "org.apache.commons.lang.IntHashMap",
        "src_path": "src/java/org/apache/commons/lang/IntHashMap.java",
        "signature": "org.apache.commons.lang.IntHashMap.loadFactor",
        "snippet": "    private float loadFactor;",
        "begin_line": 63,
        "end_line": 63,
        "comment": "\n     * The load factor for the hashtable.\n     *\n     * @serial\n     "
    },
    {
        "class_name": "org.apache.commons.lang.Entry",
        "src_path": "src/java/org/apache/commons/lang/IntHashMap.java",
        "signature": "org.apache.commons.lang.Entry.hash",
        "snippet": "        int hash;",
        "begin_line": 70,
        "end_line": 70,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.Entry",
        "src_path": "src/java/org/apache/commons/lang/IntHashMap.java",
        "signature": "org.apache.commons.lang.Entry.key",
        "snippet": "        int key;",
        "begin_line": 71,
        "end_line": 71,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.Entry",
        "src_path": "src/java/org/apache/commons/lang/IntHashMap.java",
        "signature": "org.apache.commons.lang.Entry.value",
        "snippet": "        Object value;",
        "begin_line": 72,
        "end_line": 72,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.Entry",
        "src_path": "src/java/org/apache/commons/lang/IntHashMap.java",
        "signature": "org.apache.commons.lang.Entry.next",
        "snippet": "        Entry next;",
        "begin_line": 73,
        "end_line": 73,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.ClassUtils",
        "src_path": "src/java/org/apache/commons/lang/ClassUtils.java",
        "signature": "org.apache.commons.lang.ClassUtils.PACKAGE_SEPARATOR_CHAR",
        "snippet": "    public static final char PACKAGE_SEPARATOR_CHAR = '.';",
        "begin_line": 46,
        "end_line": 46,
        "comment": "\n     * <p>The package separator character: <code>'&#x2e;' == {@value}</code>.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ClassUtils",
        "src_path": "src/java/org/apache/commons/lang/ClassUtils.java",
        "signature": "org.apache.commons.lang.ClassUtils.PACKAGE_SEPARATOR",
        "snippet": "    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);",
        "begin_line": 51,
        "end_line": 51,
        "comment": "\n     * <p>The package separator String: <code>\"&#x2e;\"</code>.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ClassUtils",
        "src_path": "src/java/org/apache/commons/lang/ClassUtils.java",
        "signature": "org.apache.commons.lang.ClassUtils.INNER_CLASS_SEPARATOR_CHAR",
        "snippet": "    public static final char INNER_CLASS_SEPARATOR_CHAR = '$';",
        "begin_line": 56,
        "end_line": 56,
        "comment": "\n     * <p>The inner class separator character: <code>'$' == {@value}</code>.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ClassUtils",
        "src_path": "src/java/org/apache/commons/lang/ClassUtils.java",
        "signature": "org.apache.commons.lang.ClassUtils.INNER_CLASS_SEPARATOR",
        "snippet": "    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);",
        "begin_line": 61,
        "end_line": 61,
        "comment": "\n     * <p>The inner class separator String: <code>\"$\"</code>.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ClassUtils",
        "src_path": "src/java/org/apache/commons/lang/ClassUtils.java",
        "signature": "org.apache.commons.lang.ClassUtils.primitiveWrapperMap",
        "snippet": "    private static Map  primitiveWrapperMap = new HashMap();",
        "begin_line": 66,
        "end_line": 66,
        "comment": "\n     * Maps primitive <code>Class</code>es to their corresponding wrapper <code>Class</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.ClassUtils",
        "src_path": "src/java/org/apache/commons/lang/ClassUtils.java",
        "signature": "org.apache.commons.lang.ClassUtils.abbreviationMap",
        "snippet": "    private static Map abbreviationMap = new HashMap();",
        "begin_line": 82,
        "end_line": 82,
        "comment": "\n     * Maps a primitive class name to its corresponding abbreviation used in array class names.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.IllegalClassException",
        "src_path": "src/java/org/apache/commons/lang/IllegalClassException.java",
        "signature": "org.apache.commons.lang.IllegalClassException.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 8063272569377254819L;",
        "begin_line": 52,
        "end_line": 52,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.CharRange",
        "src_path": "src/java/org/apache/commons/lang/CharRange.java",
        "signature": "org.apache.commons.lang.CharRange.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 8270183163158333422L;",
        "begin_line": 39,
        "end_line": 39,
        "comment": "\n     * Required for serialization support. Lang version 2.0. \n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.CharRange",
        "src_path": "src/java/org/apache/commons/lang/CharRange.java",
        "signature": "org.apache.commons.lang.CharRange.start",
        "snippet": "    private final char start;",
        "begin_line": 42,
        "end_line": 42,
        "comment": " The first character, inclusive, in the range. "
    },
    {
        "class_name": "org.apache.commons.lang.CharRange",
        "src_path": "src/java/org/apache/commons/lang/CharRange.java",
        "signature": "org.apache.commons.lang.CharRange.end",
        "snippet": "    private final char end;",
        "begin_line": 44,
        "end_line": 44,
        "comment": " The last character, inclusive, in the range. "
    },
    {
        "class_name": "org.apache.commons.lang.CharRange",
        "src_path": "src/java/org/apache/commons/lang/CharRange.java",
        "signature": "org.apache.commons.lang.CharRange.negated",
        "snippet": "    private final boolean negated;",
        "begin_line": 46,
        "end_line": 46,
        "comment": " True if the range is everything except the characters specified. "
    },
    {
        "class_name": "org.apache.commons.lang.CharRange",
        "src_path": "src/java/org/apache/commons/lang/CharRange.java",
        "signature": "org.apache.commons.lang.CharRange.iToString",
        "snippet": "    private transient String iToString;",
        "begin_line": 49,
        "end_line": 49,
        "comment": " Cached toString. "
    },
    {
        "class_name": "org.apache.commons.lang.CharUtils",
        "src_path": "src/java/org/apache/commons/lang/CharUtils.java",
        "signature": "org.apache.commons.lang.CharUtils.CHAR_STRING",
        "snippet": "    private static final String CHAR_STRING = \n        \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\" +\n        \"\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\" +\n        \"\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\" +\n        \"\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f\" +\n        \"\\u0020\\u0021\\\"\\u0023\\u0024\\u0025\\u0026\\u0027\" +\n        \"\\u0028\\u0029\\u002a\\u002b\\u002c\\u002d\\u002e\\u002f\" +\n        \"\\u0030\\u0031\\u0032\\u0033\\u0034\\u0035\\u0036\\u0037\" +\n        \"\\u0038\\u0039\\u003a\\u003b\\u003c\\u003d\\u003e\\u003f\" +\n        \"\\u0040\\u0041\\u0042\\u0043\\u0044\\u0045\\u0046\\u0047\" +\n        \"\\u0048\\u0049\\u004a\\u004b\\u004c\\u004d\\u004e\\u004f\" +\n        \"\\u0050\\u0051\\u0052\\u0053\\u0054\\u0055\\u0056\\u0057\" +\n        \"\\u0058\\u0059\\u005a\\u005b\\\\\\u005d\\u005e\\u005f\" +\n        \"\\u0060\\u0061\\u0062\\u0063\\u0064\\u0065\\u0066\\u0067\" +\n        \"\\u0068\\u0069\\u006a\\u006b\\u006c\\u006d\\u006e\\u006f\" +\n        \"\\u0070\\u0071\\u0072\\u0073\\u0074\\u0075\\u0076\\u0077\" +\n        \"\\u0078\\u0079\\u007a\\u007b\\u007c\\u007d\\u007e\\u007f\";",
        "begin_line": 32,
        "end_line": 48,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.CharUtils",
        "src_path": "src/java/org/apache/commons/lang/CharUtils.java",
        "signature": "org.apache.commons.lang.CharUtils.CHAR_STRING_ARRAY",
        "snippet": "    private static final String[] CHAR_STRING_ARRAY = new String[128];",
        "begin_line": 50,
        "end_line": 50,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.CharUtils",
        "src_path": "src/java/org/apache/commons/lang/CharUtils.java",
        "signature": "org.apache.commons.lang.CharUtils.CHAR_ARRAY",
        "snippet": "    private static final Character[] CHAR_ARRAY = new Character[128];",
        "begin_line": 51,
        "end_line": 51,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.CharUtils",
        "src_path": "src/java/org/apache/commons/lang/CharUtils.java",
        "signature": "org.apache.commons.lang.CharUtils.LF",
        "snippet": "    public static final char LF = '\\n';",
        "begin_line": 60,
        "end_line": 60,
        "comment": "\n     * <code>\\u000a</code> linefeed LF ('\\n').\n     * \n     * @see <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/lexical.html#101089\">JLF: Escape Sequences\n     *      for Character and String Literals</a>\n     * @since 2.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang.CharUtils",
        "src_path": "src/java/org/apache/commons/lang/CharUtils.java",
        "signature": "org.apache.commons.lang.CharUtils.CR",
        "snippet": "    public static final char CR = '\\r';",
        "begin_line": 69,
        "end_line": 69,
        "comment": "\n     * <code>\\u000d</code> carriage return CR ('\\r').\n     * \n     * @see <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/lexical.html#101089\">JLF: Escape Sequences\n     *      for Character and String Literals</a>\n     * @since 2.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang.CharEncoding",
        "src_path": "src/java/org/apache/commons/lang/CharEncoding.java",
        "signature": "org.apache.commons.lang.CharEncoding.ISO_8859_1",
        "snippet": "    public static final String ISO_8859_1 = \"ISO-8859-1\";",
        "begin_line": 55,
        "end_line": 55,
        "comment": "\n     * <p>\n     * ISO Latin Alphabet #1, also known as ISO-LATIN-1.\n     * </p>\n     * <p>\n     * Every implementation of the Java platform is required to support this character encoding.\n     * </p>\n     * \n     * @see <a href=\"http://java.sun.com/j2se/1.3/docs/api/java/lang/package-summary.html#charenc\">JRE character\n     *      encoding names</a>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.CharEncoding",
        "src_path": "src/java/org/apache/commons/lang/CharEncoding.java",
        "signature": "org.apache.commons.lang.CharEncoding.US_ASCII",
        "snippet": "    public static final String US_ASCII = \"US-ASCII\";",
        "begin_line": 68,
        "end_line": 68,
        "comment": "\n     * <p>\n     * Seven-bit ASCII, also known as ISO646-US, also known as the Basic Latin block of the Unicode character set.\n     * </p>\n     * <p>\n     * Every implementation of the Java platform is required to support this character encoding.\n     * </p>\n     * \n     * @see <a href=\"http://java.sun.com/j2se/1.3/docs/api/java/lang/package-summary.html#charenc\">JRE character\n     *      encoding names</a>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.CharEncoding",
        "src_path": "src/java/org/apache/commons/lang/CharEncoding.java",
        "signature": "org.apache.commons.lang.CharEncoding.UTF_16",
        "snippet": "    public static final String UTF_16 = \"UTF-16\";",
        "begin_line": 82,
        "end_line": 82,
        "comment": "\n     * <p>\n     * Sixteen-bit Unicode Transformation Format, byte order specified by a mandatory initial byte-order mark (either\n     * order accepted on input, big-endian used on output).\n     * </p>\n     * <p>\n     * Every implementation of the Java platform is required to support this character encoding.\n     * </p>\n     * \n     * @see <a href=\"http://java.sun.com/j2se/1.3/docs/api/java/lang/package-summary.html#charenc\">JRE character\n     *      encoding names</a>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.CharEncoding",
        "src_path": "src/java/org/apache/commons/lang/CharEncoding.java",
        "signature": "org.apache.commons.lang.CharEncoding.UTF_16BE",
        "snippet": "    public static final String UTF_16BE = \"UTF-16BE\";",
        "begin_line": 95,
        "end_line": 95,
        "comment": "\n     * <p>\n     * Sixteen-bit Unicode Transformation Format, big-endian byte order.\n     * </p>\n     * <p>\n     * Every implementation of the Java platform is required to support this character encoding.\n     * </p>\n     * \n     * @see <a href=\"http://java.sun.com/j2se/1.3/docs/api/java/lang/package-summary.html#charenc\">JRE character\n     *      encoding names</a>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.CharEncoding",
        "src_path": "src/java/org/apache/commons/lang/CharEncoding.java",
        "signature": "org.apache.commons.lang.CharEncoding.UTF_16LE",
        "snippet": "    public static final String UTF_16LE = \"UTF-16LE\";",
        "begin_line": 108,
        "end_line": 108,
        "comment": "\n     * <p>\n     * Sixteen-bit Unicode Transformation Format, little-endian byte order.\n     * </p>\n     * <p>\n     * Every implementation of the Java platform is required to support this character encoding.\n     * </p>\n     * \n     * @see <a href=\"http://java.sun.com/j2se/1.3/docs/api/java/lang/package-summary.html#charenc\">JRE character\n     *      encoding names</a>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.CharEncoding",
        "src_path": "src/java/org/apache/commons/lang/CharEncoding.java",
        "signature": "org.apache.commons.lang.CharEncoding.UTF_8",
        "snippet": "    public static final String UTF_8 = \"UTF-8\";",
        "begin_line": 121,
        "end_line": 121,
        "comment": "\n     * <p>\n     * Eight-bit Unicode Transformation Format.\n     * </p>\n     * <p>\n     * Every implementation of the Java platform is required to support this character encoding.\n     * </p>\n     * \n     * @see <a href=\"http://java.sun.com/j2se/1.3/docs/api/java/lang/package-summary.html#charenc\">JRE character\n     *      encoding names</a>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberUtils",
        "src_path": "src/java/org/apache/commons/lang/math/NumberUtils.java",
        "signature": "org.apache.commons.lang.math.NumberUtils.LONG_ZERO",
        "snippet": "    public static final Long LONG_ZERO = new Long(0L);",
        "begin_line": 41,
        "end_line": 41,
        "comment": " Reusable Long constant for zero. "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberUtils",
        "src_path": "src/java/org/apache/commons/lang/math/NumberUtils.java",
        "signature": "org.apache.commons.lang.math.NumberUtils.LONG_ONE",
        "snippet": "    public static final Long LONG_ONE = new Long(1L);",
        "begin_line": 43,
        "end_line": 43,
        "comment": " Reusable Long constant for one. "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberUtils",
        "src_path": "src/java/org/apache/commons/lang/math/NumberUtils.java",
        "signature": "org.apache.commons.lang.math.NumberUtils.LONG_MINUS_ONE",
        "snippet": "    public static final Long LONG_MINUS_ONE = new Long(-1L);",
        "begin_line": 45,
        "end_line": 45,
        "comment": " Reusable Long constant for minus one. "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberUtils",
        "src_path": "src/java/org/apache/commons/lang/math/NumberUtils.java",
        "signature": "org.apache.commons.lang.math.NumberUtils.INTEGER_ZERO",
        "snippet": "    public static final Integer INTEGER_ZERO = new Integer(0);",
        "begin_line": 47,
        "end_line": 47,
        "comment": " Reusable Integer constant for zero. "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberUtils",
        "src_path": "src/java/org/apache/commons/lang/math/NumberUtils.java",
        "signature": "org.apache.commons.lang.math.NumberUtils.INTEGER_ONE",
        "snippet": "    public static final Integer INTEGER_ONE = new Integer(1);",
        "begin_line": 49,
        "end_line": 49,
        "comment": " Reusable Integer constant for one. "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberUtils",
        "src_path": "src/java/org/apache/commons/lang/math/NumberUtils.java",
        "signature": "org.apache.commons.lang.math.NumberUtils.INTEGER_MINUS_ONE",
        "snippet": "    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);",
        "begin_line": 51,
        "end_line": 51,
        "comment": " Reusable Integer constant for minus one. "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberUtils",
        "src_path": "src/java/org/apache/commons/lang/math/NumberUtils.java",
        "signature": "org.apache.commons.lang.math.NumberUtils.SHORT_ZERO",
        "snippet": "    public static final Short SHORT_ZERO = new Short((short) 0);",
        "begin_line": 53,
        "end_line": 53,
        "comment": " Reusable Short constant for zero. "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberUtils",
        "src_path": "src/java/org/apache/commons/lang/math/NumberUtils.java",
        "signature": "org.apache.commons.lang.math.NumberUtils.SHORT_ONE",
        "snippet": "    public static final Short SHORT_ONE = new Short((short) 1);",
        "begin_line": 55,
        "end_line": 55,
        "comment": " Reusable Short constant for one. "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberUtils",
        "src_path": "src/java/org/apache/commons/lang/math/NumberUtils.java",
        "signature": "org.apache.commons.lang.math.NumberUtils.SHORT_MINUS_ONE",
        "snippet": "    public static final Short SHORT_MINUS_ONE = new Short((short) -1);",
        "begin_line": 57,
        "end_line": 57,
        "comment": " Reusable Short constant for minus one. "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberUtils",
        "src_path": "src/java/org/apache/commons/lang/math/NumberUtils.java",
        "signature": "org.apache.commons.lang.math.NumberUtils.BYTE_ZERO",
        "snippet": "    public static final Byte BYTE_ZERO = new Byte((byte) 0);",
        "begin_line": 59,
        "end_line": 59,
        "comment": " Reusable Byte constant for zero. "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberUtils",
        "src_path": "src/java/org/apache/commons/lang/math/NumberUtils.java",
        "signature": "org.apache.commons.lang.math.NumberUtils.BYTE_ONE",
        "snippet": "    public static final Byte BYTE_ONE = new Byte((byte) 1);",
        "begin_line": 61,
        "end_line": 61,
        "comment": " Reusable Byte constant for one. "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberUtils",
        "src_path": "src/java/org/apache/commons/lang/math/NumberUtils.java",
        "signature": "org.apache.commons.lang.math.NumberUtils.BYTE_MINUS_ONE",
        "snippet": "    public static final Byte BYTE_MINUS_ONE = new Byte((byte) -1);",
        "begin_line": 63,
        "end_line": 63,
        "comment": " Reusable Byte constant for minus one. "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberUtils",
        "src_path": "src/java/org/apache/commons/lang/math/NumberUtils.java",
        "signature": "org.apache.commons.lang.math.NumberUtils.DOUBLE_ZERO",
        "snippet": "    public static final Double DOUBLE_ZERO = new Double(0.0d);",
        "begin_line": 65,
        "end_line": 65,
        "comment": " Reusable Double constant for zero. "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberUtils",
        "src_path": "src/java/org/apache/commons/lang/math/NumberUtils.java",
        "signature": "org.apache.commons.lang.math.NumberUtils.DOUBLE_ONE",
        "snippet": "    public static final Double DOUBLE_ONE = new Double(1.0d);",
        "begin_line": 67,
        "end_line": 67,
        "comment": " Reusable Double constant for one. "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberUtils",
        "src_path": "src/java/org/apache/commons/lang/math/NumberUtils.java",
        "signature": "org.apache.commons.lang.math.NumberUtils.DOUBLE_MINUS_ONE",
        "snippet": "    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);",
        "begin_line": 69,
        "end_line": 69,
        "comment": " Reusable Double constant for minus one. "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberUtils",
        "src_path": "src/java/org/apache/commons/lang/math/NumberUtils.java",
        "signature": "org.apache.commons.lang.math.NumberUtils.FLOAT_ZERO",
        "snippet": "    public static final Float FLOAT_ZERO = new Float(0.0f);",
        "begin_line": 71,
        "end_line": 71,
        "comment": " Reusable Float constant for zero. "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberUtils",
        "src_path": "src/java/org/apache/commons/lang/math/NumberUtils.java",
        "signature": "org.apache.commons.lang.math.NumberUtils.FLOAT_ONE",
        "snippet": "    public static final Float FLOAT_ONE = new Float(1.0f);",
        "begin_line": 73,
        "end_line": 73,
        "comment": " Reusable Float constant for one. "
    },
    {
        "class_name": "org.apache.commons.lang.math.NumberUtils",
        "src_path": "src/java/org/apache/commons/lang/math/NumberUtils.java",
        "signature": "org.apache.commons.lang.math.NumberUtils.FLOAT_MINUS_ONE",
        "snippet": "    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);",
        "begin_line": 75,
        "end_line": 75,
        "comment": " Reusable Float constant for minus one. "
    },
    {
        "class_name": "org.apache.commons.lang.IncompleteArgumentException",
        "src_path": "src/java/org/apache/commons/lang/IncompleteArgumentException.java",
        "signature": "org.apache.commons.lang.IncompleteArgumentException.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 4954193403612068178L;",
        "begin_line": 55,
        "end_line": 55,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.OS_NAME_WINDOWS_PREFIX",
        "snippet": "    private static final String OS_NAME_WINDOWS_PREFIX = \"Windows\";",
        "begin_line": 45,
        "end_line": 45,
        "comment": "\n     * The prefix String for all Windows OS.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.USER_HOME_KEY",
        "snippet": "    private static final String USER_HOME_KEY = \"user.home\";",
        "begin_line": 54,
        "end_line": 54,
        "comment": "\n     * The System property key for the user home directory.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.USER_DIR_KEY",
        "snippet": "    private static final String USER_DIR_KEY = \"user.dir\";",
        "begin_line": 59,
        "end_line": 59,
        "comment": "\n     * The System property key for the user directory.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_IO_TMPDIR_KEY",
        "snippet": "    private static final String JAVA_IO_TMPDIR_KEY = \"java.io.tmpdir\";",
        "begin_line": 64,
        "end_line": 64,
        "comment": "\n     * The System property key for the Java IO temporary directory.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_HOME_KEY",
        "snippet": "    private static final String JAVA_HOME_KEY = \"java.home\";",
        "begin_line": 69,
        "end_line": 69,
        "comment": "\n     * The System property key for the Java home directory.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.AWT_TOOLKIT",
        "snippet": "    public static final String AWT_TOOLKIT = getSystemProperty(\"awt.toolkit\");",
        "begin_line": 87,
        "end_line": 87,
        "comment": "\n     * <p>The <code>awt.toolkit</code> System Property.</p>\n     * <p>Holds a class name, on Windows XP this is <code>sun.awt.windows.WToolkit</code>.</p>\n     * <p><b>On platforms without a GUI, this value is <code>null</code>.</b></p>\n     * \n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.FILE_ENCODING",
        "snippet": "    public static final String FILE_ENCODING = getSystemProperty(\"file.encoding\");",
        "begin_line": 105,
        "end_line": 105,
        "comment": "\n     * <p>The <code>file.encoding</code> System Property.</p>\n     * <p>File encoding, such as <code>Cp1252</code>.</p>\n     * \n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since 2.0\n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.FILE_SEPARATOR",
        "snippet": "    public static final String FILE_SEPARATOR = getSystemProperty(\"file.separator\");",
        "begin_line": 122,
        "end_line": 122,
        "comment": "\n     * <p>The <code>file.separator</code> System Property.\n     * File separator (<code>&quot;/&quot;</code> on UNIX).</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_AWT_FONTS",
        "snippet": "    public static final String JAVA_AWT_FONTS = getSystemProperty(\"java.awt.fonts\");",
        "begin_line": 138,
        "end_line": 138,
        "comment": "\n     * <p>The <code>java.awt.fonts</code> System Property.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_AWT_GRAPHICSENV",
        "snippet": "    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(\"java.awt.graphicsenv\");",
        "begin_line": 154,
        "end_line": 154,
        "comment": "\n     * <p>The <code>java.awt.graphicsenv</code> System Property.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_AWT_HEADLESS",
        "snippet": "    public static final String JAVA_AWT_HEADLESS = getSystemProperty(\"java.awt.headless\");",
        "begin_line": 175,
        "end_line": 175,
        "comment": "\n     * <p>\n     * The <code>java.awt.headless</code> System Property.\n     * The value of this property is the String <code>\"true\"</code> or <code>\"false\"</code>. \n     * </p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @see #isJavaAwtHeadless()\n     * @since 2.1\n     * @since Java 1.4\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_AWT_PRINTERJOB",
        "snippet": "    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(\"java.awt.printerjob\");",
        "begin_line": 191,
        "end_line": 191,
        "comment": "\n     * <p>The <code>java.awt.printerjob</code> System Property.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_CLASS_PATH",
        "snippet": "    public static final String JAVA_CLASS_PATH = getSystemProperty(\"java.class.path\");",
        "begin_line": 207,
        "end_line": 207,
        "comment": "\n     * <p>The <code>java.class.path</code> System Property. Java class path.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_CLASS_VERSION",
        "snippet": "    public static final String JAVA_CLASS_VERSION = getSystemProperty(\"java.class.version\");",
        "begin_line": 224,
        "end_line": 224,
        "comment": "\n     * <p>The <code>java.class.version</code> System Property.\n     * Java class format version number.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_COMPILER",
        "snippet": "    public static final String JAVA_COMPILER = getSystemProperty(\"java.compiler\");",
        "begin_line": 241,
        "end_line": 241,
        "comment": "\n     * <p>The <code>java.compiler</code> System Property. Name of JIT compiler to use.\n     * First in JDK version 1.2. Not used in Sun JDKs after 1.2.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.2. Not used in Sun versions after 1.2.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_ENDORSED_DIRS",
        "snippet": "    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(\"java.endorsed.dirs\");",
        "begin_line": 258,
        "end_line": 258,
        "comment": "\n     * <p>The <code>java.endorsed.dirs</code> System Property. Path of endorsed directory\n     * or directories.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.4\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_EXT_DIRS",
        "snippet": "    public static final String JAVA_EXT_DIRS = getSystemProperty(\"java.ext.dirs\");",
        "begin_line": 275,
        "end_line": 275,
        "comment": "\n     * <p>The <code>java.ext.dirs</code> System Property. Path of extension directory\n     * or directories.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.3\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_HOME",
        "snippet": "    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);",
        "begin_line": 291,
        "end_line": 291,
        "comment": "\n     * <p>The <code>java.home</code> System Property. Java installation directory.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_IO_TMPDIR",
        "snippet": "    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);",
        "begin_line": 307,
        "end_line": 307,
        "comment": "\n     * <p>The <code>java.io.tmpdir</code> System Property. Default temp file path.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_LIBRARY_PATH",
        "snippet": "    public static final String JAVA_LIBRARY_PATH = getSystemProperty(\"java.library.path\");",
        "begin_line": 324,
        "end_line": 324,
        "comment": "\n     * <p>The <code>java.library.path</code> System Property. List of paths to search\n     * when loading libraries.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_RUNTIME_NAME",
        "snippet": "    public static final String JAVA_RUNTIME_NAME = getSystemProperty(\"java.runtime.name\");",
        "begin_line": 342,
        "end_line": 342,
        "comment": "\n     * <p>The <code>java.runtime.name</code> System Property. Java Runtime Environment\n     * name.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since 2.0\n     * @since Java 1.3\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_RUNTIME_VERSION",
        "snippet": "    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(\"java.runtime.version\");",
        "begin_line": 360,
        "end_line": 360,
        "comment": "\n     * <p>The <code>java.runtime.version</code> System Property. Java Runtime Environment\n     * version.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since 2.0\n     * @since Java 1.3\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_SPECIFICATION_NAME",
        "snippet": "    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(\"java.specification.name\");",
        "begin_line": 377,
        "end_line": 377,
        "comment": "\n     * <p>The <code>java.specification.name</code> System Property. Java Runtime Environment\n     * specification name.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_SPECIFICATION_VENDOR",
        "snippet": "    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(\"java.specification.vendor\");",
        "begin_line": 394,
        "end_line": 394,
        "comment": "\n     * <p>The <code>java.specification.vendor</code> System Property. Java Runtime Environment\n     * specification vendor.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_SPECIFICATION_VERSION",
        "snippet": "    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(\"java.specification.version\");",
        "begin_line": 411,
        "end_line": 411,
        "comment": "\n     * <p>The <code>java.specification.version</code> System Property. Java Runtime Environment\n     * specification version.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.3\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_UTIL_PREFS_PREFERENCES_FACTORY",
        "snippet": "    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = \n        getSystemProperty(\"java.util.prefs.PreferencesFactory\");",
        "begin_line": 428,
        "end_line": 429,
        "comment": "\n     * <p>The <code>java.util.prefs.PreferencesFactory</code> System Property. A class name.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since 2.1\n     * @since Java 1.4\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_VENDOR",
        "snippet": "    public static final String JAVA_VENDOR = getSystemProperty(\"java.vendor\");",
        "begin_line": 445,
        "end_line": 445,
        "comment": "\n     * <p>The <code>java.vendor</code> System Property. Java vendor-specific string.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_VENDOR_URL",
        "snippet": "    public static final String JAVA_VENDOR_URL = getSystemProperty(\"java.vendor.url\");",
        "begin_line": 461,
        "end_line": 461,
        "comment": "\n     * <p>The <code>java.vendor.url</code> System Property. Java vendor URL.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.1\n    "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_VERSION",
        "snippet": "    public static final String JAVA_VERSION = getSystemProperty(\"java.version\");",
        "begin_line": 477,
        "end_line": 477,
        "comment": "\n     * <p>The <code>java.version</code> System Property. Java version number.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_VM_INFO",
        "snippet": "    public static final String JAVA_VM_INFO = getSystemProperty(\"java.vm.info\");",
        "begin_line": 495,
        "end_line": 495,
        "comment": "\n     * <p>The <code>java.vm.info</code> System Property. Java Virtual Machine implementation\n     * info.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since 2.0\n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_VM_NAME",
        "snippet": "    public static final String JAVA_VM_NAME = getSystemProperty(\"java.vm.name\");",
        "begin_line": 512,
        "end_line": 512,
        "comment": "\n     * <p>The <code>java.vm.name</code> System Property. Java Virtual Machine implementation\n     * name.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_VM_SPECIFICATION_NAME",
        "snippet": "    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(\"java.vm.specification.name\");",
        "begin_line": 529,
        "end_line": 529,
        "comment": "\n     * <p>The <code>java.vm.specification.name</code> System Property. Java Virtual Machine\n     * specification name.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_VM_SPECIFICATION_VENDOR",
        "snippet": "    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(\"java.vm.specification.vendor\");",
        "begin_line": 546,
        "end_line": 546,
        "comment": "\n     * <p>The <code>java.vm.specification.vendor</code> System Property. Java Virtual\n     * Machine specification vendor.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_VM_SPECIFICATION_VERSION",
        "snippet": "    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(\"java.vm.specification.version\");",
        "begin_line": 563,
        "end_line": 563,
        "comment": "\n     * <p>The <code>java.vm.specification.version</code> System Property. Java Virtual Machine\n     * specification version.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_VM_VENDOR",
        "snippet": "    public static final String JAVA_VM_VENDOR = getSystemProperty(\"java.vm.vendor\");",
        "begin_line": 580,
        "end_line": 580,
        "comment": "\n     * <p>The <code>java.vm.vendor</code> System Property. Java Virtual Machine implementation\n     * vendor.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_VM_VERSION",
        "snippet": "    public static final String JAVA_VM_VERSION = getSystemProperty(\"java.vm.version\");",
        "begin_line": 597,
        "end_line": 597,
        "comment": "\n     * <p>The <code>java.vm.version</code> System Property. Java Virtual Machine\n     * implementation version.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.LINE_SEPARATOR",
        "snippet": "    public static final String LINE_SEPARATOR = getSystemProperty(\"line.separator\");",
        "begin_line": 614,
        "end_line": 614,
        "comment": "\n     * <p>The <code>line.separator</code> System Property. Line separator\n     * (<code>&quot;\\n&quot;</code> on UNIX).</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.OS_ARCH",
        "snippet": "    public static final String OS_ARCH = getSystemProperty(\"os.arch\");",
        "begin_line": 630,
        "end_line": 630,
        "comment": "\n     * <p>The <code>os.arch</code> System Property. Operating system architecture.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.OS_NAME",
        "snippet": "    public static final String OS_NAME = getSystemProperty(\"os.name\");",
        "begin_line": 646,
        "end_line": 646,
        "comment": "\n     * <p>The <code>os.name</code> System Property. Operating system name.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.OS_VERSION",
        "snippet": "    public static final String OS_VERSION = getSystemProperty(\"os.version\");",
        "begin_line": 662,
        "end_line": 662,
        "comment": "\n     * <p>The <code>os.version</code> System Property. Operating system version.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.PATH_SEPARATOR",
        "snippet": "    public static final String PATH_SEPARATOR = getSystemProperty(\"path.separator\");",
        "begin_line": 679,
        "end_line": 679,
        "comment": "\n     * <p>The <code>path.separator</code> System Property. Path separator\n     * (<code>&quot;:&quot;</code> on UNIX).</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.USER_COUNTRY",
        "snippet": "    public static final String USER_COUNTRY = \n        getSystemProperty(\"user.country\") == null ?\n            getSystemProperty(\"user.region\") : getSystemProperty(\"user.country\");",
        "begin_line": 698,
        "end_line": 700,
        "comment": "\n     * <p>The <code>user.country</code> or <code>user.region</code> System Property.\n     * User's country code, such as <code>GB</code>. First in JDK version 1.2 as\n     * <code>user.region</code>. Renamed to <code>user.country</code> in 1.4</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since 2.0\n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.USER_DIR",
        "snippet": "    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);",
        "begin_line": 717,
        "end_line": 717,
        "comment": "\n     * <p>The <code>user.dir</code> System Property. User's current working\n     * directory.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.USER_HOME",
        "snippet": "    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);",
        "begin_line": 733,
        "end_line": 733,
        "comment": "\n     * <p>The <code>user.home</code> System Property. User's home directory.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.USER_LANGUAGE",
        "snippet": "    public static final String USER_LANGUAGE = getSystemProperty(\"user.language\");",
        "begin_line": 751,
        "end_line": 751,
        "comment": "\n     * <p>The <code>user.language</code> System Property. User's language code,\n     * such as <code>\"en\"</code>.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since 2.0\n     * @since Java 1.2\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.USER_NAME",
        "snippet": "    public static final String USER_NAME = getSystemProperty(\"user.name\");",
        "begin_line": 767,
        "end_line": 767,
        "comment": "\n     * <p>The <code>user.name</code> System Property. User's account name.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since Java 1.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.USER_TIMEZONE",
        "snippet": "    public static final String USER_TIMEZONE = getSystemProperty(\"user.timezone\");",
        "begin_line": 784,
        "end_line": 784,
        "comment": "\n     * <p>The <code>user.timezone</code> System Property. \n     * For example: <code>\"America/Los_Angeles\"</code>.</p>\n     *\n     * <p>Defaults to <code>null</code> if the runtime does not have\n     * security access to read this property or the property does not exist.</p>\n     * \n     * <p>\n     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n     * will be out of sync with that System property.\n     * </p>\n     * \n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_VERSION_TRIMMED",
        "snippet": "    public static final String JAVA_VERSION_TRIMMED = getJavaVersionTrimmed();",
        "begin_line": 798,
        "end_line": 798,
        "comment": "\n     * <p>Gets the Java version as a <code>String</code> trimming leading letters.</p>\n     *\n     * <p>The field will return <code>null</code> if {@link #JAVA_VERSION} is <code>null</code>.</p>\n     * \n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_VERSION_FLOAT",
        "snippet": "    public static final float JAVA_VERSION_FLOAT = getJavaVersionAsFloat();",
        "begin_line": 818,
        "end_line": 818,
        "comment": "\n     * <p>Gets the Java version as a <code>float</code>.</p>\n     *\n     * <p>Example return values:</p>\n     * <ul>\n     *  <li><code>1.2f</code> for JDK 1.2\n     *  <li><code>1.31f</code> for JDK 1.3.1\n     * </ul>\n     *\n     * <p>The field will return zero if {@link #JAVA_VERSION} is <code>null</code>.</p>\n     * \n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.JAVA_VERSION_INT",
        "snippet": "    public static final int JAVA_VERSION_INT = getJavaVersionAsInt();",
        "begin_line": 833,
        "end_line": 833,
        "comment": "\n     * <p>Gets the Java version as an <code>int</code>.</p>\n     *\n     * <p>Example return values:</p>\n     * <ul>\n     *  <li><code>120</code> for JDK 1.2\n     *  <li><code>131</code> for JDK 1.3.1\n     * </ul>\n     *\n     * <p>The field will return zero if {@link #JAVA_VERSION} is <code>null</code>.</p>\n     * \n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_JAVA_1_1",
        "snippet": "    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(\"1.1\");",
        "begin_line": 846,
        "end_line": 846,
        "comment": "\n     * <p>Is <code>true</code> if this is Java version 1.1 (also 1.1.x versions).</p>\n     *\n     * <p>The field will return <code>false</code> if {@link #JAVA_VERSION} is\n     * <code>null</code>.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_JAVA_1_2",
        "snippet": "    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(\"1.2\");",
        "begin_line": 854,
        "end_line": 854,
        "comment": "\n     * <p>Is <code>true</code> if this is Java version 1.2 (also 1.2.x versions).</p>\n     *\n     * <p>The field will return <code>false</code> if {@link #JAVA_VERSION} is\n     * <code>null</code>.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_JAVA_1_3",
        "snippet": "    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(\"1.3\");",
        "begin_line": 862,
        "end_line": 862,
        "comment": "\n     * <p>Is <code>true</code> if this is Java version 1.3 (also 1.3.x versions).</p>\n     *\n     * <p>The field will return <code>false</code> if {@link #JAVA_VERSION} is\n     * <code>null</code>.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_JAVA_1_4",
        "snippet": "    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(\"1.4\");",
        "begin_line": 870,
        "end_line": 870,
        "comment": "\n     * <p>Is <code>true</code> if this is Java version 1.4 (also 1.4.x versions).</p>\n     *\n     * <p>The field will return <code>false</code> if {@link #JAVA_VERSION} is\n     * <code>null</code>.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_JAVA_1_5",
        "snippet": "    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(\"1.5\");",
        "begin_line": 878,
        "end_line": 878,
        "comment": "\n     * <p>Is <code>true</code> if this is Java version 1.5 (also 1.5.x versions).</p>\n     *\n     * <p>The field will return <code>false</code> if {@link #JAVA_VERSION} is\n     * <code>null</code>.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_JAVA_1_6",
        "snippet": "    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(\"1.6\");",
        "begin_line": 886,
        "end_line": 886,
        "comment": "\n     * <p>Is <code>true</code> if this is Java version 1.6 (also 1.6.x versions).</p>\n     *\n     * <p>The field will return <code>false</code> if {@link #JAVA_VERSION} is\n     * <code>null</code>.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_OS_AIX",
        "snippet": "    public static final boolean IS_OS_AIX = getOSMatches(\"AIX\");",
        "begin_line": 904,
        "end_line": 904,
        "comment": "\n     * <p>Is <code>true</code> if this is AIX.</p>\n     *\n     * <p>The field will return <code>false</code> if <code>OS_NAME</code> is\n     * <code>null</code>.</p>\n     * \n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_OS_HP_UX",
        "snippet": "    public static final boolean IS_OS_HP_UX = getOSMatches(\"HP-UX\");",
        "begin_line": 914,
        "end_line": 914,
        "comment": "\n     * <p>Is <code>true</code> if this is HP-UX.</p>\n     *\n     * <p>The field will return <code>false</code> if <code>OS_NAME</code> is\n     * <code>null</code>.</p>\n     * \n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_OS_IRIX",
        "snippet": "    public static final boolean IS_OS_IRIX = getOSMatches(\"Irix\");",
        "begin_line": 924,
        "end_line": 924,
        "comment": "\n     * <p>Is <code>true</code> if this is Irix.</p>\n     *\n     * <p>The field will return <code>false</code> if <code>OS_NAME</code> is\n     * <code>null</code>.</p>\n     * \n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_OS_LINUX",
        "snippet": "    public static final boolean IS_OS_LINUX = getOSMatches(\"Linux\") || getOSMatches(\"LINUX\");",
        "begin_line": 934,
        "end_line": 934,
        "comment": "\n     * <p>Is <code>true</code> if this is Linux.</p>\n     *\n     * <p>The field will return <code>false</code> if <code>OS_NAME</code> is\n     * <code>null</code>.</p>\n     * \n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_OS_MAC",
        "snippet": "    public static final boolean IS_OS_MAC = getOSMatches(\"Mac\");",
        "begin_line": 944,
        "end_line": 944,
        "comment": "\n     * <p>Is <code>true</code> if this is Mac.</p>\n     *\n     * <p>The field will return <code>false</code> if <code>OS_NAME</code> is\n     * <code>null</code>.</p>\n     * \n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_OS_MAC_OSX",
        "snippet": "    public static final boolean IS_OS_MAC_OSX = getOSMatches(\"Mac OS X\");",
        "begin_line": 954,
        "end_line": 954,
        "comment": "\n     * <p>Is <code>true</code> if this is Mac.</p>\n     *\n     * <p>The field will return <code>false</code> if <code>OS_NAME</code> is\n     * <code>null</code>.</p>\n     * \n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_OS_OS2",
        "snippet": "    public static final boolean IS_OS_OS2 = getOSMatches(\"OS/2\");",
        "begin_line": 964,
        "end_line": 964,
        "comment": "\n     * <p>Is <code>true</code> if this is OS/2.</p>\n     *\n     * <p>The field will return <code>false</code> if <code>OS_NAME</code> is\n     * <code>null</code>.</p>\n     * \n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_OS_SOLARIS",
        "snippet": "    public static final boolean IS_OS_SOLARIS = getOSMatches(\"Solaris\");",
        "begin_line": 974,
        "end_line": 974,
        "comment": "\n     * <p>Is <code>true</code> if this is Solaris.</p>\n     *\n     * <p>The field will return <code>false</code> if <code>OS_NAME</code> is\n     * <code>null</code>.</p>\n     * \n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_OS_SUN_OS",
        "snippet": "    public static final boolean IS_OS_SUN_OS = getOSMatches(\"SunOS\");",
        "begin_line": 984,
        "end_line": 984,
        "comment": "\n     * <p>Is <code>true</code> if this is SunOS.</p>\n     *\n     * <p>The field will return <code>false</code> if <code>OS_NAME</code> is\n     * <code>null</code>.</p>\n     * \n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_OS_UNIX",
        "snippet": "    public static final boolean IS_OS_UNIX =\n        IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX ||\n        IS_OS_MAC_OSX || IS_OS_SOLARIS || IS_OS_SUN_OS;",
        "begin_line": 995,
        "end_line": 997,
        "comment": "\n     * <p>Is <code>true</code> if this is a POSIX compilant system,\n     * as in any of AIX, HP-UX, Irix, Linux, MacOSX, Solaris or SUN OS.</p>\n     *\n     * <p>The field will return <code>false</code> if <code>OS_NAME</code> is\n     * <code>null</code>.</p>\n     * \n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS",
        "snippet": "    public static final boolean IS_OS_WINDOWS = getOSMatches(OS_NAME_WINDOWS_PREFIX);",
        "begin_line": 1007,
        "end_line": 1007,
        "comment": "\n     * <p>Is <code>true</code> if this is Windows.</p>\n     *\n     * <p>The field will return <code>false</code> if <code>OS_NAME</code> is\n     * <code>null</code>.</p>\n     * \n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_2000",
        "snippet": "    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, \"5.0\");",
        "begin_line": 1017,
        "end_line": 1017,
        "comment": "\n     * <p>Is <code>true</code> if this is Windows 2000.</p>\n     *\n     * <p>The field will return <code>false</code> if <code>OS_NAME</code> is\n     * <code>null</code>.</p>\n     * \n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_95",
        "snippet": "    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + \" 9\", \"4.0\");",
        "begin_line": 1027,
        "end_line": 1027,
        "comment": "\n     * <p>Is <code>true</code> if this is Windows 95.</p>\n     *\n     * <p>The field will return <code>false</code> if <code>OS_NAME</code> is\n     * <code>null</code>.</p>\n     * \n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_98",
        "snippet": "    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + \" 9\", \"4.1\");",
        "begin_line": 1038,
        "end_line": 1038,
        "comment": "\n     * <p>Is <code>true</code> if this is Windows 98.</p>\n     *\n     * <p>The field will return <code>false</code> if <code>OS_NAME</code> is\n     * <code>null</code>.</p>\n     * \n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_ME",
        "snippet": "    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, \"4.9\");",
        "begin_line": 1049,
        "end_line": 1049,
        "comment": "\n     * <p>Is <code>true</code> if this is Windows ME.</p>\n     *\n     * <p>The field will return <code>false</code> if <code>OS_NAME</code> is\n     * <code>null</code>.</p>\n     * \n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_NT",
        "snippet": "    public static final boolean IS_OS_WINDOWS_NT = getOSMatches(OS_NAME_WINDOWS_PREFIX + \" NT\");",
        "begin_line": 1060,
        "end_line": 1060,
        "comment": "\n     * <p>Is <code>true</code> if this is Windows NT.</p>\n     *\n     * <p>The field will return <code>false</code> if <code>OS_NAME</code> is\n     * <code>null</code>.</p>\n     * \n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.SystemUtils",
        "src_path": "src/java/org/apache/commons/lang/SystemUtils.java",
        "signature": "org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_XP",
        "snippet": "    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, \"5.1\");",
        "begin_line": 1071,
        "end_line": 1071,
        "comment": "\n     * <p>Is <code>true</code> if this is Windows XP.</p>\n     *\n     * <p>The field will return <code>false</code> if <code>OS_NAME</code> is\n     * <code>null</code>.</p>\n     * \n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.CharSet",
        "src_path": "src/java/org/apache/commons/lang/CharSet.java",
        "signature": "org.apache.commons.lang.CharSet.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 5947847346149275958L;",
        "begin_line": 45,
        "end_line": 45,
        "comment": "\n     * Required for serialization support. Lang version 2.0. \n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.CharSet",
        "src_path": "src/java/org/apache/commons/lang/CharSet.java",
        "signature": "org.apache.commons.lang.CharSet.EMPTY",
        "snippet": "    public static final CharSet EMPTY = new CharSet((String) null);",
        "begin_line": 51,
        "end_line": 51,
        "comment": " \n     * A CharSet defining no characters. \n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.CharSet",
        "src_path": "src/java/org/apache/commons/lang/CharSet.java",
        "signature": "org.apache.commons.lang.CharSet.ASCII_ALPHA",
        "snippet": "    public static final CharSet ASCII_ALPHA = new CharSet(\"a-zA-Z\");",
        "begin_line": 57,
        "end_line": 57,
        "comment": " \n     * A CharSet defining ASCII alphabetic characters \"a-zA-Z\".\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.CharSet",
        "src_path": "src/java/org/apache/commons/lang/CharSet.java",
        "signature": "org.apache.commons.lang.CharSet.ASCII_ALPHA_LOWER",
        "snippet": "    public static final CharSet ASCII_ALPHA_LOWER = new CharSet(\"a-z\");",
        "begin_line": 63,
        "end_line": 63,
        "comment": " \n     * A CharSet defining ASCII alphabetic characters \"a-z\".\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.CharSet",
        "src_path": "src/java/org/apache/commons/lang/CharSet.java",
        "signature": "org.apache.commons.lang.CharSet.ASCII_ALPHA_UPPER",
        "snippet": "    public static final CharSet ASCII_ALPHA_UPPER = new CharSet(\"A-Z\");",
        "begin_line": 69,
        "end_line": 69,
        "comment": " \n     * A CharSet defining ASCII alphabetic characters \"A-Z\".\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.CharSet",
        "src_path": "src/java/org/apache/commons/lang/CharSet.java",
        "signature": "org.apache.commons.lang.CharSet.ASCII_NUMERIC",
        "snippet": "    public static final CharSet ASCII_NUMERIC = new CharSet(\"0-9\");",
        "begin_line": 75,
        "end_line": 75,
        "comment": " \n     * A CharSet defining ASCII alphabetic characters \"0-9\".\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.CharSet",
        "src_path": "src/java/org/apache/commons/lang/CharSet.java",
        "signature": "org.apache.commons.lang.CharSet.COMMON",
        "snippet": "    protected static final Map COMMON = new HashMap();",
        "begin_line": 82,
        "end_line": 82,
        "comment": "\n     * A Map of the common cases used in the factory.\n     * Subclasses can add more common patterns if desired.\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.CharSet",
        "src_path": "src/java/org/apache/commons/lang/CharSet.java",
        "signature": "org.apache.commons.lang.CharSet.set",
        "snippet": "    private Set set = new HashSet();",
        "begin_line": 95,
        "end_line": 95,
        "comment": " The set of CharRange objects. "
    },
    {
        "class_name": "org.apache.commons.lang.LocaleUtils",
        "src_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "signature": "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList",
        "snippet": "    private static final List cAvailableLocaleList;",
        "begin_line": 43,
        "end_line": 43,
        "comment": " Unmodifiable list of available locales. "
    },
    {
        "class_name": "org.apache.commons.lang.LocaleUtils",
        "src_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "signature": "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet",
        "snippet": "    private static Set cAvailableLocaleSet;",
        "begin_line": 45,
        "end_line": 45,
        "comment": " Unmodifiable set of available locales. "
    },
    {
        "class_name": "org.apache.commons.lang.LocaleUtils",
        "src_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "signature": "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry",
        "snippet": "    private static final Map cLanguagesByCountry = Collections.synchronizedMap(new HashMap());",
        "begin_line": 47,
        "end_line": 47,
        "comment": " Unmodifiable map of language locales by country. "
    },
    {
        "class_name": "org.apache.commons.lang.LocaleUtils",
        "src_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "signature": "org.apache.commons.lang.LocaleUtils.cCountriesByLanguage",
        "snippet": "    private static final Map cCountriesByLanguage = Collections.synchronizedMap(new HashMap());",
        "begin_line": 49,
        "end_line": 49,
        "comment": " Unmodifiable map of country locales by language. "
    },
    {
        "class_name": "org.apache.commons.lang.NullArgumentException",
        "src_path": "src/java/org/apache/commons/lang/NullArgumentException.java",
        "signature": "org.apache.commons.lang.NullArgumentException.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1174360235354917591L;",
        "begin_line": 53,
        "end_line": 53,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.enum.Enum",
        "src_path": "src/java/org/apache/commons/lang/enum/Enum.java",
        "signature": "org.apache.commons.lang.enum.Enum.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -487045951170455942L;",
        "begin_line": 247,
        "end_line": 247,
        "comment": "\n     * Required for serialization support. Lang version 1.0.1 serial compatibility.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.enum.Enum",
        "src_path": "src/java/org/apache/commons/lang/enum/Enum.java",
        "signature": "org.apache.commons.lang.enum.Enum.EMPTY_MAP",
        "snippet": "    private static final Map EMPTY_MAP = Collections.unmodifiableMap(new HashMap(0));",
        "begin_line": 254,
        "end_line": 254,
        "comment": "\n     * An empty <code>Map</code>, as JDK1.2 didn't have an empty map.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.enum.Enum",
        "src_path": "src/java/org/apache/commons/lang/enum/Enum.java",
        "signature": "org.apache.commons.lang.enum.Enum.cEnumClasses",
        "snippet": "    private static final Map cEnumClasses = new WeakHashMap();",
        "begin_line": 259,
        "end_line": 259,
        "comment": "\n     * <code>Map</code>, key of class name, value of <code>Entry</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.enum.Enum",
        "src_path": "src/java/org/apache/commons/lang/enum/Enum.java",
        "signature": "org.apache.commons.lang.enum.Enum.iName",
        "snippet": "    private final String iName;",
        "begin_line": 264,
        "end_line": 264,
        "comment": "\n     * The string representation of the Enum.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.enum.Enum",
        "src_path": "src/java/org/apache/commons/lang/enum/Enum.java",
        "signature": "org.apache.commons.lang.enum.Enum.iHashCode",
        "snippet": "    private transient final int iHashCode;",
        "begin_line": 269,
        "end_line": 269,
        "comment": "\n     * The hashcode representation of the Enum.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.enum.Enum",
        "src_path": "src/java/org/apache/commons/lang/enum/Enum.java",
        "signature": "org.apache.commons.lang.enum.Enum.iToString",
        "snippet": "    protected transient String iToString = null;",
        "begin_line": 275,
        "end_line": 275,
        "comment": "\n     * The toString representation of the Enum.\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.enum.Entry",
        "src_path": "src/java/org/apache/commons/lang/enum/Enum.java",
        "signature": "org.apache.commons.lang.enum.Entry.map",
        "snippet": "        final Map map = new HashMap();",
        "begin_line": 284,
        "end_line": 284,
        "comment": "\n         * Map of Enum name to Enum.\n         "
    },
    {
        "class_name": "org.apache.commons.lang.enum.Entry",
        "src_path": "src/java/org/apache/commons/lang/enum/Enum.java",
        "signature": "org.apache.commons.lang.enum.Entry.unmodifiableMap",
        "snippet": "        final Map unmodifiableMap = Collections.unmodifiableMap(map);",
        "begin_line": 288,
        "end_line": 288,
        "comment": "\n         * Map of Enum name to Enum.\n         "
    },
    {
        "class_name": "org.apache.commons.lang.enum.Entry",
        "src_path": "src/java/org/apache/commons/lang/enum/Enum.java",
        "signature": "org.apache.commons.lang.enum.Entry.list",
        "snippet": "        final List list = new ArrayList(25);",
        "begin_line": 292,
        "end_line": 292,
        "comment": "\n         * List of Enums in source code order.\n         "
    },
    {
        "class_name": "org.apache.commons.lang.enum.Entry",
        "src_path": "src/java/org/apache/commons/lang/enum/Enum.java",
        "signature": "org.apache.commons.lang.enum.Entry.unmodifiableList",
        "snippet": "        final List unmodifiableList = Collections.unmodifiableList(list);",
        "begin_line": 296,
        "end_line": 296,
        "comment": "\n         * Map of Enum name to Enum.\n         "
    },
    {
        "class_name": "org.apache.commons.lang.enums.Enum",
        "src_path": "src/java/org/apache/commons/lang/enums/Enum.java",
        "signature": "org.apache.commons.lang.enums.Enum.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -487045951170455942L;",
        "begin_line": 293,
        "end_line": 293,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.enums.Enum",
        "src_path": "src/java/org/apache/commons/lang/enums/Enum.java",
        "signature": "org.apache.commons.lang.enums.Enum.EMPTY_MAP",
        "snippet": "    private static final Map EMPTY_MAP = Collections.unmodifiableMap(new HashMap(0));",
        "begin_line": 300,
        "end_line": 300,
        "comment": "\n     * An empty <code>Map</code>, as JDK1.2 didn't have an empty map.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.enums.Enum",
        "src_path": "src/java/org/apache/commons/lang/enums/Enum.java",
        "signature": "org.apache.commons.lang.enums.Enum.cEnumClasses",
        "snippet": "    private static final Map cEnumClasses = new WeakHashMap();",
        "begin_line": 305,
        "end_line": 305,
        "comment": "\n     * <code>Map</code>, key of class name, value of <code>Entry</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.enums.Enum",
        "src_path": "src/java/org/apache/commons/lang/enums/Enum.java",
        "signature": "org.apache.commons.lang.enums.Enum.iName",
        "snippet": "    private final String iName;",
        "begin_line": 310,
        "end_line": 310,
        "comment": "\n     * The string representation of the Enum.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.enums.Enum",
        "src_path": "src/java/org/apache/commons/lang/enums/Enum.java",
        "signature": "org.apache.commons.lang.enums.Enum.iHashCode",
        "snippet": "    private transient final int iHashCode;",
        "begin_line": 315,
        "end_line": 315,
        "comment": "\n     * The hashcode representation of the Enum.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.enums.Enum",
        "src_path": "src/java/org/apache/commons/lang/enums/Enum.java",
        "signature": "org.apache.commons.lang.enums.Enum.iToString",
        "snippet": "    protected transient String iToString = null;",
        "begin_line": 321,
        "end_line": 321,
        "comment": "\n     * The toString representation of the Enum.\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.enums.Entry",
        "src_path": "src/java/org/apache/commons/lang/enums/Enum.java",
        "signature": "org.apache.commons.lang.enums.Entry.map",
        "snippet": "        final Map map = new HashMap();",
        "begin_line": 330,
        "end_line": 330,
        "comment": "\n         * Map of Enum name to Enum.\n         "
    },
    {
        "class_name": "org.apache.commons.lang.enums.Entry",
        "src_path": "src/java/org/apache/commons/lang/enums/Enum.java",
        "signature": "org.apache.commons.lang.enums.Entry.unmodifiableMap",
        "snippet": "        final Map unmodifiableMap = Collections.unmodifiableMap(map);",
        "begin_line": 334,
        "end_line": 334,
        "comment": "\n         * Map of Enum name to Enum.\n         "
    },
    {
        "class_name": "org.apache.commons.lang.enums.Entry",
        "src_path": "src/java/org/apache/commons/lang/enums/Enum.java",
        "signature": "org.apache.commons.lang.enums.Entry.list",
        "snippet": "        final List list = new ArrayList(25);",
        "begin_line": 338,
        "end_line": 338,
        "comment": "\n         * List of Enums in source code order.\n         "
    },
    {
        "class_name": "org.apache.commons.lang.enums.Entry",
        "src_path": "src/java/org/apache/commons/lang/enums/Enum.java",
        "signature": "org.apache.commons.lang.enums.Entry.unmodifiableList",
        "snippet": "        final List unmodifiableList = Collections.unmodifiableList(list);",
        "begin_line": 342,
        "end_line": 342,
        "comment": "\n         * Map of Enum name to Enum.\n         "
    },
    {
        "class_name": "org.apache.commons.lang.enum.ValuedEnum",
        "src_path": "src/java/org/apache/commons/lang/enum/ValuedEnum.java",
        "signature": "org.apache.commons.lang.enum.ValuedEnum.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -7129650521543789085L;",
        "begin_line": 112,
        "end_line": 112,
        "comment": "\n     * Required for serialization support. Lang version 1.0.1 serial compatibility.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.enum.ValuedEnum",
        "src_path": "src/java/org/apache/commons/lang/enum/ValuedEnum.java",
        "signature": "org.apache.commons.lang.enum.ValuedEnum.iValue",
        "snippet": "    private final int iValue;",
        "begin_line": 117,
        "end_line": 117,
        "comment": "\n     * The value contained in enum.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnum",
        "src_path": "src/java/org/apache/commons/lang/enums/ValuedEnum.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnum.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -7129650521543789085L;",
        "begin_line": 117,
        "end_line": 117,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnum",
        "src_path": "src/java/org/apache/commons/lang/enums/ValuedEnum.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnum.iValue",
        "snippet": "    private final int iValue;",
        "begin_line": 122,
        "end_line": 122,
        "comment": "\n     * The value contained in enum.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.exception.NestableException",
        "src_path": "src/java/org/apache/commons/lang/exception/NestableException.java",
        "signature": "org.apache.commons.lang.exception.NestableException.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1L;",
        "begin_line": 97,
        "end_line": 97,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.exception.NestableException",
        "src_path": "src/java/org/apache/commons/lang/exception/NestableException.java",
        "signature": "org.apache.commons.lang.exception.NestableException.delegate",
        "snippet": "    protected NestableDelegate delegate = new NestableDelegate(this);",
        "begin_line": 103,
        "end_line": 103,
        "comment": "\n     * The helper instance which contains much of the code which we\n     * delegate to.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.exception.NestableException",
        "src_path": "src/java/org/apache/commons/lang/exception/NestableException.java",
        "signature": "org.apache.commons.lang.exception.NestableException.cause",
        "snippet": "    private Throwable cause = null;",
        "begin_line": 109,
        "end_line": 109,
        "comment": "\n     * Holds the reference to the exception or error that caused\n     * this exception to be thrown.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.exception.NestableError",
        "src_path": "src/java/org/apache/commons/lang/exception/NestableError.java",
        "signature": "org.apache.commons.lang.exception.NestableError.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1L;",
        "begin_line": 37,
        "end_line": 37,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.exception.NestableError",
        "src_path": "src/java/org/apache/commons/lang/exception/NestableError.java",
        "signature": "org.apache.commons.lang.exception.NestableError.delegate",
        "snippet": "    protected NestableDelegate delegate = new NestableDelegate(this);",
        "begin_line": 43,
        "end_line": 43,
        "comment": "\n     * The helper instance which contains much of the code which we\n     * delegate to.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.exception.NestableError",
        "src_path": "src/java/org/apache/commons/lang/exception/NestableError.java",
        "signature": "org.apache.commons.lang.exception.NestableError.cause",
        "snippet": "    private Throwable cause = null;",
        "begin_line": 49,
        "end_line": 49,
        "comment": "\n     * Holds the reference to the exception or error that caused\n     * this exception to be thrown.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.exception.NestableRuntimeException",
        "src_path": "src/java/org/apache/commons/lang/exception/NestableRuntimeException.java",
        "signature": "org.apache.commons.lang.exception.NestableRuntimeException.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1L;",
        "begin_line": 41,
        "end_line": 41,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.exception.NestableRuntimeException",
        "src_path": "src/java/org/apache/commons/lang/exception/NestableRuntimeException.java",
        "signature": "org.apache.commons.lang.exception.NestableRuntimeException.delegate",
        "snippet": "    protected NestableDelegate delegate = new NestableDelegate(this);",
        "begin_line": 47,
        "end_line": 47,
        "comment": "\n     * The helper instance which contains much of the code which we\n     * delegate to.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.exception.NestableRuntimeException",
        "src_path": "src/java/org/apache/commons/lang/exception/NestableRuntimeException.java",
        "signature": "org.apache.commons.lang.exception.NestableRuntimeException.cause",
        "snippet": "    private Throwable cause = null;",
        "begin_line": 53,
        "end_line": 53,
        "comment": "\n     * Holds the reference to the exception or error that caused\n     * this exception to be thrown.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.exception.ExceptionUtils",
        "src_path": "src/java/org/apache/commons/lang/exception/ExceptionUtils.java",
        "signature": "org.apache.commons.lang.exception.ExceptionUtils.WRAPPED_MARKER",
        "snippet": "    static final String WRAPPED_MARKER = \" [wrapped] \";",
        "begin_line": 57,
        "end_line": 57,
        "comment": "\n     * <p>Used when printing stack frames to denote the start of a\n     * wrapped exception.</p>\n     *\n     * <p>Package private for accessibility by test suite.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.exception.ExceptionUtils",
        "src_path": "src/java/org/apache/commons/lang/exception/ExceptionUtils.java",
        "signature": "org.apache.commons.lang.exception.ExceptionUtils.CAUSE_METHOD_NAMES",
        "snippet": "    private static String[] CAUSE_METHOD_NAMES = {\n        \"getCause\",\n        \"getNextException\",\n        \"getTargetException\",\n        \"getException\",\n        \"getSourceException\",\n        \"getRootCause\",\n        \"getCausedByException\",\n        \"getNested\",\n        \"getLinkedException\",\n        \"getNestedException\",\n        \"getLinkedCause\",\n        \"getThrowable\",\n    };",
        "begin_line": 62,
        "end_line": 75,
        "comment": "\n     * <p>The names of methods commonly used to access a wrapped exception.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.exception.ExceptionUtils",
        "src_path": "src/java/org/apache/commons/lang/exception/ExceptionUtils.java",
        "signature": "org.apache.commons.lang.exception.ExceptionUtils.THROWABLE_CAUSE_METHOD",
        "snippet": "    private static final Method THROWABLE_CAUSE_METHOD;",
        "begin_line": 80,
        "end_line": 80,
        "comment": "\n     * <p>The Method object for Java 1.4 getCause.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.exception.ExceptionUtils",
        "src_path": "src/java/org/apache/commons/lang/exception/ExceptionUtils.java",
        "signature": "org.apache.commons.lang.exception.ExceptionUtils.THROWABLE_INITCAUSE_METHOD",
        "snippet": "    private static final Method THROWABLE_INITCAUSE_METHOD;",
        "begin_line": 85,
        "end_line": 85,
        "comment": "\n     * <p>The Method object for Java 1.4 initCause.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.exception.NestableDelegate",
        "src_path": "src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "signature": "org.apache.commons.lang.exception.NestableDelegate.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1L;",
        "begin_line": 54,
        "end_line": 54,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.exception.NestableDelegate",
        "src_path": "src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "signature": "org.apache.commons.lang.exception.NestableDelegate.MUST_BE_THROWABLE",
        "snippet": "    private transient static final String MUST_BE_THROWABLE =\n        \"The Nestable implementation passed to the NestableDelegate(Nestable) \"\n            + \"constructor must extend java.lang.Throwable\";",
        "begin_line": 59,
        "end_line": 61,
        "comment": "\n     * Constructor error message.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.exception.NestableDelegate",
        "src_path": "src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "signature": "org.apache.commons.lang.exception.NestableDelegate.nestable",
        "snippet": "    private Throwable nestable = null;",
        "begin_line": 68,
        "end_line": 68,
        "comment": "\n     * Holds the reference to the exception or error that we're\n     * wrapping (which must be a {@link\n     * org.apache.commons.lang.exception.Nestable} implementation).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.exception.NestableDelegate",
        "src_path": "src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "signature": "org.apache.commons.lang.exception.NestableDelegate.topDown",
        "snippet": "    public static boolean topDown = true;",
        "begin_line": 78,
        "end_line": 78,
        "comment": "\n     * Whether to print the stack trace top-down.\n     * This public flag may be set by calling code, typically in initialisation.\n     * This exists for backwards compatability, setting it to false will return\n     * the library to v1.0 behaviour (but will affect all users of the library\n     * in the classloader).\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.exception.NestableDelegate",
        "src_path": "src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "signature": "org.apache.commons.lang.exception.NestableDelegate.trimStackFrames",
        "snippet": "    public static boolean trimStackFrames = true;",
        "begin_line": 88,
        "end_line": 88,
        "comment": "\n     * Whether to trim the repeated stack trace.\n     * This public flag may be set by calling code, typically in initialisation.\n     * This exists for backwards compatability, setting it to false will return\n     * the library to v1.0 behaviour (but will affect all users of the library\n     * in the classloader).\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.lang.exception.NestableDelegate",
        "src_path": "src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "signature": "org.apache.commons.lang.exception.NestableDelegate.matchSubclasses",
        "snippet": "    public static boolean matchSubclasses = true;",
        "begin_line": 98,
        "end_line": 98,
        "comment": "\n     * Whether to match subclasses via indexOf.\n     * This public flag may be set by calling code, typically in initialisation.\n     * This exists for backwards compatability, setting it to false will return\n     * the library to v2.0 behaviour (but will affect all users of the library\n     * in the classloader).\n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrMatcher",
        "src_path": "src/java/org/apache/commons/lang/text/StrMatcher.java",
        "signature": "org.apache.commons.lang.text.StrMatcher.COMMA_MATCHER",
        "snippet": "    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",
        "begin_line": 37,
        "end_line": 37,
        "comment": "\n     * Matches the comma character.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrMatcher",
        "src_path": "src/java/org/apache/commons/lang/text/StrMatcher.java",
        "signature": "org.apache.commons.lang.text.StrMatcher.TAB_MATCHER",
        "snippet": "    private static final StrMatcher TAB_MATCHER = new CharMatcher('\\t');",
        "begin_line": 41,
        "end_line": 41,
        "comment": "\n     * Matches the tab character.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrMatcher",
        "src_path": "src/java/org/apache/commons/lang/text/StrMatcher.java",
        "signature": "org.apache.commons.lang.text.StrMatcher.SPACE_MATCHER",
        "snippet": "    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');",
        "begin_line": 45,
        "end_line": 45,
        "comment": "\n     * Matches the space character.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrMatcher",
        "src_path": "src/java/org/apache/commons/lang/text/StrMatcher.java",
        "signature": "org.apache.commons.lang.text.StrMatcher.SPLIT_MATCHER",
        "snippet": "    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher(\" \\t\\n\\r\\f\".toCharArray());",
        "begin_line": 50,
        "end_line": 50,
        "comment": "\n     * Matches the same characters as StringTokenizer,\n     * namely space, tab, newline, formfeed.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrMatcher",
        "src_path": "src/java/org/apache/commons/lang/text/StrMatcher.java",
        "signature": "org.apache.commons.lang.text.StrMatcher.TRIM_MATCHER",
        "snippet": "    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();",
        "begin_line": 54,
        "end_line": 54,
        "comment": "\n     * Matches the String trim() whitespace characters.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrMatcher",
        "src_path": "src/java/org/apache/commons/lang/text/StrMatcher.java",
        "signature": "org.apache.commons.lang.text.StrMatcher.SINGLE_QUOTE_MATCHER",
        "snippet": "    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\\'');",
        "begin_line": 58,
        "end_line": 58,
        "comment": "\n     * Matches the double quote character.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrMatcher",
        "src_path": "src/java/org/apache/commons/lang/text/StrMatcher.java",
        "signature": "org.apache.commons.lang.text.StrMatcher.DOUBLE_QUOTE_MATCHER",
        "snippet": "    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('\"');",
        "begin_line": 62,
        "end_line": 62,
        "comment": "\n     * Matches the double quote character.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrMatcher",
        "src_path": "src/java/org/apache/commons/lang/text/StrMatcher.java",
        "signature": "org.apache.commons.lang.text.StrMatcher.QUOTE_MATCHER",
        "snippet": "    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(\"'\\\"\".toCharArray());",
        "begin_line": 66,
        "end_line": 66,
        "comment": "\n     * Matches the single or double quote character.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrMatcher",
        "src_path": "src/java/org/apache/commons/lang/text/StrMatcher.java",
        "signature": "org.apache.commons.lang.text.StrMatcher.NONE_MATCHER",
        "snippet": "    private static final StrMatcher NONE_MATCHER = new NoMatcher();",
        "begin_line": 70,
        "end_line": 70,
        "comment": "\n     * Matches no characters.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.text.CharSetMatcher",
        "src_path": "src/java/org/apache/commons/lang/text/StrMatcher.java",
        "signature": "org.apache.commons.lang.text.CharSetMatcher.chars",
        "snippet": "        private char[] chars;",
        "begin_line": 252,
        "end_line": 252,
        "comment": " The set of characters to match. "
    },
    {
        "class_name": "org.apache.commons.lang.text.CharMatcher",
        "src_path": "src/java/org/apache/commons/lang/text/StrMatcher.java",
        "signature": "org.apache.commons.lang.text.CharMatcher.ch",
        "snippet": "        private char ch;",
        "begin_line": 285,
        "end_line": 285,
        "comment": " The character to match. "
    },
    {
        "class_name": "org.apache.commons.lang.text.StringMatcher",
        "src_path": "src/java/org/apache/commons/lang/text/StrMatcher.java",
        "signature": "org.apache.commons.lang.text.StringMatcher.chars",
        "snippet": "        private char[] chars;",
        "begin_line": 317,
        "end_line": 317,
        "comment": " The string to match, as a character array. "
    },
    {
        "class_name": "org.apache.commons.lang.text.CompositeFormat",
        "src_path": "src/java/org/apache/commons/lang/text/CompositeFormat.java",
        "signature": "org.apache.commons.lang.text.CompositeFormat.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -4329119827877627683L;",
        "begin_line": 39,
        "end_line": 39,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.text.CompositeFormat",
        "src_path": "src/java/org/apache/commons/lang/text/CompositeFormat.java",
        "signature": "org.apache.commons.lang.text.CompositeFormat.parser",
        "snippet": "    private final Format parser;",
        "begin_line": 42,
        "end_line": 42,
        "comment": " The parser to use. "
    },
    {
        "class_name": "org.apache.commons.lang.text.CompositeFormat",
        "src_path": "src/java/org/apache/commons/lang/text/CompositeFormat.java",
        "signature": "org.apache.commons.lang.text.CompositeFormat.formatter",
        "snippet": "    private final Format formatter;",
        "begin_line": 44,
        "end_line": 44,
        "comment": " The formatter to use. "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrLookup",
        "src_path": "src/java/org/apache/commons/lang/text/StrLookup.java",
        "signature": "org.apache.commons.lang.text.StrLookup.NONE_LOOKUP",
        "snippet": "    private static final StrLookup NONE_LOOKUP;",
        "begin_line": 43,
        "end_line": 43,
        "comment": "\n     * Lookup that always returns null.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrLookup",
        "src_path": "src/java/org/apache/commons/lang/text/StrLookup.java",
        "signature": "org.apache.commons.lang.text.StrLookup.SYSTEM_PROPERTIES_LOOKUP",
        "snippet": "    private static final StrLookup SYSTEM_PROPERTIES_LOOKUP;",
        "begin_line": 47,
        "end_line": 47,
        "comment": "\n     * Lookup that uses System properties.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.text.MapStrLookup",
        "src_path": "src/java/org/apache/commons/lang/text/StrLookup.java",
        "signature": "org.apache.commons.lang.text.MapStrLookup.map",
        "snippet": "        private final Map map;",
        "begin_line": 130,
        "end_line": 130,
        "comment": " Map keys are variable names and value. "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrTokenizer",
        "src_path": "src/java/org/apache/commons/lang/text/StrTokenizer.java",
        "signature": "org.apache.commons.lang.text.StrTokenizer.CSV_TOKENIZER_PROTOTYPE",
        "snippet": "    private static final StrTokenizer CSV_TOKENIZER_PROTOTYPE;",
        "begin_line": 90,
        "end_line": 90,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.text.StrTokenizer",
        "src_path": "src/java/org/apache/commons/lang/text/StrTokenizer.java",
        "signature": "org.apache.commons.lang.text.StrTokenizer.TSV_TOKENIZER_PROTOTYPE",
        "snippet": "    private static final StrTokenizer TSV_TOKENIZER_PROTOTYPE;",
        "begin_line": 91,
        "end_line": 91,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.text.StrTokenizer",
        "src_path": "src/java/org/apache/commons/lang/text/StrTokenizer.java",
        "signature": "org.apache.commons.lang.text.StrTokenizer.chars",
        "snippet": "    private char chars[];",
        "begin_line": 111,
        "end_line": 111,
        "comment": " The text to work on. "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrTokenizer",
        "src_path": "src/java/org/apache/commons/lang/text/StrTokenizer.java",
        "signature": "org.apache.commons.lang.text.StrTokenizer.tokens",
        "snippet": "    private String tokens[];",
        "begin_line": 113,
        "end_line": 113,
        "comment": " The parsed tokens "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrTokenizer",
        "src_path": "src/java/org/apache/commons/lang/text/StrTokenizer.java",
        "signature": "org.apache.commons.lang.text.StrTokenizer.tokenPos",
        "snippet": "    private int tokenPos;",
        "begin_line": 115,
        "end_line": 115,
        "comment": " The current iteration position "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrTokenizer",
        "src_path": "src/java/org/apache/commons/lang/text/StrTokenizer.java",
        "signature": "org.apache.commons.lang.text.StrTokenizer.delimMatcher",
        "snippet": "    private StrMatcher delimMatcher = StrMatcher.splitMatcher();",
        "begin_line": 118,
        "end_line": 118,
        "comment": " The delimiter matcher "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrTokenizer",
        "src_path": "src/java/org/apache/commons/lang/text/StrTokenizer.java",
        "signature": "org.apache.commons.lang.text.StrTokenizer.quoteMatcher",
        "snippet": "    private StrMatcher quoteMatcher = StrMatcher.noneMatcher();",
        "begin_line": 120,
        "end_line": 120,
        "comment": " The quote matcher "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrTokenizer",
        "src_path": "src/java/org/apache/commons/lang/text/StrTokenizer.java",
        "signature": "org.apache.commons.lang.text.StrTokenizer.ignoredMatcher",
        "snippet": "    private StrMatcher ignoredMatcher = StrMatcher.noneMatcher();",
        "begin_line": 122,
        "end_line": 122,
        "comment": " The ignored matcher "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrTokenizer",
        "src_path": "src/java/org/apache/commons/lang/text/StrTokenizer.java",
        "signature": "org.apache.commons.lang.text.StrTokenizer.trimmerMatcher",
        "snippet": "    private StrMatcher trimmerMatcher = StrMatcher.noneMatcher();",
        "begin_line": 124,
        "end_line": 124,
        "comment": " The trimmer matcher "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrTokenizer",
        "src_path": "src/java/org/apache/commons/lang/text/StrTokenizer.java",
        "signature": "org.apache.commons.lang.text.StrTokenizer.emptyAsNull",
        "snippet": "    private boolean emptyAsNull = false;",
        "begin_line": 127,
        "end_line": 127,
        "comment": " Whether to return empty tokens as null "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrTokenizer",
        "src_path": "src/java/org/apache/commons/lang/text/StrTokenizer.java",
        "signature": "org.apache.commons.lang.text.StrTokenizer.ignoreEmptyTokens",
        "snippet": "    private boolean ignoreEmptyTokens = true;",
        "begin_line": 129,
        "end_line": 129,
        "comment": " Whether to ignore empty tokens "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrSubstitutor",
        "src_path": "src/java/org/apache/commons/lang/text/StrSubstitutor.java",
        "signature": "org.apache.commons.lang.text.StrSubstitutor.DEFAULT_ESCAPE",
        "snippet": "    public static final char DEFAULT_ESCAPE = '$';",
        "begin_line": 97,
        "end_line": 97,
        "comment": "\n     * Constant for the default escape character.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrSubstitutor",
        "src_path": "src/java/org/apache/commons/lang/text/StrSubstitutor.java",
        "signature": "org.apache.commons.lang.text.StrSubstitutor.DEFAULT_PREFIX",
        "snippet": "    public static final StrMatcher DEFAULT_PREFIX = StrMatcher.stringMatcher(\"${\");",
        "begin_line": 101,
        "end_line": 101,
        "comment": "\n     * Constant for the default variable prefix.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrSubstitutor",
        "src_path": "src/java/org/apache/commons/lang/text/StrSubstitutor.java",
        "signature": "org.apache.commons.lang.text.StrSubstitutor.DEFAULT_SUFFIX",
        "snippet": "    public static final StrMatcher DEFAULT_SUFFIX = StrMatcher.stringMatcher(\"}\");",
        "begin_line": 105,
        "end_line": 105,
        "comment": "\n     * Constant for the default variable suffix.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrSubstitutor",
        "src_path": "src/java/org/apache/commons/lang/text/StrSubstitutor.java",
        "signature": "org.apache.commons.lang.text.StrSubstitutor.escapeChar",
        "snippet": "    private char escapeChar;",
        "begin_line": 110,
        "end_line": 110,
        "comment": "\n     * Stores the escape character.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrSubstitutor",
        "src_path": "src/java/org/apache/commons/lang/text/StrSubstitutor.java",
        "signature": "org.apache.commons.lang.text.StrSubstitutor.prefixMatcher",
        "snippet": "    private StrMatcher prefixMatcher;",
        "begin_line": 114,
        "end_line": 114,
        "comment": "\n     * Stores the variable prefix.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrSubstitutor",
        "src_path": "src/java/org/apache/commons/lang/text/StrSubstitutor.java",
        "signature": "org.apache.commons.lang.text.StrSubstitutor.suffixMatcher",
        "snippet": "    private StrMatcher suffixMatcher;",
        "begin_line": 118,
        "end_line": 118,
        "comment": "\n     * Stores the variable suffix.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrSubstitutor",
        "src_path": "src/java/org/apache/commons/lang/text/StrSubstitutor.java",
        "signature": "org.apache.commons.lang.text.StrSubstitutor.variableResolver",
        "snippet": "    private StrLookup variableResolver;",
        "begin_line": 122,
        "end_line": 122,
        "comment": "\n     * Variable resolution is delegated to an implementor of VariableResolver.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrBuilder",
        "src_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "signature": "org.apache.commons.lang.text.StrBuilder.CAPACITY",
        "snippet": "    static final int CAPACITY = 32;",
        "begin_line": 75,
        "end_line": 75,
        "comment": "\n     * The extra capacity for new builders.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrBuilder",
        "src_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "signature": "org.apache.commons.lang.text.StrBuilder.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 7628716375283629643L;",
        "begin_line": 82,
        "end_line": 82,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrBuilder",
        "src_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "signature": "org.apache.commons.lang.text.StrBuilder.buffer",
        "snippet": "    protected char[] buffer;",
        "begin_line": 85,
        "end_line": 85,
        "comment": " Internal data storage. "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrBuilder",
        "src_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "signature": "org.apache.commons.lang.text.StrBuilder.size",
        "snippet": "    protected int size;",
        "begin_line": 87,
        "end_line": 87,
        "comment": " Current size of the buffer. "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrBuilder",
        "src_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "signature": "org.apache.commons.lang.text.StrBuilder.newLine",
        "snippet": "    private String newLine;",
        "begin_line": 89,
        "end_line": 89,
        "comment": " The new line. "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrBuilder",
        "src_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "signature": "org.apache.commons.lang.text.StrBuilder.nullText",
        "snippet": "    private String nullText;",
        "begin_line": 91,
        "end_line": 91,
        "comment": " The null text. "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrBuilderReader",
        "src_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "signature": "org.apache.commons.lang.text.StrBuilderReader.pos",
        "snippet": "        private int pos;",
        "begin_line": 2242,
        "end_line": 2242,
        "comment": " The current stream position. "
    },
    {
        "class_name": "org.apache.commons.lang.text.StrBuilderReader",
        "src_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "signature": "org.apache.commons.lang.text.StrBuilderReader.mark",
        "snippet": "        private int mark;",
        "begin_line": 2244,
        "end_line": 2244,
        "comment": " The last mark position. "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateFormatUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateFormatUtils.java",
        "signature": "org.apache.commons.lang.time.DateFormatUtils.ISO_DATETIME_FORMAT",
        "snippet": "    public static final FastDateFormat ISO_DATETIME_FORMAT\n            = FastDateFormat.getInstance(\"yyyy-MM-dd'T'HH:mm:ss\");",
        "begin_line": 43,
        "end_line": 44,
        "comment": "\n     * ISO8601 formatter for date-time without time zone.\n     * The format used is <tt>yyyy-MM-dd'T'HH:mm:ss</tt>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateFormatUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateFormatUtils.java",
        "signature": "org.apache.commons.lang.time.DateFormatUtils.ISO_DATETIME_TIME_ZONE_FORMAT",
        "snippet": "    public static final FastDateFormat ISO_DATETIME_TIME_ZONE_FORMAT\n            = FastDateFormat.getInstance(\"yyyy-MM-dd'T'HH:mm:ssZZ\");",
        "begin_line": 50,
        "end_line": 51,
        "comment": "\n     * ISO8601 formatter for date-time with time zone.\n     * The format used is <tt>yyyy-MM-dd'T'HH:mm:ssZZ</tt>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateFormatUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateFormatUtils.java",
        "signature": "org.apache.commons.lang.time.DateFormatUtils.ISO_DATE_FORMAT",
        "snippet": "    public static final FastDateFormat ISO_DATE_FORMAT\n            = FastDateFormat.getInstance(\"yyyy-MM-dd\");",
        "begin_line": 57,
        "end_line": 58,
        "comment": "\n     * ISO8601 formatter for date without time zone.\n     * The format used is <tt>yyyy-MM-dd</tt>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateFormatUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateFormatUtils.java",
        "signature": "org.apache.commons.lang.time.DateFormatUtils.ISO_DATE_TIME_ZONE_FORMAT",
        "snippet": "    public static final FastDateFormat ISO_DATE_TIME_ZONE_FORMAT\n            = FastDateFormat.getInstance(\"yyyy-MM-ddZZ\");",
        "begin_line": 66,
        "end_line": 67,
        "comment": "\n     * ISO8601-like formatter for date with time zone.\n     * The format used is <tt>yyyy-MM-ddZZ</tt>.\n     * This pattern does not comply with the formal ISO8601 specification\n     * as the standard does not allow a time zone  without a time.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateFormatUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateFormatUtils.java",
        "signature": "org.apache.commons.lang.time.DateFormatUtils.ISO_TIME_FORMAT",
        "snippet": "    public static final FastDateFormat ISO_TIME_FORMAT\n            = FastDateFormat.getInstance(\"'T'HH:mm:ss\");",
        "begin_line": 73,
        "end_line": 74,
        "comment": "\n     * ISO8601 formatter for time without time zone.\n     * The format used is <tt>'T'HH:mm:ss</tt>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateFormatUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateFormatUtils.java",
        "signature": "org.apache.commons.lang.time.DateFormatUtils.ISO_TIME_TIME_ZONE_FORMAT",
        "snippet": "    public static final FastDateFormat ISO_TIME_TIME_ZONE_FORMAT\n            = FastDateFormat.getInstance(\"'T'HH:mm:ssZZ\");",
        "begin_line": 80,
        "end_line": 81,
        "comment": "\n     * ISO8601 formatter for time with time zone.\n     * The format used is <tt>'T'HH:mm:ssZZ</tt>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateFormatUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateFormatUtils.java",
        "signature": "org.apache.commons.lang.time.DateFormatUtils.ISO_TIME_NO_T_FORMAT",
        "snippet": "    public static final FastDateFormat ISO_TIME_NO_T_FORMAT\n            = FastDateFormat.getInstance(\"HH:mm:ss\");",
        "begin_line": 89,
        "end_line": 90,
        "comment": "\n     * ISO8601-like formatter for time without time zone.\n     * The format used is <tt>HH:mm:ss</tt>.\n     * This pattern does not comply with the formal ISO8601 specification\n     * as the standard requires the 'T' prefix for times.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateFormatUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateFormatUtils.java",
        "signature": "org.apache.commons.lang.time.DateFormatUtils.ISO_TIME_NO_T_TIME_ZONE_FORMAT",
        "snippet": "    public static final FastDateFormat ISO_TIME_NO_T_TIME_ZONE_FORMAT\n            = FastDateFormat.getInstance(\"HH:mm:ssZZ\");",
        "begin_line": 98,
        "end_line": 99,
        "comment": "\n     * ISO8601-like formatter for time with time zone.\n     * The format used is <tt>HH:mm:ssZZ</tt>.\n     * This pattern does not comply with the formal ISO8601 specification\n     * as the standard requires the 'T' prefix for times.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateFormatUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateFormatUtils.java",
        "signature": "org.apache.commons.lang.time.DateFormatUtils.SMTP_DATETIME_FORMAT",
        "snippet": "    public static final FastDateFormat SMTP_DATETIME_FORMAT\n            = FastDateFormat.getInstance(\"EEE, dd MMM yyyy HH:mm:ss Z\", Locale.US);",
        "begin_line": 105,
        "end_line": 106,
        "comment": "\n     * SMTP (and probably other) date headers.\n     * The format used is <tt>EEE, dd MMM yyyy HH:mm:ss Z</tt> in US locale.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DurationFormatUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java",
        "signature": "org.apache.commons.lang.time.DurationFormatUtils.ISO_EXTENDED_FORMAT_PATTERN",
        "snippet": "    public static final String ISO_EXTENDED_FORMAT_PATTERN = \"'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'\";",
        "begin_line": 68,
        "end_line": 68,
        "comment": "\n     * <p>Pattern used with <code>FastDateFormat</code> and <code>SimpleDateFormat</code>\n     * for the ISO8601 period format used in durations.</p>\n     * \n     * @see org.apache.commons.lang.time.FastDateFormat\n     * @see java.text.SimpleDateFormat\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DurationFormatUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java",
        "signature": "org.apache.commons.lang.time.DurationFormatUtils.y",
        "snippet": "    static final Object y = \"y\";",
        "begin_line": 476,
        "end_line": 476,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.DurationFormatUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java",
        "signature": "org.apache.commons.lang.time.DurationFormatUtils.M",
        "snippet": "    static final Object M = \"M\";",
        "begin_line": 477,
        "end_line": 477,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.DurationFormatUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java",
        "signature": "org.apache.commons.lang.time.DurationFormatUtils.d",
        "snippet": "    static final Object d = \"d\";",
        "begin_line": 478,
        "end_line": 478,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.DurationFormatUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java",
        "signature": "org.apache.commons.lang.time.DurationFormatUtils.H",
        "snippet": "    static final Object H = \"H\";",
        "begin_line": 479,
        "end_line": 479,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.DurationFormatUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java",
        "signature": "org.apache.commons.lang.time.DurationFormatUtils.m",
        "snippet": "    static final Object m = \"m\";",
        "begin_line": 480,
        "end_line": 480,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.DurationFormatUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java",
        "signature": "org.apache.commons.lang.time.DurationFormatUtils.s",
        "snippet": "    static final Object s = \"s\";",
        "begin_line": 481,
        "end_line": 481,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.DurationFormatUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java",
        "signature": "org.apache.commons.lang.time.DurationFormatUtils.S",
        "snippet": "    static final Object S = \"S\";",
        "begin_line": 482,
        "end_line": 482,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.Token",
        "src_path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java",
        "signature": "org.apache.commons.lang.time.Token.value",
        "snippet": "        private Object value;",
        "begin_line": 568,
        "end_line": 568,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.Token",
        "src_path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java",
        "signature": "org.apache.commons.lang.time.Token.count",
        "snippet": "        private int count;",
        "begin_line": 569,
        "end_line": 569,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.DateUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "signature": "org.apache.commons.lang.time.DateUtils.UTC_TIME_ZONE",
        "snippet": "    public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone(\"GMT\");",
        "begin_line": 45,
        "end_line": 45,
        "comment": "\n     * The UTC time zone  (often referred to as GMT).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "signature": "org.apache.commons.lang.time.DateUtils.MILLIS_PER_SECOND",
        "snippet": "    public static final long MILLIS_PER_SECOND = 1000;",
        "begin_line": 50,
        "end_line": 50,
        "comment": "\n     * Number of milliseconds in a standard second.\n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "signature": "org.apache.commons.lang.time.DateUtils.MILLIS_PER_MINUTE",
        "snippet": "    public static final long MILLIS_PER_MINUTE = 60 * MILLIS_PER_SECOND;",
        "begin_line": 55,
        "end_line": 55,
        "comment": "\n     * Number of milliseconds in a standard minute.\n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "signature": "org.apache.commons.lang.time.DateUtils.MILLIS_PER_HOUR",
        "snippet": "    public static final long MILLIS_PER_HOUR = 60 * MILLIS_PER_MINUTE;",
        "begin_line": 60,
        "end_line": 60,
        "comment": "\n     * Number of milliseconds in a standard hour.\n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "signature": "org.apache.commons.lang.time.DateUtils.MILLIS_PER_DAY",
        "snippet": "    public static final long MILLIS_PER_DAY = 24 * MILLIS_PER_HOUR;",
        "begin_line": 65,
        "end_line": 65,
        "comment": "\n     * Number of milliseconds in a standard day.\n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "signature": "org.apache.commons.lang.time.DateUtils.SEMI_MONTH",
        "snippet": "    public final static int SEMI_MONTH = 1001;",
        "begin_line": 71,
        "end_line": 71,
        "comment": "\n     * This is half a month, so this represents whether a date is in the top\n     * or bottom half of the month.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "signature": "org.apache.commons.lang.time.DateUtils.fields",
        "snippet": "    private static final int[][] fields = {\n            {Calendar.MILLISECOND},\n            {Calendar.SECOND},\n            {Calendar.MINUTE},\n            {Calendar.HOUR_OF_DAY, Calendar.HOUR},\n            {Calendar.DATE, Calendar.DAY_OF_MONTH, Calendar.AM_PM \n                /* Calendar.DAY_OF_YEAR, Calendar.DAY_OF_WEEK, Calendar.DAY_OF_WEEK_IN_MONTH */\n            },\n            {Calendar.MONTH, DateUtils.SEMI_MONTH},\n            {Calendar.YEAR},\n            {Calendar.ERA}};",
        "begin_line": 73,
        "end_line": 83,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.DateUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "signature": "org.apache.commons.lang.time.DateUtils.RANGE_WEEK_SUNDAY",
        "snippet": "    public final static int RANGE_WEEK_SUNDAY = 1;",
        "begin_line": 88,
        "end_line": 88,
        "comment": "\n     * A week range, starting on Sunday.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "signature": "org.apache.commons.lang.time.DateUtils.RANGE_WEEK_MONDAY",
        "snippet": "    public final static int RANGE_WEEK_MONDAY = 2;",
        "begin_line": 93,
        "end_line": 93,
        "comment": "\n     * A week range, starting on Monday.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "signature": "org.apache.commons.lang.time.DateUtils.RANGE_WEEK_RELATIVE",
        "snippet": "    public final static int RANGE_WEEK_RELATIVE = 3;",
        "begin_line": 98,
        "end_line": 98,
        "comment": "\n     * A week range, starting on the day focused.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "signature": "org.apache.commons.lang.time.DateUtils.RANGE_WEEK_CENTER",
        "snippet": "    public final static int RANGE_WEEK_CENTER = 4;",
        "begin_line": 103,
        "end_line": 103,
        "comment": "\n     * A week range, centered around the day focused.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "signature": "org.apache.commons.lang.time.DateUtils.RANGE_MONTH_SUNDAY",
        "snippet": "    public final static int RANGE_MONTH_SUNDAY = 5;",
        "begin_line": 108,
        "end_line": 108,
        "comment": "\n     * A month range, the week starting on Sunday.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "signature": "org.apache.commons.lang.time.DateUtils.RANGE_MONTH_MONDAY",
        "snippet": "    public final static int RANGE_MONTH_MONDAY = 6;",
        "begin_line": 113,
        "end_line": 113,
        "comment": "\n     * A month range, the week starting on Monday.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateIterator",
        "src_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "signature": "org.apache.commons.lang.time.DateIterator.endFinal",
        "snippet": "        private final Calendar endFinal;",
        "begin_line": 912,
        "end_line": 912,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.DateIterator",
        "src_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "signature": "org.apache.commons.lang.time.DateIterator.spot",
        "snippet": "        private final Calendar spot;",
        "begin_line": 913,
        "end_line": 913,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.DateUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "signature": "org.apache.commons.lang.time.DateUtils.MILLIS_IN_SECOND",
        "snippet": "    public static final int MILLIS_IN_SECOND = 1000;",
        "begin_line": 970,
        "end_line": 970,
        "comment": "\n     * Number of milliseconds in a standard second.\n     * \n     * @deprecated Use MILLIS_PER_SECOND. This will be removed in Commons Lang 3.0.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "signature": "org.apache.commons.lang.time.DateUtils.MILLIS_IN_MINUTE",
        "snippet": "    public static final int MILLIS_IN_MINUTE = 60 * 1000;",
        "begin_line": 976,
        "end_line": 976,
        "comment": "\n     * Number of milliseconds in a standard minute.\n     * \n     * @deprecated Use MILLIS_PER_MINUTE. This will be removed in Commons Lang 3.0.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "signature": "org.apache.commons.lang.time.DateUtils.MILLIS_IN_HOUR",
        "snippet": "    public static final int MILLIS_IN_HOUR = 60 * 60 * 1000;",
        "begin_line": 982,
        "end_line": 982,
        "comment": "\n     * Number of milliseconds in a standard hour.\n     * \n     * @deprecated Use MILLIS_PER_HOUR. This will be removed in Commons Lang 3.0.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.DateUtils",
        "src_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "signature": "org.apache.commons.lang.time.DateUtils.MILLIS_IN_DAY",
        "snippet": "    public static final int MILLIS_IN_DAY = 24 * 60 * 60 * 1000;",
        "begin_line": 988,
        "end_line": 988,
        "comment": "\n     * Number of milliseconds in a standard day.\n     * \n     * @deprecated Use MILLIS_PER_DAY. This will be removed in Commons Lang 3.0.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.FastDateFormat",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.FastDateFormat.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1L;",
        "begin_line": 87,
        "end_line": 87,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.FastDateFormat",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.FastDateFormat.FULL",
        "snippet": "    public static final int FULL = DateFormat.FULL;",
        "begin_line": 92,
        "end_line": 92,
        "comment": "\n     * FULL locale dependent date or time style.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.FastDateFormat",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.FastDateFormat.LONG",
        "snippet": "    public static final int LONG = DateFormat.LONG;",
        "begin_line": 96,
        "end_line": 96,
        "comment": "\n     * LONG locale dependent date or time style.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.FastDateFormat",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.FastDateFormat.MEDIUM",
        "snippet": "    public static final int MEDIUM = DateFormat.MEDIUM;",
        "begin_line": 100,
        "end_line": 100,
        "comment": "\n     * MEDIUM locale dependent date or time style.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.FastDateFormat",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.FastDateFormat.SHORT",
        "snippet": "    public static final int SHORT = DateFormat.SHORT;",
        "begin_line": 104,
        "end_line": 104,
        "comment": "\n     * SHORT locale dependent date or time style.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.FastDateFormat",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.FastDateFormat.cDefaultPattern",
        "snippet": "    private static String cDefaultPattern;",
        "begin_line": 106,
        "end_line": 106,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.FastDateFormat",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.FastDateFormat.cInstanceCache",
        "snippet": "    private static Map cInstanceCache = new HashMap(7);",
        "begin_line": 108,
        "end_line": 108,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.FastDateFormat",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.FastDateFormat.cDateInstanceCache",
        "snippet": "    private static Map cDateInstanceCache = new HashMap(7);",
        "begin_line": 109,
        "end_line": 109,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.FastDateFormat",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.FastDateFormat.cTimeInstanceCache",
        "snippet": "    private static Map cTimeInstanceCache = new HashMap(7);",
        "begin_line": 110,
        "end_line": 110,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.FastDateFormat",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.FastDateFormat.cDateTimeInstanceCache",
        "snippet": "    private static Map cDateTimeInstanceCache = new HashMap(7);",
        "begin_line": 111,
        "end_line": 111,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.FastDateFormat",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.FastDateFormat.cTimeZoneDisplayCache",
        "snippet": "    private static Map cTimeZoneDisplayCache = new HashMap(7);",
        "begin_line": 112,
        "end_line": 112,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.FastDateFormat",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.FastDateFormat.mPattern",
        "snippet": "    private final String mPattern;",
        "begin_line": 117,
        "end_line": 117,
        "comment": "\n     * The pattern.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.FastDateFormat",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.FastDateFormat.mTimeZone",
        "snippet": "    private final TimeZone mTimeZone;",
        "begin_line": 121,
        "end_line": 121,
        "comment": "\n     * The time zone.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.FastDateFormat",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.FastDateFormat.mTimeZoneForced",
        "snippet": "    private final boolean mTimeZoneForced;",
        "begin_line": 125,
        "end_line": 125,
        "comment": "\n     * Whether the time zone overrides any on Calendars.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.FastDateFormat",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.FastDateFormat.mLocale",
        "snippet": "    private final Locale mLocale;",
        "begin_line": 129,
        "end_line": 129,
        "comment": "\n     * The locale.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.FastDateFormat",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.FastDateFormat.mLocaleForced",
        "snippet": "    private final boolean mLocaleForced;",
        "begin_line": 133,
        "end_line": 133,
        "comment": "\n     * Whether the locale overrides the default.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.FastDateFormat",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.FastDateFormat.mRules",
        "snippet": "    private Rule[] mRules;",
        "begin_line": 137,
        "end_line": 137,
        "comment": "\n     * The parsed rules.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.FastDateFormat",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.FastDateFormat.mMaxLengthEstimate",
        "snippet": "    private int mMaxLengthEstimate;",
        "begin_line": 141,
        "end_line": 141,
        "comment": "\n     * The estimated maximum length.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.CharacterLiteral",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.CharacterLiteral.mValue",
        "snippet": "        private final char mValue;",
        "begin_line": 1056,
        "end_line": 1056,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.StringLiteral",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.StringLiteral.mValue",
        "snippet": "        private final String mValue;",
        "begin_line": 1087,
        "end_line": 1087,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.TextField",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.TextField.mField",
        "snippet": "        private final int mField;",
        "begin_line": 1118,
        "end_line": 1118,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.TextField",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.TextField.mValues",
        "snippet": "        private final String[] mValues;",
        "begin_line": 1119,
        "end_line": 1119,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.UnpaddedNumberField",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.UnpaddedNumberField.INSTANCE_YEAR",
        "snippet": "        static final UnpaddedNumberField INSTANCE_YEAR = new UnpaddedNumberField(Calendar.YEAR);",
        "begin_line": 1159,
        "end_line": 1159,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.UnpaddedNumberField",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.UnpaddedNumberField.mField",
        "snippet": "        private final int mField;",
        "begin_line": 1161,
        "end_line": 1161,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.UnpaddedMonthField",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.UnpaddedMonthField.INSTANCE",
        "snippet": "        static final UnpaddedMonthField INSTANCE = new UnpaddedMonthField();",
        "begin_line": 1205,
        "end_line": 1205,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.PaddedNumberField",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.PaddedNumberField.mField",
        "snippet": "        private final int mField;",
        "begin_line": 1246,
        "end_line": 1246,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.PaddedNumberField",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.PaddedNumberField.mSize",
        "snippet": "        private final int mSize;",
        "begin_line": 1247,
        "end_line": 1247,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.TwoDigitNumberField",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.TwoDigitNumberField.mField",
        "snippet": "        private final int mField;",
        "begin_line": 1308,
        "end_line": 1308,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.TwoDigitYearField",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.TwoDigitYearField.INSTANCE",
        "snippet": "        static final TwoDigitYearField INSTANCE = new TwoDigitYearField();",
        "begin_line": 1350,
        "end_line": 1350,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.TwoDigitMonthField",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.TwoDigitMonthField.INSTANCE",
        "snippet": "        static final TwoDigitMonthField INSTANCE = new TwoDigitMonthField();",
        "begin_line": 1386,
        "end_line": 1386,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.TwelveHourField",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.TwelveHourField.mRule",
        "snippet": "        private final NumberRule mRule;",
        "begin_line": 1422,
        "end_line": 1422,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.TwentyFourHourField",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.TwentyFourHourField.mRule",
        "snippet": "        private final NumberRule mRule;",
        "begin_line": 1464,
        "end_line": 1464,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.TimeZoneNameRule",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.TimeZoneNameRule.mTimeZone",
        "snippet": "        private final TimeZone mTimeZone;",
        "begin_line": 1506,
        "end_line": 1506,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.TimeZoneNameRule",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.TimeZoneNameRule.mTimeZoneForced",
        "snippet": "        private final boolean mTimeZoneForced;",
        "begin_line": 1507,
        "end_line": 1507,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.TimeZoneNameRule",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.TimeZoneNameRule.mLocale",
        "snippet": "        private final Locale mLocale;",
        "begin_line": 1508,
        "end_line": 1508,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.TimeZoneNameRule",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.TimeZoneNameRule.mStyle",
        "snippet": "        private final int mStyle;",
        "begin_line": 1509,
        "end_line": 1509,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.TimeZoneNameRule",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.TimeZoneNameRule.mStandard",
        "snippet": "        private final String mStandard;",
        "begin_line": 1510,
        "end_line": 1510,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.TimeZoneNameRule",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.TimeZoneNameRule.mDaylight",
        "snippet": "        private final String mDaylight;",
        "begin_line": 1511,
        "end_line": 1511,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.TimeZoneNumberRule",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.TimeZoneNumberRule.INSTANCE_COLON",
        "snippet": "        static final TimeZoneNumberRule INSTANCE_COLON = new TimeZoneNumberRule(true);",
        "begin_line": 1575,
        "end_line": 1575,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.TimeZoneNumberRule",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.TimeZoneNumberRule.INSTANCE_NO_COLON",
        "snippet": "        static final TimeZoneNumberRule INSTANCE_NO_COLON = new TimeZoneNumberRule(false);",
        "begin_line": 1576,
        "end_line": 1576,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.TimeZoneNumberRule",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.TimeZoneNumberRule.mColon",
        "snippet": "        final boolean mColon;",
        "begin_line": 1578,
        "end_line": 1578,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.TimeZoneDisplayKey",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.TimeZoneDisplayKey.mTimeZone",
        "snippet": "        private final TimeZone mTimeZone;",
        "begin_line": 1628,
        "end_line": 1628,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.TimeZoneDisplayKey",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.TimeZoneDisplayKey.mStyle",
        "snippet": "        private final int mStyle;",
        "begin_line": 1629,
        "end_line": 1629,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.TimeZoneDisplayKey",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.TimeZoneDisplayKey.mLocale",
        "snippet": "        private final Locale mLocale;",
        "begin_line": 1630,
        "end_line": 1630,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.Pair",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.Pair.mObj1",
        "snippet": "        private final Object mObj1;",
        "begin_line": 1683,
        "end_line": 1683,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.Pair",
        "src_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "signature": "org.apache.commons.lang.time.Pair.mObj2",
        "snippet": "        private final Object mObj2;",
        "begin_line": 1684,
        "end_line": 1684,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.StopWatch",
        "src_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "signature": "org.apache.commons.lang.time.StopWatch.STATE_UNSTARTED",
        "snippet": "    private static final int STATE_UNSTARTED = 0;",
        "begin_line": 53,
        "end_line": 53,
        "comment": " running states"
    },
    {
        "class_name": "org.apache.commons.lang.time.StopWatch",
        "src_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "signature": "org.apache.commons.lang.time.StopWatch.STATE_RUNNING",
        "snippet": "    private static final int STATE_RUNNING   = 1;",
        "begin_line": 54,
        "end_line": 54,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.StopWatch",
        "src_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "signature": "org.apache.commons.lang.time.StopWatch.STATE_STOPPED",
        "snippet": "    private static final int STATE_STOPPED   = 2;",
        "begin_line": 55,
        "end_line": 55,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.StopWatch",
        "src_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "signature": "org.apache.commons.lang.time.StopWatch.STATE_SUSPENDED",
        "snippet": "    private static final int STATE_SUSPENDED = 3;",
        "begin_line": 56,
        "end_line": 56,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.StopWatch",
        "src_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "signature": "org.apache.commons.lang.time.StopWatch.STATE_UNSPLIT",
        "snippet": "    private static final int STATE_UNSPLIT = 10;",
        "begin_line": 59,
        "end_line": 59,
        "comment": " split state"
    },
    {
        "class_name": "org.apache.commons.lang.time.StopWatch",
        "src_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "signature": "org.apache.commons.lang.time.StopWatch.STATE_SPLIT",
        "snippet": "    private static final int STATE_SPLIT   = 11;",
        "begin_line": 60,
        "end_line": 60,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.time.StopWatch",
        "src_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "signature": "org.apache.commons.lang.time.StopWatch.runningState",
        "snippet": "    private int runningState = STATE_UNSTARTED;",
        "begin_line": 65,
        "end_line": 65,
        "comment": "\n     *  The current running state of the StopWatch. \n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.StopWatch",
        "src_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "signature": "org.apache.commons.lang.time.StopWatch.splitState",
        "snippet": "    private int splitState   = STATE_UNSPLIT;",
        "begin_line": 70,
        "end_line": 70,
        "comment": "\n     * Whether the stopwatch has a split time recorded. \n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.StopWatch",
        "src_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "signature": "org.apache.commons.lang.time.StopWatch.startTime",
        "snippet": "    private long startTime = -1;",
        "begin_line": 75,
        "end_line": 75,
        "comment": "\n     * The start time.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.time.StopWatch",
        "src_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "signature": "org.apache.commons.lang.time.StopWatch.stopTime",
        "snippet": "    private long stopTime = -1;",
        "begin_line": 79,
        "end_line": 79,
        "comment": "\n     * The stop time.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ReflectionToStringBuilder",
        "src_path": "src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java",
        "signature": "org.apache.commons.lang.builder.ReflectionToStringBuilder.registry",
        "snippet": "    private static ThreadLocal registry = new ThreadLocal() {\n        protected synchronized Object initialValue() {\n            // The HashSet implementation is not synchronized,\n            // which is just what we need here.\n            return new HashSet();\n        }\n    };",
        "begin_line": 104,
        "end_line": 110,
        "comment": "\n     * <p>\n     * A registry of objects used by <code>reflectionToString</code> methods to detect cyclical object references and\n     * avoid infinite loops.\n     * </p>\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ReflectionToStringBuilder",
        "src_path": "src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java",
        "signature": "org.apache.commons.lang.builder.ReflectionToStringBuilder.appendStatics",
        "snippet": "    private boolean appendStatics = false;",
        "begin_line": 484,
        "end_line": 484,
        "comment": "\n     * Whether or not to append static fields.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ReflectionToStringBuilder",
        "src_path": "src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java",
        "signature": "org.apache.commons.lang.builder.ReflectionToStringBuilder.appendTransients",
        "snippet": "    private boolean appendTransients = false;",
        "begin_line": 489,
        "end_line": 489,
        "comment": "\n     * Whether or not to append transient fields.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ReflectionToStringBuilder",
        "src_path": "src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java",
        "signature": "org.apache.commons.lang.builder.ReflectionToStringBuilder.excludeFieldNames",
        "snippet": "    private String[] excludeFieldNames;",
        "begin_line": 494,
        "end_line": 494,
        "comment": "\n     * Which field names to exclude from output. Intended for fields like <code>\"password\"</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ReflectionToStringBuilder",
        "src_path": "src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java",
        "signature": "org.apache.commons.lang.builder.ReflectionToStringBuilder.upToClass",
        "snippet": "    private Class upToClass = null;",
        "begin_line": 499,
        "end_line": 499,
        "comment": "\n     * The last super class to stop appending fields for.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.EqualsBuilder",
        "src_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "signature": "org.apache.commons.lang.builder.EqualsBuilder.isEquals",
        "snippet": "    private boolean isEquals = true;",
        "begin_line": 93,
        "end_line": 93,
        "comment": "\n     * If the fields tested are equals.\n     * The default value is <code>true</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringBuilder",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringBuilder.java",
        "signature": "org.apache.commons.lang.builder.ToStringBuilder.defaultStyle",
        "snippet": "    private static ToStringStyle defaultStyle = ToStringStyle.DEFAULT_STYLE;",
        "begin_line": 98,
        "end_line": 98,
        "comment": "\n     * The default style of output to use.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringBuilder",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringBuilder.java",
        "signature": "org.apache.commons.lang.builder.ToStringBuilder.buffer",
        "snippet": "    private final StringBuffer buffer;",
        "begin_line": 175,
        "end_line": 175,
        "comment": "\n     * Current toString buffer.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringBuilder",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringBuilder.java",
        "signature": "org.apache.commons.lang.builder.ToStringBuilder.object",
        "snippet": "    private final Object object;",
        "begin_line": 180,
        "end_line": 180,
        "comment": "\n     * The object being output.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringBuilder",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringBuilder.java",
        "signature": "org.apache.commons.lang.builder.ToStringBuilder.style",
        "snippet": "    private final ToStringStyle style;",
        "begin_line": 185,
        "end_line": 185,
        "comment": "\n     * The style of output to use.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.HashCodeBuilder",
        "src_path": "src/java/org/apache/commons/lang/builder/HashCodeBuilder.java",
        "signature": "org.apache.commons.lang.builder.HashCodeBuilder.registry",
        "snippet": "    private static ThreadLocal registry = new ThreadLocal() {\n        protected synchronized Object initialValue() {\n            // The HashSet implementation is not synchronized,\n            // which is just what we need here.\n            return new HashSet();\n        }\n    };",
        "begin_line": 105,
        "end_line": 111,
        "comment": "\n     * <p>\n     * A registry of objects used by reflection methods to detect cyclical object references and avoid infinite loops.\n     * </p>\n     * \n     * @since 2.3\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.HashCodeBuilder",
        "src_path": "src/java/org/apache/commons/lang/builder/HashCodeBuilder.java",
        "signature": "org.apache.commons.lang.builder.HashCodeBuilder.iConstant",
        "snippet": "    private final int iConstant;",
        "begin_line": 543,
        "end_line": 543,
        "comment": "\n     * Constant to use in building the hashCode.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.HashCodeBuilder",
        "src_path": "src/java/org/apache/commons/lang/builder/HashCodeBuilder.java",
        "signature": "org.apache.commons.lang.builder.HashCodeBuilder.iTotal",
        "snippet": "    private int iTotal = 0;",
        "begin_line": 548,
        "end_line": 548,
        "comment": "\n     * Running total of the hashCode.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.CompareToBuilder",
        "src_path": "src/java/org/apache/commons/lang/builder/CompareToBuilder.java",
        "signature": "org.apache.commons.lang.builder.CompareToBuilder.comparison",
        "snippet": "    private int comparison;",
        "begin_line": 100,
        "end_line": 100,
        "comment": "\n     * Current state of the comparison as appended fields are checked.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.StandardToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/StandardToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.StandardToStringStyle.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1L;",
        "begin_line": 41,
        "end_line": 41,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.DEFAULT_STYLE",
        "snippet": "    public static final ToStringStyle DEFAULT_STYLE = new DefaultToStringStyle();",
        "begin_line": 74,
        "end_line": 74,
        "comment": "\n     * The default toString style.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.MULTI_LINE_STYLE",
        "snippet": "    public static final ToStringStyle MULTI_LINE_STYLE = new MultiLineToStringStyle();",
        "begin_line": 79,
        "end_line": 79,
        "comment": "\n     * The multi line toString style.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.NO_FIELD_NAMES_STYLE",
        "snippet": "    public static final ToStringStyle NO_FIELD_NAMES_STYLE = new NoFieldNameToStringStyle();",
        "begin_line": 84,
        "end_line": 84,
        "comment": "\n     * The no field names toString style.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.SHORT_PREFIX_STYLE",
        "snippet": "    public static final ToStringStyle SHORT_PREFIX_STYLE = new ShortPrefixToStringStyle();",
        "begin_line": 90,
        "end_line": 90,
        "comment": "\n     * The short prefix toString style.\n     * @since 2.1\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.SIMPLE_STYLE",
        "snippet": "    public static final ToStringStyle SIMPLE_STYLE = new SimpleToStringStyle();",
        "begin_line": 95,
        "end_line": 95,
        "comment": "\n     * The simple toString style.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.useFieldNames",
        "snippet": "    private boolean useFieldNames = true;",
        "begin_line": 100,
        "end_line": 100,
        "comment": "\n     * Whether to use the field names, the default is <code>true</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.useClassName",
        "snippet": "    private boolean useClassName = true;",
        "begin_line": 105,
        "end_line": 105,
        "comment": "\n     * Whether to use the class name, the default is <code>true</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.useShortClassName",
        "snippet": "    private boolean useShortClassName = false;",
        "begin_line": 110,
        "end_line": 110,
        "comment": "\n     * Whether to use short class names, the default is <code>false</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.useIdentityHashCode",
        "snippet": "    private boolean useIdentityHashCode = true;",
        "begin_line": 115,
        "end_line": 115,
        "comment": "\n     * Whether to use the identity hash code, the default is <code>true</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.contentStart",
        "snippet": "    private String contentStart = \"[\";",
        "begin_line": 120,
        "end_line": 120,
        "comment": "\n     * The content start <code>'['</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.contentEnd",
        "snippet": "    private String contentEnd = \"]\";",
        "begin_line": 125,
        "end_line": 125,
        "comment": "\n     * The content end <code>']'</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.fieldNameValueSeparator",
        "snippet": "    private String fieldNameValueSeparator = \"=\";",
        "begin_line": 130,
        "end_line": 130,
        "comment": "\n     * The field name value separator <code>'='</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.fieldSeparatorAtStart",
        "snippet": "    private boolean fieldSeparatorAtStart = false;",
        "begin_line": 135,
        "end_line": 135,
        "comment": "\n     * Whether the field separator should be added before any other fields.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.fieldSeparatorAtEnd",
        "snippet": "    private boolean fieldSeparatorAtEnd = false;",
        "begin_line": 140,
        "end_line": 140,
        "comment": "\n     * Whether the field separator should be added after any other fields.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.fieldSeparator",
        "snippet": "    private String fieldSeparator = \",\";",
        "begin_line": 145,
        "end_line": 145,
        "comment": "\n     * The field separator <code>','</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.arrayStart",
        "snippet": "    private String arrayStart = \"{\";",
        "begin_line": 150,
        "end_line": 150,
        "comment": "\n     * The array start <code>'{'</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.arraySeparator",
        "snippet": "    private String arraySeparator = \",\";",
        "begin_line": 155,
        "end_line": 155,
        "comment": "\n     * The array separator <code>','</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.arrayContentDetail",
        "snippet": "    private boolean arrayContentDetail = true;",
        "begin_line": 160,
        "end_line": 160,
        "comment": "\n     * The detail for array content.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.arrayEnd",
        "snippet": "    private String arrayEnd = \"}\";",
        "begin_line": 165,
        "end_line": 165,
        "comment": "\n     * The array end <code>'}'</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.defaultFullDetail",
        "snippet": "    private boolean defaultFullDetail = true;",
        "begin_line": 171,
        "end_line": 171,
        "comment": "\n     * The value to use when fullDetail is <code>null</code>,\n     * the default value is <code>true</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.nullText",
        "snippet": "    private String nullText = \"<null>\";",
        "begin_line": 176,
        "end_line": 176,
        "comment": "\n     * The <code>null</code> text <code>'&lt;null&gt;'</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.sizeStartText",
        "snippet": "    private String sizeStartText = \"<size=\";",
        "begin_line": 181,
        "end_line": 181,
        "comment": "\n     * The summary size text start <code>'<size'</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.sizeEndText",
        "snippet": "    private String sizeEndText = \">\";",
        "begin_line": 186,
        "end_line": 186,
        "comment": "\n     * The summary size text start <code>'&gt;'</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.summaryObjectStartText",
        "snippet": "    private String summaryObjectStartText = \"<\";",
        "begin_line": 191,
        "end_line": 191,
        "comment": "\n     * The summary object text start <code>'&lt;'</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.ToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ToStringStyle.summaryObjectEndText",
        "snippet": "    private String summaryObjectEndText = \">\";",
        "begin_line": 196,
        "end_line": 196,
        "comment": "\n     * The summary object text start <code>'&gt;'</code>.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.builder.DefaultToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.DefaultToStringStyle.serialVersionUID",
        "snippet": "        private static final long serialVersionUID = 1L;",
        "begin_line": 1990,
        "end_line": 1990,
        "comment": "\n         * Required for serialization support.\n         * \n         * @see java.io.Serializable\n         "
    },
    {
        "class_name": "org.apache.commons.lang.builder.NoFieldNameToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.NoFieldNameToStringStyle.serialVersionUID",
        "snippet": "        private static final long serialVersionUID = 1L;",
        "begin_line": 2023,
        "end_line": 2023,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.builder.ShortPrefixToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.ShortPrefixToStringStyle.serialVersionUID",
        "snippet": "        private static final long serialVersionUID = 1L;",
        "begin_line": 2057,
        "end_line": 2057,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.builder.SimpleToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.SimpleToStringStyle.serialVersionUID",
        "snippet": "        private static final long serialVersionUID = 1L;",
        "begin_line": 2089,
        "end_line": 2089,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.builder.MultiLineToStringStyle",
        "src_path": "src/java/org/apache/commons/lang/builder/ToStringStyle.java",
        "signature": "org.apache.commons.lang.builder.MultiLineToStringStyle.serialVersionUID",
        "snippet": "        private static final long serialVersionUID = 1L;",
        "begin_line": 2125,
        "end_line": 2125,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.lang.mutable.MutableLong",
        "src_path": "src/java/org/apache/commons/lang/mutable/MutableLong.java",
        "signature": "org.apache.commons.lang.mutable.MutableLong.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 62986528375L;",
        "begin_line": 33,
        "end_line": 33,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.mutable.MutableLong",
        "src_path": "src/java/org/apache/commons/lang/mutable/MutableLong.java",
        "signature": "org.apache.commons.lang.mutable.MutableLong.value",
        "snippet": "    private long value;",
        "begin_line": 36,
        "end_line": 36,
        "comment": " The mutable value. "
    },
    {
        "class_name": "org.apache.commons.lang.mutable.MutableObject",
        "src_path": "src/java/org/apache/commons/lang/mutable/MutableObject.java",
        "signature": "org.apache.commons.lang.mutable.MutableObject.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 86241875189L;",
        "begin_line": 35,
        "end_line": 35,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.mutable.MutableObject",
        "src_path": "src/java/org/apache/commons/lang/mutable/MutableObject.java",
        "signature": "org.apache.commons.lang.mutable.MutableObject.value",
        "snippet": "    private Object value;",
        "begin_line": 38,
        "end_line": 38,
        "comment": " The mutable value. "
    },
    {
        "class_name": "org.apache.commons.lang.mutable.MutableShort",
        "src_path": "src/java/org/apache/commons/lang/mutable/MutableShort.java",
        "signature": "org.apache.commons.lang.mutable.MutableShort.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -2135791679L;",
        "begin_line": 33,
        "end_line": 33,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.mutable.MutableShort",
        "src_path": "src/java/org/apache/commons/lang/mutable/MutableShort.java",
        "signature": "org.apache.commons.lang.mutable.MutableShort.value",
        "snippet": "    private short value;",
        "begin_line": 36,
        "end_line": 36,
        "comment": " The mutable value. "
    },
    {
        "class_name": "org.apache.commons.lang.mutable.MutableByte",
        "src_path": "src/java/org/apache/commons/lang/mutable/MutableByte.java",
        "signature": "org.apache.commons.lang.mutable.MutableByte.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -1585823265L;",
        "begin_line": 33,
        "end_line": 33,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.mutable.MutableByte",
        "src_path": "src/java/org/apache/commons/lang/mutable/MutableByte.java",
        "signature": "org.apache.commons.lang.mutable.MutableByte.value",
        "snippet": "    private byte value;",
        "begin_line": 36,
        "end_line": 36,
        "comment": " The mutable value. "
    },
    {
        "class_name": "org.apache.commons.lang.mutable.MutableFloat",
        "src_path": "src/java/org/apache/commons/lang/mutable/MutableFloat.java",
        "signature": "org.apache.commons.lang.mutable.MutableFloat.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 5787169186L;",
        "begin_line": 35,
        "end_line": 35,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.mutable.MutableFloat",
        "src_path": "src/java/org/apache/commons/lang/mutable/MutableFloat.java",
        "signature": "org.apache.commons.lang.mutable.MutableFloat.value",
        "snippet": "    private float value;",
        "begin_line": 38,
        "end_line": 38,
        "comment": " The mutable value. "
    },
    {
        "class_name": "org.apache.commons.lang.mutable.MutableDouble",
        "src_path": "src/java/org/apache/commons/lang/mutable/MutableDouble.java",
        "signature": "org.apache.commons.lang.mutable.MutableDouble.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1587163916L;",
        "begin_line": 35,
        "end_line": 35,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.mutable.MutableDouble",
        "src_path": "src/java/org/apache/commons/lang/mutable/MutableDouble.java",
        "signature": "org.apache.commons.lang.mutable.MutableDouble.value",
        "snippet": "    private double value;",
        "begin_line": 38,
        "end_line": 38,
        "comment": " The mutable value. "
    },
    {
        "class_name": "org.apache.commons.lang.mutable.MutableInt",
        "src_path": "src/java/org/apache/commons/lang/mutable/MutableInt.java",
        "signature": "org.apache.commons.lang.mutable.MutableInt.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 512176391864L;",
        "begin_line": 33,
        "end_line": 33,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.mutable.MutableInt",
        "src_path": "src/java/org/apache/commons/lang/mutable/MutableInt.java",
        "signature": "org.apache.commons.lang.mutable.MutableInt.value",
        "snippet": "    private int value;",
        "begin_line": 36,
        "end_line": 36,
        "comment": " The mutable value. "
    },
    {
        "class_name": "org.apache.commons.lang.mutable.MutableBoolean",
        "src_path": "src/java/org/apache/commons/lang/mutable/MutableBoolean.java",
        "signature": "org.apache.commons.lang.mutable.MutableBoolean.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -4830728138360036487L;",
        "begin_line": 37,
        "end_line": 37,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.mutable.MutableBoolean",
        "src_path": "src/java/org/apache/commons/lang/mutable/MutableBoolean.java",
        "signature": "org.apache.commons.lang.mutable.MutableBoolean.value",
        "snippet": "    private boolean value;",
        "begin_line": 40,
        "end_line": 40,
        "comment": " The mutable value. "
    },
    {
        "class_name": "org.apache.commons.lang.math.RandomUtils",
        "src_path": "src/java/org/apache/commons/lang/math/RandomUtils.java",
        "signature": "org.apache.commons.lang.math.RandomUtils.JVM_RANDOM",
        "snippet": "    public static final Random JVM_RANDOM = new JVMRandom();",
        "begin_line": 37,
        "end_line": 37,
        "comment": "\n     * An instance of {@link JVMRandom}.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.JVMRandom",
        "src_path": "src/java/org/apache/commons/lang/math/JVMRandom.java",
        "signature": "org.apache.commons.lang.math.JVMRandom.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1L;",
        "begin_line": 38,
        "end_line": 38,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.JVMRandom",
        "src_path": "src/java/org/apache/commons/lang/math/JVMRandom.java",
        "signature": "org.apache.commons.lang.math.JVMRandom.constructed",
        "snippet": "    private boolean constructed = false;",
        "begin_line": 43,
        "end_line": 43,
        "comment": "\n     * Ensures that only the constructor can call reseed.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.LongRange",
        "src_path": "src/java/org/apache/commons/lang/math/LongRange.java",
        "signature": "org.apache.commons.lang.math.LongRange.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 71849363892720L;",
        "begin_line": 35,
        "end_line": 35,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.LongRange",
        "src_path": "src/java/org/apache/commons/lang/math/LongRange.java",
        "signature": "org.apache.commons.lang.math.LongRange.min",
        "snippet": "    private final long min;",
        "begin_line": 40,
        "end_line": 40,
        "comment": "\n     * The minimum number in this range (inclusive).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.LongRange",
        "src_path": "src/java/org/apache/commons/lang/math/LongRange.java",
        "signature": "org.apache.commons.lang.math.LongRange.max",
        "snippet": "    private final long max;",
        "begin_line": 44,
        "end_line": 44,
        "comment": "\n     * The maximum number in this range (inclusive).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.LongRange",
        "src_path": "src/java/org/apache/commons/lang/math/LongRange.java",
        "signature": "org.apache.commons.lang.math.LongRange.minObject",
        "snippet": "    private transient Long minObject = null;",
        "begin_line": 49,
        "end_line": 49,
        "comment": "\n     * Cached output minObject (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.LongRange",
        "src_path": "src/java/org/apache/commons/lang/math/LongRange.java",
        "signature": "org.apache.commons.lang.math.LongRange.maxObject",
        "snippet": "    private transient Long maxObject = null;",
        "begin_line": 53,
        "end_line": 53,
        "comment": "\n     * Cached output maxObject (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.LongRange",
        "src_path": "src/java/org/apache/commons/lang/math/LongRange.java",
        "signature": "org.apache.commons.lang.math.LongRange.hashCode",
        "snippet": "    private transient int hashCode = 0;",
        "begin_line": 57,
        "end_line": 57,
        "comment": "\n     * Cached output hashCode (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.LongRange",
        "src_path": "src/java/org/apache/commons/lang/math/LongRange.java",
        "signature": "org.apache.commons.lang.math.LongRange.toString",
        "snippet": "    private transient String toString = null;",
        "begin_line": 61,
        "end_line": 61,
        "comment": "\n     * Cached output toString (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.IntRange",
        "src_path": "src/java/org/apache/commons/lang/math/IntRange.java",
        "signature": "org.apache.commons.lang.math.IntRange.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 71849363892730L;",
        "begin_line": 35,
        "end_line": 35,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.IntRange",
        "src_path": "src/java/org/apache/commons/lang/math/IntRange.java",
        "signature": "org.apache.commons.lang.math.IntRange.min",
        "snippet": "    private final int min;",
        "begin_line": 40,
        "end_line": 40,
        "comment": "\n     * The minimum number in this range (inclusive).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.IntRange",
        "src_path": "src/java/org/apache/commons/lang/math/IntRange.java",
        "signature": "org.apache.commons.lang.math.IntRange.max",
        "snippet": "    private final int max;",
        "begin_line": 44,
        "end_line": 44,
        "comment": "\n     * The maximum number in this range (inclusive).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.IntRange",
        "src_path": "src/java/org/apache/commons/lang/math/IntRange.java",
        "signature": "org.apache.commons.lang.math.IntRange.minObject",
        "snippet": "    private transient Integer minObject = null;",
        "begin_line": 49,
        "end_line": 49,
        "comment": "\n     * Cached output minObject (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.IntRange",
        "src_path": "src/java/org/apache/commons/lang/math/IntRange.java",
        "signature": "org.apache.commons.lang.math.IntRange.maxObject",
        "snippet": "    private transient Integer maxObject = null;",
        "begin_line": 53,
        "end_line": 53,
        "comment": "\n     * Cached output maxObject (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.IntRange",
        "src_path": "src/java/org/apache/commons/lang/math/IntRange.java",
        "signature": "org.apache.commons.lang.math.IntRange.hashCode",
        "snippet": "    private transient int hashCode = 0;",
        "begin_line": 57,
        "end_line": 57,
        "comment": "\n     * Cached output hashCode (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.IntRange",
        "src_path": "src/java/org/apache/commons/lang/math/IntRange.java",
        "signature": "org.apache.commons.lang.math.IntRange.toString",
        "snippet": "    private transient String toString = null;",
        "begin_line": 61,
        "end_line": 61,
        "comment": "\n     * Cached output toString (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.DoubleRange",
        "src_path": "src/java/org/apache/commons/lang/math/DoubleRange.java",
        "signature": "org.apache.commons.lang.math.DoubleRange.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 71849363892740L;",
        "begin_line": 35,
        "end_line": 35,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.DoubleRange",
        "src_path": "src/java/org/apache/commons/lang/math/DoubleRange.java",
        "signature": "org.apache.commons.lang.math.DoubleRange.min",
        "snippet": "    private final double min;",
        "begin_line": 40,
        "end_line": 40,
        "comment": "\n     * The minimum number in this range (inclusive).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.DoubleRange",
        "src_path": "src/java/org/apache/commons/lang/math/DoubleRange.java",
        "signature": "org.apache.commons.lang.math.DoubleRange.max",
        "snippet": "    private final double max;",
        "begin_line": 44,
        "end_line": 44,
        "comment": "\n     * The maximum number in this range (inclusive).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.DoubleRange",
        "src_path": "src/java/org/apache/commons/lang/math/DoubleRange.java",
        "signature": "org.apache.commons.lang.math.DoubleRange.minObject",
        "snippet": "    private transient Double minObject = null;",
        "begin_line": 49,
        "end_line": 49,
        "comment": "\n     * Cached output minObject (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.DoubleRange",
        "src_path": "src/java/org/apache/commons/lang/math/DoubleRange.java",
        "signature": "org.apache.commons.lang.math.DoubleRange.maxObject",
        "snippet": "    private transient Double maxObject = null;",
        "begin_line": 53,
        "end_line": 53,
        "comment": "\n     * Cached output maxObject (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.DoubleRange",
        "src_path": "src/java/org/apache/commons/lang/math/DoubleRange.java",
        "signature": "org.apache.commons.lang.math.DoubleRange.hashCode",
        "snippet": "    private transient int hashCode = 0;",
        "begin_line": 57,
        "end_line": 57,
        "comment": "\n     * Cached output hashCode (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.DoubleRange",
        "src_path": "src/java/org/apache/commons/lang/math/DoubleRange.java",
        "signature": "org.apache.commons.lang.math.DoubleRange.toString",
        "snippet": "    private transient String toString = null;",
        "begin_line": 61,
        "end_line": 61,
        "comment": "\n     * Cached output toString (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.Fraction",
        "src_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "signature": "org.apache.commons.lang.math.Fraction.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 65382027393090L;",
        "begin_line": 43,
        "end_line": 43,
        "comment": "\n     * Required for serialization support. Lang version 2.0.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.Fraction",
        "src_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "signature": "org.apache.commons.lang.math.Fraction.ZERO",
        "snippet": "    public static final Fraction ZERO = new Fraction(0, 1);",
        "begin_line": 48,
        "end_line": 48,
        "comment": "\n     * <code>Fraction</code> representation of 0.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.Fraction",
        "src_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "signature": "org.apache.commons.lang.math.Fraction.ONE",
        "snippet": "    public static final Fraction ONE = new Fraction(1, 1);",
        "begin_line": 52,
        "end_line": 52,
        "comment": "\n     * <code>Fraction</code> representation of 1.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.Fraction",
        "src_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "signature": "org.apache.commons.lang.math.Fraction.ONE_HALF",
        "snippet": "    public static final Fraction ONE_HALF = new Fraction(1, 2);",
        "begin_line": 56,
        "end_line": 56,
        "comment": "\n     * <code>Fraction</code> representation of 1/2.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.Fraction",
        "src_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "signature": "org.apache.commons.lang.math.Fraction.ONE_THIRD",
        "snippet": "    public static final Fraction ONE_THIRD = new Fraction(1, 3);",
        "begin_line": 60,
        "end_line": 60,
        "comment": "\n     * <code>Fraction</code> representation of 1/3.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.Fraction",
        "src_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "signature": "org.apache.commons.lang.math.Fraction.TWO_THIRDS",
        "snippet": "    public static final Fraction TWO_THIRDS = new Fraction(2, 3);",
        "begin_line": 64,
        "end_line": 64,
        "comment": "\n     * <code>Fraction</code> representation of 2/3.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.Fraction",
        "src_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "signature": "org.apache.commons.lang.math.Fraction.ONE_QUARTER",
        "snippet": "    public static final Fraction ONE_QUARTER = new Fraction(1, 4);",
        "begin_line": 68,
        "end_line": 68,
        "comment": "\n     * <code>Fraction</code> representation of 1/4.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.Fraction",
        "src_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "signature": "org.apache.commons.lang.math.Fraction.TWO_QUARTERS",
        "snippet": "    public static final Fraction TWO_QUARTERS = new Fraction(2, 4);",
        "begin_line": 72,
        "end_line": 72,
        "comment": "\n     * <code>Fraction</code> representation of 2/4.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.Fraction",
        "src_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "signature": "org.apache.commons.lang.math.Fraction.THREE_QUARTERS",
        "snippet": "    public static final Fraction THREE_QUARTERS = new Fraction(3, 4);",
        "begin_line": 76,
        "end_line": 76,
        "comment": "\n     * <code>Fraction</code> representation of 3/4.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.Fraction",
        "src_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "signature": "org.apache.commons.lang.math.Fraction.ONE_FIFTH",
        "snippet": "    public static final Fraction ONE_FIFTH = new Fraction(1, 5);",
        "begin_line": 80,
        "end_line": 80,
        "comment": "\n     * <code>Fraction</code> representation of 1/5.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.Fraction",
        "src_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "signature": "org.apache.commons.lang.math.Fraction.TWO_FIFTHS",
        "snippet": "    public static final Fraction TWO_FIFTHS = new Fraction(2, 5);",
        "begin_line": 84,
        "end_line": 84,
        "comment": "\n     * <code>Fraction</code> representation of 2/5.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.Fraction",
        "src_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "signature": "org.apache.commons.lang.math.Fraction.THREE_FIFTHS",
        "snippet": "    public static final Fraction THREE_FIFTHS = new Fraction(3, 5);",
        "begin_line": 88,
        "end_line": 88,
        "comment": "\n     * <code>Fraction</code> representation of 3/5.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.Fraction",
        "src_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "signature": "org.apache.commons.lang.math.Fraction.FOUR_FIFTHS",
        "snippet": "    public static final Fraction FOUR_FIFTHS = new Fraction(4, 5);",
        "begin_line": 92,
        "end_line": 92,
        "comment": "\n     * <code>Fraction</code> representation of 4/5.\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.Fraction",
        "src_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "signature": "org.apache.commons.lang.math.Fraction.numerator",
        "snippet": "    private final int numerator;",
        "begin_line": 98,
        "end_line": 98,
        "comment": "\n     * The numerator number part of the fraction (the three in three sevenths).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.Fraction",
        "src_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "signature": "org.apache.commons.lang.math.Fraction.denominator",
        "snippet": "    private final int denominator;",
        "begin_line": 102,
        "end_line": 102,
        "comment": "\n     * The denominator number part of the fraction (the seven in three sevenths).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.Fraction",
        "src_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "signature": "org.apache.commons.lang.math.Fraction.hashCode",
        "snippet": "    private transient int hashCode = 0;",
        "begin_line": 107,
        "end_line": 107,
        "comment": "\n     * Cached output hashCode (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.Fraction",
        "src_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "signature": "org.apache.commons.lang.math.Fraction.toString",
        "snippet": "    private transient String toString = null;",
        "begin_line": 111,
        "end_line": 111,
        "comment": "\n     * Cached output toString (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.Fraction",
        "src_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "signature": "org.apache.commons.lang.math.Fraction.toProperString",
        "snippet": "    private transient String toProperString = null;",
        "begin_line": 115,
        "end_line": 115,
        "comment": "\n     * Cached output toProperString (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.FloatRange",
        "src_path": "src/java/org/apache/commons/lang/math/FloatRange.java",
        "signature": "org.apache.commons.lang.math.FloatRange.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 71849363892750L;",
        "begin_line": 35,
        "end_line": 35,
        "comment": "\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.FloatRange",
        "src_path": "src/java/org/apache/commons/lang/math/FloatRange.java",
        "signature": "org.apache.commons.lang.math.FloatRange.min",
        "snippet": "    private final float min;",
        "begin_line": 40,
        "end_line": 40,
        "comment": "\n     * The minimum number in this range (inclusive).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.FloatRange",
        "src_path": "src/java/org/apache/commons/lang/math/FloatRange.java",
        "signature": "org.apache.commons.lang.math.FloatRange.max",
        "snippet": "    private final float max;",
        "begin_line": 44,
        "end_line": 44,
        "comment": "\n     * The maximum number in this range (inclusive).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.FloatRange",
        "src_path": "src/java/org/apache/commons/lang/math/FloatRange.java",
        "signature": "org.apache.commons.lang.math.FloatRange.minObject",
        "snippet": "    private transient Float minObject = null;",
        "begin_line": 49,
        "end_line": 49,
        "comment": "\n     * Cached output minObject (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.FloatRange",
        "src_path": "src/java/org/apache/commons/lang/math/FloatRange.java",
        "signature": "org.apache.commons.lang.math.FloatRange.maxObject",
        "snippet": "    private transient Float maxObject = null;",
        "begin_line": 53,
        "end_line": 53,
        "comment": "\n     * Cached output maxObject (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.FloatRange",
        "src_path": "src/java/org/apache/commons/lang/math/FloatRange.java",
        "signature": "org.apache.commons.lang.math.FloatRange.hashCode",
        "snippet": "    private transient int hashCode = 0;",
        "begin_line": 57,
        "end_line": 57,
        "comment": "\n     * Cached output hashCode (class is immutable).\n     "
    },
    {
        "class_name": "org.apache.commons.lang.math.FloatRange",
        "src_path": "src/java/org/apache/commons/lang/math/FloatRange.java",
        "signature": "org.apache.commons.lang.math.FloatRange.toString",
        "snippet": "    private transient String toString = null;",
        "begin_line": 61,
        "end_line": 61,
        "comment": "\n     * Cached output toString (class is immutable).\n     "
    }
]